<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group___r_c_c___h_s_e___configuration" kind="group">
    <compoundname>RCC_HSE_Configuration</compoundname>
    <title>HSE Configuration</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___r_c_c___h_s_e___configuration_1gaa3d98648399f15d02645ef84f6ca8e4b" prot="public" static="no">
        <name>__HAL_RCC_HSE_CONFIG</name>
        <param><defname>__STATE__</defname></param>
        <initializer>                    do{                                                     \
                      if ((__STATE__) == <ref refid="group___r_c_c___h_s_e___config_1gabc4f70a44776c557af20496b04d9a9db" kindref="member">RCC_HSE_ON</ref>)                        \
                      {                                                     \
                        SET_BIT(RCC-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);                     \
                      }                                                     \
                      else if ((__STATE__) == <ref refid="group___r_c_c___h_s_e___config_1ga1616626d23fbce440398578855df6f97" kindref="member">RCC_HSE_OFF</ref>)                  \
                      {                                                     \
                        CLEAR_BIT(RCC-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);                   \
                        CLEAR_BIT(RCC-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>);                  \
                      }                                                     \
                      else if ((__STATE__) == <ref refid="group___r_c_c___h_s_e___config_1ga5ca515db2d5c4d5bdb9ee3d154df2704" kindref="member">RCC_HSE_BYPASS</ref>)               \
                      {                                                     \
                        SET_BIT(RCC-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>);                    \
                        SET_BIT(RCC-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);                     \
                      }                                                     \
                      else                                                  \
                      {                                                     \
                        CLEAR_BIT(RCC-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);                   \
                        CLEAR_BIT(RCC-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>);                  \
                      }                                                     \
                    }while(0U)</initializer>
        <briefdescription>
<para>Macro to configure the External High Speed oscillator (HSE). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not supported by this macro. User should request a transition to HSE Off first and then HSE On or HSE Bypass. </para>
</simplesect>
<simplesect kind="note"><para>After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application software should wait on HSERDY flag to be set indicating that HSE clock is stable and can be used to clock the PLL and/or system clock. </para>
</simplesect>
<simplesect kind="note"><para>HSE state can not be changed if it is used directly or through the PLL as system clock. In this case, you have to select another source of the system clock then change the HSE state (ex. disable it). </para>
</simplesect>
<simplesect kind="note"><para>The HSE is stopped by hardware when entering STOP and STANDBY modes. </para>
</simplesect>
<simplesect kind="note"><para>This function reset the CSSON bit, so if the clock security system(CSS) was previously enabled you have to enable it again after calling this function. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;STATE&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the HSE. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___h_s_e___config_1ga1616626d23fbce440398578855df6f97" kindref="member">RCC_HSE_OFF</ref> turn OFF the HSE oscillator, HSERDY flag goes low after 6 HSE oscillator clock cycles. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_e___config_1gabc4f70a44776c557af20496b04d9a9db" kindref="member">RCC_HSE_ON</ref> turn ON the HSE oscillator </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_e___config_1ga5ca515db2d5c4d5bdb9ee3d154df2704" kindref="member">RCC_HSE_BYPASS</ref> HSE oscillator bypassed with external clock </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="752" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
