<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mpu__prototypes_8h" kind="file" language="C++">
    <compoundname>mpu_prototypes.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="mpu__prototypes_8h_1ab398b427fef9bf74da0a35bc6d9f579f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCreate</definition>
        <argsstring>(TaskFunction_t pxTaskCode, const char *const pcName, const uint16_t usStackDepth, void *const pvParameters, UBaseType_t uxPriority, TaskHandle_t *const pxCreatedTask)</argsstring>
        <name>MPU_xTaskCreate</name>
        <param>
          <type>TaskFunction_t</type>
          <declname>pxTaskCode</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>pcName</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>usStackDepth</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvParameters</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxPriority</declname>
        </param>
        <param>
          <type>TaskHandle_t *const</type>
          <declname>pxCreatedTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="41" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="41" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a0f67aaac775a1ab6c63078290788a70a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t MPU_xTaskCreateStatic</definition>
        <argsstring>(TaskFunction_t pxTaskCode, const char *const pcName, const uint32_t ulStackDepth, void *const pvParameters, UBaseType_t uxPriority, StackType_t *const puxStackBuffer, StaticTask_t *const pxTaskBuffer)</argsstring>
        <name>MPU_xTaskCreateStatic</name>
        <param>
          <type>TaskFunction_t</type>
          <declname>pxTaskCode</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>pcName</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>ulStackDepth</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvParameters</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxPriority</declname>
        </param>
        <param>
          <type>StackType_t *const</type>
          <declname>puxStackBuffer</declname>
        </param>
        <param>
          <type><ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref> *const</type>
          <declname>pxTaskBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="42" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="42" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5d01951fdc30c9d8ec5769dbf7e4cb73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCreateRestricted</definition>
        <argsstring>(const TaskParameters_t *const pxTaskDefinition, TaskHandle_t *pxCreatedTask)</argsstring>
        <name>MPU_xTaskCreateRestricted</name>
        <param>
          <type>const <ref refid="structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s" kindref="compound">TaskParameters_t</ref> *const</type>
          <declname>pxTaskDefinition</declname>
        </param>
        <param>
          <type>TaskHandle_t *</type>
          <declname>pxCreatedTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="43" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="43" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a228726faa715ba7973ccb8f33eb9d3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCreateRestrictedStatic</definition>
        <argsstring>(const TaskParameters_t *const pxTaskDefinition, TaskHandle_t *pxCreatedTask)</argsstring>
        <name>MPU_xTaskCreateRestrictedStatic</name>
        <param>
          <type>const <ref refid="structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s" kindref="compound">TaskParameters_t</ref> *const</type>
          <declname>pxTaskDefinition</declname>
        </param>
        <param>
          <type>TaskHandle_t *</type>
          <declname>pxCreatedTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="44" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="44" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a30fdebf169fd619aa35345230bb75def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskAllocateMPURegions</definition>
        <argsstring>(TaskHandle_t xTask, const MemoryRegion_t *const pxRegions)</argsstring>
        <name>MPU_vTaskAllocateMPURegions</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>const <ref refid="structx_m_e_m_o_r_y___r_e_g_i_o_n" kindref="compound">MemoryRegion_t</ref> *const</type>
          <declname>pxRegions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="45" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac5c3cd71060ea71050e781e143cd5003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskDelete</definition>
        <argsstring>(TaskHandle_t xTaskToDelete)</argsstring>
        <name>MPU_vTaskDelete</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTaskToDelete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="46" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a95915885a0b1cf3c0f5fb79819014be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskDelay</definition>
        <argsstring>(const TickType_t xTicksToDelay)</argsstring>
        <name>MPU_vTaskDelay</name>
        <param>
          <type>const TickType_t</type>
          <declname>xTicksToDelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="47" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a32dd18780d43532836f4a44cbdf96e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskDelayUntil</definition>
        <argsstring>(TickType_t *const pxPreviousWakeTime, const TickType_t xTimeIncrement)</argsstring>
        <name>MPU_vTaskDelayUntil</name>
        <param>
          <type>TickType_t *const</type>
          <declname>pxPreviousWakeTime</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTimeIncrement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="48" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a616921f57805fb89c714e9ea10d07285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskAbortDelay</definition>
        <argsstring>(TaskHandle_t xTask)</argsstring>
        <name>MPU_xTaskAbortDelay</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="49" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="49" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac690d9e5e82b1c019148e91a4323f645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskPriorityGet</definition>
        <argsstring>(TaskHandle_t xTask)</argsstring>
        <name>MPU_uxTaskPriorityGet</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="50" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="50" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a20dc7dbee0601e613e42ca3daab9cd3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eTaskState</type>
        <definition>eTaskState MPU_eTaskGetState</definition>
        <argsstring>(TaskHandle_t xTask)</argsstring>
        <name>MPU_eTaskGetState</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="51" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="51" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1addc0cc7036810a287e2120b8675b3990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskGetInfo</definition>
        <argsstring>(TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState)</argsstring>
        <name>MPU_vTaskGetInfo</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <param>
          <type><ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref> *</type>
          <declname>pxTaskStatus</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xGetFreeStackSpace</declname>
        </param>
        <param>
          <type>eTaskState</type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="52" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab21b1039322e6ea18b78c71eb1792560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskPrioritySet</definition>
        <argsstring>(TaskHandle_t xTask, UBaseType_t uxNewPriority)</argsstring>
        <name>MPU_vTaskPrioritySet</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxNewPriority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="53" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6a0a83ecdcea32afda645ace5b789f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSuspend</definition>
        <argsstring>(TaskHandle_t xTaskToSuspend)</argsstring>
        <name>MPU_vTaskSuspend</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTaskToSuspend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="54" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a119b81b9c3f0ecb47965be3f5755c67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskResume</definition>
        <argsstring>(TaskHandle_t xTaskToResume)</argsstring>
        <name>MPU_vTaskResume</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTaskToResume</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="55" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1af6104c07df1a22cfb6fc0aa86f3428a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskStartScheduler</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_vTaskStartScheduler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="56" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5a89966e24025e52ea10166ce2c492d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSuspendAll</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_vTaskSuspendAll</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="57" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aa43b421a9eff441d0a850998551b17b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskResumeAll</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTaskResumeAll</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="58" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="58" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3b24e0327b39b868b91ff031fbdab048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TickType_t</type>
        <definition>TickType_t MPU_xTaskGetTickCount</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTaskGetTickCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="59" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="59" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a46b9dfbf8afce7ac947cb5be9bf381fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskGetNumberOfTasks</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_uxTaskGetNumberOfTasks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="60" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="60" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a0a39a60680b18b8b9c650a3d38af4f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* MPU_pcTaskGetName</definition>
        <argsstring>(TaskHandle_t xTaskToQuery)</argsstring>
        <name>MPU_pcTaskGetName</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTaskToQuery</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="61" column="7" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="61" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a4307ba52bbf9ccedfef5a7de04dbc533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t MPU_xTaskGetHandle</definition>
        <argsstring>(const char *pcNameToQuery)</argsstring>
        <name>MPU_xTaskGetHandle</name>
        <param>
          <type>const char *</type>
          <declname>pcNameToQuery</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="62" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="62" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a8632f94de0402fb5e8fd8cd7c6d2456a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskGetStackHighWaterMark</definition>
        <argsstring>(TaskHandle_t xTask)</argsstring>
        <name>MPU_uxTaskGetStackHighWaterMark</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="63" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="63" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a1f38208818b15e327279789254f161d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSetApplicationTaskTag</definition>
        <argsstring>(TaskHandle_t xTask, TaskHookFunction_t pxHookFunction)</argsstring>
        <name>MPU_vTaskSetApplicationTaskTag</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>TaskHookFunction_t</type>
          <declname>pxHookFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="64" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="64" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aa631ace6a21ea068ea5cac0b1f5e2e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TaskHookFunction_t</type>
        <definition>TaskHookFunction_t MPU_xTaskGetApplicationTaskTag</definition>
        <argsstring>(TaskHandle_t xTask)</argsstring>
        <name>MPU_xTaskGetApplicationTaskTag</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="65" column="20" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="65" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a29420d85742f74dfd6a4920eed2f5c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSetThreadLocalStoragePointer</definition>
        <argsstring>(TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue)</argsstring>
        <name>MPU_vTaskSetThreadLocalStoragePointer</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTaskToSet</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIndex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="66" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a493d731d0bb7a01e0c5846593baf6108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* MPU_pvTaskGetThreadLocalStoragePointer</definition>
        <argsstring>(TaskHandle_t xTaskToQuery, BaseType_t xIndex)</argsstring>
        <name>MPU_pvTaskGetThreadLocalStoragePointer</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTaskToQuery</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="67" column="7" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="67" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6ddd4aba7b4474f421d91315d1836c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCallApplicationTaskHook</definition>
        <argsstring>(TaskHandle_t xTask, void *pvParameter)</argsstring>
        <name>MPU_xTaskCallApplicationTaskHook</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvParameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="68" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="68" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a872eb55045bda51f2da181d2537f14f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t MPU_xTaskGetIdleTaskHandle</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTaskGetIdleTaskHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="69" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="69" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1af58373992a8e85406bc757845b9c2245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxTaskGetSystemState</definition>
        <argsstring>(TaskStatus_t *const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t *const pulTotalRunTime)</argsstring>
        <name>MPU_uxTaskGetSystemState</name>
        <param>
          <type><ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref> *const</type>
          <declname>pxTaskStatusArray</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxArraySize</declname>
        </param>
        <param>
          <type>uint32_t *const</type>
          <declname>pulTotalRunTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="70" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="70" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a712c5589c232005635ad118bb8366648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskList</definition>
        <argsstring>(char *pcWriteBuffer)</argsstring>
        <name>MPU_vTaskList</name>
        <param>
          <type>char *</type>
          <declname>pcWriteBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="71" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a0d71065c02b8405fdbce29330832a842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskGetRunTimeStats</definition>
        <argsstring>(char *pcWriteBuffer)</argsstring>
        <name>MPU_vTaskGetRunTimeStats</name>
        <param>
          <type>char *</type>
          <declname>pcWriteBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="72" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6a620523eec41f8100c281824e21afe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskGenericNotify</definition>
        <argsstring>(TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue)</argsstring>
        <name>MPU_xTaskGenericNotify</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTaskToNotify</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulValue</declname>
        </param>
        <param>
          <type>eNotifyAction</type>
          <declname>eAction</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pulPreviousNotificationValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="73" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="73" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a748678c5f1817a5fc66127b6aaff95e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskNotifyWait</definition>
        <argsstring>(uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xTaskNotifyWait</name>
        <param>
          <type>uint32_t</type>
          <declname>ulBitsToClearOnEntry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulBitsToClearOnExit</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pulNotificationValue</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="74" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="74" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3c14a8566b3662b8f97edd11ffa23965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MPU_ulTaskNotifyTake</definition>
        <argsstring>(BaseType_t xClearCountOnExit, TickType_t xTicksToWait)</argsstring>
        <name>MPU_ulTaskNotifyTake</name>
        <param>
          <type>BaseType_t</type>
          <declname>xClearCountOnExit</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="75" column="10" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="75" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac82481381f0b1511db1fbb8f77c1386a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskNotifyStateClear</definition>
        <argsstring>(TaskHandle_t xTask)</argsstring>
        <name>MPU_xTaskNotifyStateClear</name>
        <param>
          <type>TaskHandle_t</type>
          <declname>xTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="76" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="76" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a1da54fee74752c5f58126559133af078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskIncrementTick</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTaskIncrementTick</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="77" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="77" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad5942be9236b9389e39ce2036410f3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t MPU_xTaskGetCurrentTaskHandle</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTaskGetCurrentTaskHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="78" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="78" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a0c2b837c8ebc7189c2d168f26e8fc47c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskSetTimeOutState</definition>
        <argsstring>(TimeOut_t *const pxTimeOut)</argsstring>
        <name>MPU_vTaskSetTimeOutState</name>
        <param>
          <type><ref refid="structx_t_i_m_e___o_u_t" kindref="compound">TimeOut_t</ref> *const</type>
          <declname>pxTimeOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="79" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6d0605238a63245000181fa892ec5323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskCheckForTimeOut</definition>
        <argsstring>(TimeOut_t *const pxTimeOut, TickType_t *const pxTicksToWait)</argsstring>
        <name>MPU_xTaskCheckForTimeOut</name>
        <param>
          <type><ref refid="structx_t_i_m_e___o_u_t" kindref="compound">TimeOut_t</ref> *const</type>
          <declname>pxTimeOut</declname>
        </param>
        <param>
          <type>TickType_t *const</type>
          <declname>pxTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="80" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="80" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a64c52ef683f642de88d0b2122893ac0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTaskMissedYield</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_vTaskMissedYield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="81" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a24bdfe7b9f93ab8cee2ead25785e58e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTaskGetSchedulerState</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTaskGetSchedulerState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="82" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="82" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab3eaf955e8063fc9cbdf93bee2d7549d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueGenericSend</definition>
        <argsstring>(QueueHandle_t xQueue, const void *const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition)</argsstring>
        <name>MPU_xQueueGenericSend</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>const void *const</type>
          <declname>pvItemToQueue</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xCopyPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="85" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="85" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5afb53ecb0dc8704d43fde178afff6ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueReceive</definition>
        <argsstring>(QueueHandle_t xQueue, void *const pvBuffer, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xQueueReceive</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="86" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="86" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad4047282af8c1810edd3442463737a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueuePeek</definition>
        <argsstring>(QueueHandle_t xQueue, void *const pvBuffer, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xQueuePeek</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="87" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="87" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aecd0f83576533b66b057a1f4c370ed10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueSemaphoreTake</definition>
        <argsstring>(QueueHandle_t xQueue, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xQueueSemaphoreTake</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="88" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="88" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a906327f4fd942b5c5fe5e196c94eb342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxQueueMessagesWaiting</definition>
        <argsstring>(const QueueHandle_t xQueue)</argsstring>
        <name>MPU_uxQueueMessagesWaiting</name>
        <param>
          <type>const QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="89" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="89" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1af423f8035d982ede94ddbdc4795af8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxQueueSpacesAvailable</definition>
        <argsstring>(const QueueHandle_t xQueue)</argsstring>
        <name>MPU_uxQueueSpacesAvailable</name>
        <param>
          <type>const QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="90" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="90" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac378aaf28d5631ab7dcb8c75840f9544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueDelete</definition>
        <argsstring>(QueueHandle_t xQueue)</argsstring>
        <name>MPU_vQueueDelete</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="91" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab2bdfc0de0c623a283676e862c4eaa56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t MPU_xQueueCreateMutex</definition>
        <argsstring>(const uint8_t ucQueueType)</argsstring>
        <name>MPU_xQueueCreateMutex</name>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="92" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="92" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab65b3bf862ebe95e124c7f9a52d76d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t MPU_xQueueCreateMutexStatic</definition>
        <argsstring>(const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue)</argsstring>
        <name>MPU_xQueueCreateMutexStatic</name>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <param>
          <type><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref> *</type>
          <declname>pxStaticQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="93" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="93" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac861ca20e0d2d083580aac10a2665fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t MPU_xQueueCreateCountingSemaphore</definition>
        <argsstring>(const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount)</argsstring>
        <name>MPU_xQueueCreateCountingSemaphore</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxMaxCount</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxInitialCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="94" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="94" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6f5e7b4e82c26dc69eaf7bbf0bfda0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t MPU_xQueueCreateCountingSemaphoreStatic</definition>
        <argsstring>(const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue)</argsstring>
        <name>MPU_xQueueCreateCountingSemaphoreStatic</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxMaxCount</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxInitialCount</declname>
        </param>
        <param>
          <type><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref> *</type>
          <declname>pxStaticQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="95" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="95" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7278ca1132b990192755eee24d6d2ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* MPU_xQueueGetMutexHolder</definition>
        <argsstring>(QueueHandle_t xSemaphore)</argsstring>
        <name>MPU_xQueueGetMutexHolder</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xSemaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="96" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1acbbaba99985845bf639345c6d080ad0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueTakeMutexRecursive</definition>
        <argsstring>(QueueHandle_t xMutex, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xQueueTakeMutexRecursive</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xMutex</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="97" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="97" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a2cc96fee798c2191231b7145740339b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueGiveMutexRecursive</definition>
        <argsstring>(QueueHandle_t pxMutex)</argsstring>
        <name>MPU_xQueueGiveMutexRecursive</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>pxMutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="98" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="98" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a19cd35387d02d0744853a10493b8af14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueAddToRegistry</definition>
        <argsstring>(QueueHandle_t xQueue, const char *pcName)</argsstring>
        <name>MPU_vQueueAddToRegistry</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="99" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad8435090df83794aafdd8521693a27db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueUnregisterQueue</definition>
        <argsstring>(QueueHandle_t xQueue)</argsstring>
        <name>MPU_vQueueUnregisterQueue</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="100" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aca8e4e477ecdb277847016aa3582839d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* MPU_pcQueueGetName</definition>
        <argsstring>(QueueHandle_t xQueue)</argsstring>
        <name>MPU_pcQueueGetName</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="101" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="101" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9a07d6585c85945d1ffbd3c1180fe98d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t MPU_xQueueGenericCreate</definition>
        <argsstring>(const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType)</argsstring>
        <name>MPU_xQueueGenericCreate</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxQueueLength</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxItemSize</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="102" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="102" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aaf5794a4f116ec1e261a1f6ef8d033d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t MPU_xQueueGenericCreateStatic</definition>
        <argsstring>(const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType)</argsstring>
        <name>MPU_xQueueGenericCreateStatic</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxQueueLength</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxItemSize</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pucQueueStorage</declname>
        </param>
        <param>
          <type><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref> *</type>
          <declname>pxStaticQueue</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>ucQueueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="103" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="103" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a41980fdfb51ca03c3d250c15c1e68573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueSetHandle_t</type>
        <definition>QueueSetHandle_t MPU_xQueueCreateSet</definition>
        <argsstring>(const UBaseType_t uxEventQueueLength)</argsstring>
        <name>MPU_xQueueCreateSet</name>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxEventQueueLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="104" column="18" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="104" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1afa8856038752af7d0461478e31eeab3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueAddToSet</definition>
        <argsstring>(QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet)</argsstring>
        <name>MPU_xQueueAddToSet</name>
        <param>
          <type>QueueSetMemberHandle_t</type>
          <declname>xQueueOrSemaphore</declname>
        </param>
        <param>
          <type>QueueSetHandle_t</type>
          <declname>xQueueSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="105" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="105" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a2ced7dfd46a607f8c0bd65a388ce74dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueRemoveFromSet</definition>
        <argsstring>(QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet)</argsstring>
        <name>MPU_xQueueRemoveFromSet</name>
        <param>
          <type>QueueSetMemberHandle_t</type>
          <declname>xQueueOrSemaphore</declname>
        </param>
        <param>
          <type>QueueSetHandle_t</type>
          <declname>xQueueSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="106" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="106" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aeb428230be461a4a62926c7496479707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueueSetMemberHandle_t</type>
        <definition>QueueSetMemberHandle_t MPU_xQueueSelectFromSet</definition>
        <argsstring>(QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait)</argsstring>
        <name>MPU_xQueueSelectFromSet</name>
        <param>
          <type>QueueSetHandle_t</type>
          <declname>xQueueSet</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="107" column="24" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="107" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a1cf490bedbc095d6d2a7db5173f79ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xQueueGenericReset</definition>
        <argsstring>(QueueHandle_t xQueue, BaseType_t xNewQueue)</argsstring>
        <name>MPU_xQueueGenericReset</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xNewQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="108" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="108" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a041af9b00240e2af28f2e4145bf0c63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vQueueSetQueueNumber</definition>
        <argsstring>(QueueHandle_t xQueue, UBaseType_t uxQueueNumber)</argsstring>
        <name>MPU_vQueueSetQueueNumber</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxQueueNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="109" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a8e8ed44f05e3358940b13a5ea26e5f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxQueueGetQueueNumber</definition>
        <argsstring>(QueueHandle_t xQueue)</argsstring>
        <name>MPU_uxQueueGetQueueNumber</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="110" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="110" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab12c2307bc28f1dee15010eb57ce9be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t MPU_ucQueueGetQueueType</definition>
        <argsstring>(QueueHandle_t xQueue)</argsstring>
        <name>MPU_ucQueueGetQueueType</name>
        <param>
          <type>QueueHandle_t</type>
          <declname>xQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="111" column="9" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="111" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1af743e7a66d44be8b088a546f26078f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TimerHandle_t</type>
        <definition>TimerHandle_t MPU_xTimerCreate</definition>
        <argsstring>(const char *const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void *const pvTimerID, TimerCallbackFunction_t pxCallbackFunction)</argsstring>
        <name>MPU_xTimerCreate</name>
        <param>
          <type>const char *const</type>
          <declname>pcTimerName</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTimerPeriodInTicks</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxAutoReload</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvTimerID</declname>
        </param>
        <param>
          <type>TimerCallbackFunction_t</type>
          <declname>pxCallbackFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="114" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="114" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac933854b9c3379b228e45a7325390b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TimerHandle_t</type>
        <definition>TimerHandle_t MPU_xTimerCreateStatic</definition>
        <argsstring>(const char *const pcTimerName, const TickType_t xTimerPeriodInTicks, const UBaseType_t uxAutoReload, void *const pvTimerID, TimerCallbackFunction_t pxCallbackFunction, StaticTimer_t *pxTimerBuffer)</argsstring>
        <name>MPU_xTimerCreateStatic</name>
        <param>
          <type>const char *const</type>
          <declname>pcTimerName</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTimerPeriodInTicks</declname>
        </param>
        <param>
          <type>const UBaseType_t</type>
          <declname>uxAutoReload</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvTimerID</declname>
        </param>
        <param>
          <type>TimerCallbackFunction_t</type>
          <declname>pxCallbackFunction</declname>
        </param>
        <param>
          <type><ref refid="structx_s_t_a_t_i_c___t_i_m_e_r" kindref="compound">StaticTimer_t</ref> *</type>
          <declname>pxTimerBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="115" column="15" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="115" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1afc86fb06b11c656504896ad5d2eb3261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* MPU_pvTimerGetTimerID</definition>
        <argsstring>(const TimerHandle_t xTimer)</argsstring>
        <name>MPU_pvTimerGetTimerID</name>
        <param>
          <type>const TimerHandle_t</type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="116" column="7" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="116" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9c817fe2dab1aec3fc4f7f3cd97a8591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vTimerSetTimerID</definition>
        <argsstring>(TimerHandle_t xTimer, void *pvNewID)</argsstring>
        <name>MPU_vTimerSetTimerID</name>
        <param>
          <type>TimerHandle_t</type>
          <declname>xTimer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvNewID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="117" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3b4cacdf2f73f0dfc09f83bf5c2139ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerIsTimerActive</definition>
        <argsstring>(TimerHandle_t xTimer)</argsstring>
        <name>MPU_xTimerIsTimerActive</name>
        <param>
          <type>TimerHandle_t</type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="118" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="118" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5a703b8f85f0d326ed2b980cffd2e357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t MPU_xTimerGetTimerDaemonTaskHandle</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTimerGetTimerDaemonTaskHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="119" column="14" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="119" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a4322c55e979ddd6d0638944d8fe02662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerPendFunctionCall</definition>
        <argsstring>(PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xTimerPendFunctionCall</name>
        <param>
          <type>PendedFunction_t</type>
          <declname>xFunctionToPend</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvParameter1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulParameter2</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="120" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="120" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3fd5d11888b79f58de32b43b8f701d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* MPU_pcTimerGetName</definition>
        <argsstring>(TimerHandle_t xTimer)</argsstring>
        <name>MPU_pcTimerGetName</name>
        <param>
          <type>TimerHandle_t</type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="121" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="121" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a15ec983c5422f9d9e6ee46a3b8786b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TickType_t</type>
        <definition>TickType_t MPU_xTimerGetPeriod</definition>
        <argsstring>(TimerHandle_t xTimer)</argsstring>
        <name>MPU_xTimerGetPeriod</name>
        <param>
          <type>TimerHandle_t</type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="122" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="122" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9dfbc500c76677ed5cba74cf2e5fd6f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TickType_t</type>
        <definition>TickType_t MPU_xTimerGetExpiryTime</definition>
        <argsstring>(TimerHandle_t xTimer)</argsstring>
        <name>MPU_xTimerGetExpiryTime</name>
        <param>
          <type>TimerHandle_t</type>
          <declname>xTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="123" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="123" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aae208eb9b7fbd15cfdfdae800fd2ce97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerCreateTimerTask</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xTimerCreateTimerTask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="124" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="124" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1adf652b34543f5cd024a61272bfc030e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xTimerGenericCommand</definition>
        <argsstring>(TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t *const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait)</argsstring>
        <name>MPU_xTimerGenericCommand</name>
        <param>
          <type>TimerHandle_t</type>
          <declname>xTimer</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xCommandID</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xOptionalValue</declname>
        </param>
        <param>
          <type>BaseType_t *const</type>
          <declname>pxHigherPriorityTaskWoken</declname>
        </param>
        <param>
          <type>const TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="125" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="125" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ac0b23d7d7c1bd57739f3319f201ad8a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventGroupHandle_t</type>
        <definition>EventGroupHandle_t MPU_xEventGroupCreate</definition>
        <argsstring>(void)</argsstring>
        <name>MPU_xEventGroupCreate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="128" column="20" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="128" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a66a1710b0372e0f29f191604d2df4a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventGroupHandle_t</type>
        <definition>EventGroupHandle_t MPU_xEventGroupCreateStatic</definition>
        <argsstring>(StaticEventGroup_t *pxEventGroupBuffer)</argsstring>
        <name>MPU_xEventGroupCreateStatic</name>
        <param>
          <type><ref refid="structx_s_t_a_t_i_c___e_v_e_n_t___g_r_o_u_p" kindref="compound">StaticEventGroup_t</ref> *</type>
          <declname>pxEventGroupBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="129" column="20" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="129" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a9de3688a138371bf668f3db7d246c4f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventBits_t</type>
        <definition>EventBits_t MPU_xEventGroupWaitBits</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xEventGroupWaitBits</name>
        <param>
          <type>EventGroupHandle_t</type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const EventBits_t</type>
          <declname>uxBitsToWaitFor</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xClearOnExit</declname>
        </param>
        <param>
          <type>const BaseType_t</type>
          <declname>xWaitForAllBits</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="130" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="130" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad3779b376e213e0868c55cd1f816bfb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventBits_t</type>
        <definition>EventBits_t MPU_xEventGroupClearBits</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear)</argsstring>
        <name>MPU_xEventGroupClearBits</name>
        <param>
          <type>EventGroupHandle_t</type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const EventBits_t</type>
          <declname>uxBitsToClear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="131" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="131" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a0432497ecd5f8a19cc61a13cf53adaff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventBits_t</type>
        <definition>EventBits_t MPU_xEventGroupSetBits</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet)</argsstring>
        <name>MPU_xEventGroupSetBits</name>
        <param>
          <type>EventGroupHandle_t</type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const EventBits_t</type>
          <declname>uxBitsToSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="132" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="132" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a6a226283b88af6323ec11950dfaa9c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventBits_t</type>
        <definition>EventBits_t MPU_xEventGroupSync</definition>
        <argsstring>(EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const EventBits_t uxBitsToWaitFor, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xEventGroupSync</name>
        <param>
          <type>EventGroupHandle_t</type>
          <declname>xEventGroup</declname>
        </param>
        <param>
          <type>const EventBits_t</type>
          <declname>uxBitsToSet</declname>
        </param>
        <param>
          <type>const EventBits_t</type>
          <declname>uxBitsToWaitFor</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="133" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="133" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a5c58731972a24a3ef87e83179cb3a078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vEventGroupDelete</definition>
        <argsstring>(EventGroupHandle_t xEventGroup)</argsstring>
        <name>MPU_vEventGroupDelete</name>
        <param>
          <type>EventGroupHandle_t</type>
          <declname>xEventGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="134" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a161388d998200531bf46a81ba657fc1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UBaseType_t</type>
        <definition>UBaseType_t MPU_uxEventGroupGetNumber</definition>
        <argsstring>(void *xEventGroup)</argsstring>
        <name>MPU_uxEventGroupGetNumber</name>
        <param>
          <type>void *</type>
          <declname>xEventGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="135" column="13" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="135" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a773e4bd86b07a726ecd0fae2b274cf8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferSend</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, const void *pvTxData, size_t xDataLengthBytes, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xStreamBufferSend</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvTxData</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xDataLengthBytes</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="138" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="138" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3fc42845c433c74c413598695a961393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferSendFromISR</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, const void *pvTxData, size_t xDataLengthBytes, BaseType_t *const pxHigherPriorityTaskWoken)</argsstring>
        <name>MPU_xStreamBufferSendFromISR</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvTxData</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xDataLengthBytes</declname>
        </param>
        <param>
          <type>BaseType_t *const</type>
          <declname>pxHigherPriorityTaskWoken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="139" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="139" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a3f11635b796e625a411eb9406fe5f3a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferReceive</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, void *pvRxData, size_t xBufferLengthBytes, TickType_t xTicksToWait)</argsstring>
        <name>MPU_xStreamBufferReceive</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvRxData</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBufferLengthBytes</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToWait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="140" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="140" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1aa68acddee1408e053e0d3bb55a0f00cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferReceiveFromISR</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, void *pvRxData, size_t xBufferLengthBytes, BaseType_t *const pxHigherPriorityTaskWoken)</argsstring>
        <name>MPU_xStreamBufferReceiveFromISR</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvRxData</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBufferLengthBytes</declname>
        </param>
        <param>
          <type>BaseType_t *const</type>
          <declname>pxHigherPriorityTaskWoken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="141" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="141" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a00e20be07e6d278be8ede1a7f64e71af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPU_vStreamBufferDelete</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer)</argsstring>
        <name>MPU_vStreamBufferDelete</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="142" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab86e0f45c95287078f950e2c0be5a6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferIsFull</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer)</argsstring>
        <name>MPU_xStreamBufferIsFull</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="143" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="143" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ad411778847c133195be1ccf1ca5a267e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferIsEmpty</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer)</argsstring>
        <name>MPU_xStreamBufferIsEmpty</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="144" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="144" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1ab065a514123a1182c9c835f2c5978a32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferReset</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer)</argsstring>
        <name>MPU_xStreamBufferReset</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="145" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="145" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7a5c2918589c767b70055336ab028556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferSpacesAvailable</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer)</argsstring>
        <name>MPU_xStreamBufferSpacesAvailable</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="146" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="146" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a57e4324b927f22d0e3fb69eb9646109f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MPU_xStreamBufferBytesAvailable</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer)</argsstring>
        <name>MPU_xStreamBufferBytesAvailable</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="147" column="8" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="147" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a054f5bab7b44f5ad3e02857d2a3ebbca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t MPU_xStreamBufferSetTriggerLevel</definition>
        <argsstring>(StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel)</argsstring>
        <name>MPU_xStreamBufferSetTriggerLevel</name>
        <param>
          <type>StreamBufferHandle_t</type>
          <declname>xStreamBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xTriggerLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="148" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="148" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1acdf23f3b6fb686af677a44fd8478c235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StreamBufferHandle_t</type>
        <definition>StreamBufferHandle_t MPU_xStreamBufferGenericCreate</definition>
        <argsstring>(size_t xBufferSizeBytes, size_t xTriggerLevelBytes, BaseType_t xIsMessageBuffer)</argsstring>
        <name>MPU_xStreamBufferGenericCreate</name>
        <param>
          <type>size_t</type>
          <declname>xBufferSizeBytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xTriggerLevelBytes</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIsMessageBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="149" column="22" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="149" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="mpu__prototypes_8h_1a7ab5e4013979470a0f71d7e34c2e9e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StreamBufferHandle_t</type>
        <definition>StreamBufferHandle_t MPU_xStreamBufferGenericCreateStatic</definition>
        <argsstring>(size_t xBufferSizeBytes, size_t xTriggerLevelBytes, BaseType_t xIsMessageBuffer, uint8_t *const pucStreamBufferStorageArea, StaticStreamBuffer_t *const pxStaticStreamBuffer)</argsstring>
        <name>MPU_xStreamBufferGenericCreateStatic</name>
        <param>
          <type>size_t</type>
          <declname>xBufferSizeBytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xTriggerLevelBytes</declname>
        </param>
        <param>
          <type>BaseType_t</type>
          <declname>xIsMessageBuffer</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>pucStreamBufferStorageArea</declname>
        </param>
        <param>
          <type><ref refid="structx_s_t_a_t_i_c___s_t_r_e_a_m___b_u_f_f_e_r" kindref="compound">StaticStreamBuffer_t</ref> *const</type>
          <declname>pxStaticStreamBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" line="150" column="22" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h" declline="150" declcolumn="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.0.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>When<sp/>the<sp/>MPU<sp/>is<sp/>used<sp/>the<sp/>standard<sp/>(non<sp/>MPU)<sp/>API<sp/>functions<sp/>are<sp/>mapped<sp/>to</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>equivalents<sp/>that<sp/>start<sp/>&quot;MPU_&quot;,<sp/>the<sp/>prototypes<sp/>for<sp/>which<sp/>are<sp/>defined<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>header<sp/>files.<sp/><sp/>This<sp/>will<sp/>cause<sp/>the<sp/>application<sp/>code<sp/>to<sp/>call<sp/>the<sp/>MPU_<sp/>version</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>which<sp/>wraps<sp/>the<sp/>non-MPU<sp/>version<sp/>with<sp/>privilege<sp/>promoting<sp/>then<sp/>demoting<sp/>code,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>so<sp/>the<sp/>kernel<sp/>code<sp/>always<sp/>runs<sp/>will<sp/>full<sp/>privileges.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MPU_PROTOTYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_PROTOTYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>tasks.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">BaseType_t<sp/>MPU_xTaskCreate(<sp/>TaskFunction_t<sp/>pxTaskCode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>usStackDepth,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvParameters,<sp/>UBaseType_t<sp/>uxPriority,<sp/>TaskHandle_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxCreatedTask<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">TaskHandle_t<sp/>MPU_xTaskCreateStatic(<sp/>TaskFunction_t<sp/>pxTaskCode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>ulStackDepth,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvParameters,<sp/>UBaseType_t<sp/>uxPriority,<sp/>StackType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>puxStackBuffer,<sp/><ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskBuffer<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">BaseType_t<sp/>MPU_xTaskCreateRestricted(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s" kindref="compound">TaskParameters_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskDefinition,<sp/>TaskHandle_t<sp/>*pxCreatedTask<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">BaseType_t<sp/>MPU_xTaskCreateRestrictedStatic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s" kindref="compound">TaskParameters_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskDefinition,<sp/>TaskHandle_t<sp/>*pxCreatedTask<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskAllocateMPURegions(<sp/>TaskHandle_t<sp/>xTask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_m_e_m_o_r_y___r_e_g_i_o_n" kindref="compound">MemoryRegion_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxRegions<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskDelete(<sp/>TaskHandle_t<sp/>xTaskToDelete<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskDelay(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTicksToDelay<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskDelayUntil(<sp/>TickType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxPreviousWakeTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTimeIncrement<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">BaseType_t<sp/>MPU_xTaskAbortDelay(<sp/>TaskHandle_t<sp/>xTask<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">UBaseType_t<sp/>MPU_uxTaskPriorityGet(<sp/>TaskHandle_t<sp/>xTask<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">eTaskState<sp/>MPU_eTaskGetState(<sp/>TaskHandle_t<sp/>xTask<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskGetInfo(<sp/>TaskHandle_t<sp/>xTask,<sp/><ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref><sp/>*pxTaskStatus,<sp/>BaseType_t<sp/>xGetFreeStackSpace,<sp/>eTaskState<sp/>eState<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskPrioritySet(<sp/>TaskHandle_t<sp/>xTask,<sp/>UBaseType_t<sp/>uxNewPriority<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskSuspend(<sp/>TaskHandle_t<sp/>xTaskToSuspend<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskResume(<sp/>TaskHandle_t<sp/>xTaskToResume<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskStartScheduler(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskSuspendAll(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">BaseType_t<sp/>MPU_xTaskResumeAll(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">TickType_t<sp/>MPU_xTaskGetTickCount(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">UBaseType_t<sp/>MPU_uxTaskGetNumberOfTasks(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>MPU_pcTaskGetName(<sp/>TaskHandle_t<sp/>xTaskToQuery<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">TaskHandle_t<sp/>MPU_xTaskGetHandle(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcNameToQuery<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">UBaseType_t<sp/>MPU_uxTaskGetStackHighWaterMark(<sp/>TaskHandle_t<sp/>xTask<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskSetApplicationTaskTag(<sp/>TaskHandle_t<sp/>xTask,<sp/>TaskHookFunction_t<sp/>pxHookFunction<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">TaskHookFunction_t<sp/>MPU_xTaskGetApplicationTaskTag(<sp/>TaskHandle_t<sp/>xTask<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskSetThreadLocalStoragePointer(<sp/>TaskHandle_t<sp/>xTaskToSet,<sp/>BaseType_t<sp/>xIndex,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvValue<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>MPU_pvTaskGetThreadLocalStoragePointer(<sp/>TaskHandle_t<sp/>xTaskToQuery,<sp/>BaseType_t<sp/>xIndex<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">BaseType_t<sp/>MPU_xTaskCallApplicationTaskHook(<sp/>TaskHandle_t<sp/>xTask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameter<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">TaskHandle_t<sp/>MPU_xTaskGetIdleTaskHandle(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">UBaseType_t<sp/>MPU_uxTaskGetSystemState(<sp/><ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTaskStatusArray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxArraySize,<sp/>uint32_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pulTotalRunTime<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskList(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pcWriteBuffer<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskGetRunTimeStats(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcWriteBuffer<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">BaseType_t<sp/>MPU_xTaskGenericNotify(<sp/>TaskHandle_t<sp/>xTaskToNotify,<sp/>uint32_t<sp/>ulValue,<sp/>eNotifyAction<sp/>eAction,<sp/>uint32_t<sp/>*pulPreviousNotificationValue<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">BaseType_t<sp/>MPU_xTaskNotifyWait(<sp/>uint32_t<sp/>ulBitsToClearOnEntry,<sp/>uint32_t<sp/>ulBitsToClearOnExit,<sp/>uint32_t<sp/>*pulNotificationValue,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">uint32_t<sp/>MPU_ulTaskNotifyTake(<sp/>BaseType_t<sp/>xClearCountOnExit,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">BaseType_t<sp/>MPU_xTaskNotifyStateClear(<sp/>TaskHandle_t<sp/>xTask<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">BaseType_t<sp/>MPU_xTaskIncrementTick(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">TaskHandle_t<sp/>MPU_xTaskGetCurrentTaskHandle(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskSetTimeOutState(<sp/><ref refid="structx_t_i_m_e___o_u_t" kindref="compound">TimeOut_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimeOut<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">BaseType_t<sp/>MPU_xTaskCheckForTimeOut(<sp/><ref refid="structx_t_i_m_e___o_u_t" kindref="compound">TimeOut_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimeOut,<sp/>TickType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTaskMissedYield(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">BaseType_t<sp/>MPU_xTaskGetSchedulerState(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>queue.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">BaseType_t<sp/>MPU_xQueueGenericSend(<sp/>QueueHandle_t<sp/>xQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvItemToQueue,<sp/>TickType_t<sp/>xTicksToWait,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xCopyPosition<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">BaseType_t<sp/>MPU_xQueueReceive(<sp/>QueueHandle_t<sp/>xQueue,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvBuffer,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">BaseType_t<sp/>MPU_xQueuePeek(<sp/>QueueHandle_t<sp/>xQueue,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvBuffer,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">BaseType_t<sp/>MPU_xQueueSemaphoreTake(<sp/>QueueHandle_t<sp/>xQueue,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">UBaseType_t<sp/>MPU_uxQueueMessagesWaiting(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QueueHandle_t<sp/>xQueue<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">UBaseType_t<sp/>MPU_uxQueueSpacesAvailable(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QueueHandle_t<sp/>xQueue<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vQueueDelete(<sp/>QueueHandle_t<sp/>xQueue<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">QueueHandle_t<sp/>MPU_xQueueCreateMutex(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">QueueHandle_t<sp/>MPU_xQueueCreateMutexStatic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType,<sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*pxStaticQueue<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">QueueHandle_t<sp/>MPU_xQueueCreateCountingSemaphore(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxMaxCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxInitialCount<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">QueueHandle_t<sp/>MPU_xQueueCreateCountingSemaphoreStatic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxMaxCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxInitialCount,<sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*pxStaticQueue<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>MPU_xQueueGetMutexHolder(<sp/>QueueHandle_t<sp/>xSemaphore<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">BaseType_t<sp/>MPU_xQueueTakeMutexRecursive(<sp/>QueueHandle_t<sp/>xMutex,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">BaseType_t<sp/>MPU_xQueueGiveMutexRecursive(<sp/>QueueHandle_t<sp/>pxMutex<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vQueueAddToRegistry(<sp/>QueueHandle_t<sp/>xQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcName<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vQueueUnregisterQueue(<sp/>QueueHandle_t<sp/>xQueue<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>MPU_pcQueueGetName(<sp/>QueueHandle_t<sp/>xQueue<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">QueueHandle_t<sp/>MPU_xQueueGenericCreate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxQueueLength,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxItemSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">QueueHandle_t<sp/>MPU_xQueueGenericCreateStatic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxQueueLength,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxItemSize,<sp/>uint8_t<sp/>*pucQueueStorage,<sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*pxStaticQueue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucQueueType<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">QueueSetHandle_t<sp/>MPU_xQueueCreateSet(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxEventQueueLength<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">BaseType_t<sp/>MPU_xQueueAddToSet(<sp/>QueueSetMemberHandle_t<sp/>xQueueOrSemaphore,<sp/>QueueSetHandle_t<sp/>xQueueSet<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">BaseType_t<sp/>MPU_xQueueRemoveFromSet(<sp/>QueueSetMemberHandle_t<sp/>xQueueOrSemaphore,<sp/>QueueSetHandle_t<sp/>xQueueSet<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">QueueSetMemberHandle_t<sp/>MPU_xQueueSelectFromSet(<sp/>QueueSetHandle_t<sp/>xQueueSet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">BaseType_t<sp/>MPU_xQueueGenericReset(<sp/>QueueHandle_t<sp/>xQueue,<sp/>BaseType_t<sp/>xNewQueue<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vQueueSetQueueNumber(<sp/>QueueHandle_t<sp/>xQueue,<sp/>UBaseType_t<sp/>uxQueueNumber<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">UBaseType_t<sp/>MPU_uxQueueGetQueueNumber(<sp/>QueueHandle_t<sp/>xQueue<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">uint8_t<sp/>MPU_ucQueueGetQueueType(<sp/>QueueHandle_t<sp/>xQueue<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>timers.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">TimerHandle_t<sp/>MPU_xTimerCreate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTimerPeriodInTicks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxAutoReload,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,<sp/>TimerCallbackFunction_t<sp/>pxCallbackFunction<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">TimerHandle_t<sp/>MPU_xTimerCreateStatic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTimerPeriodInTicks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UBaseType_t<sp/>uxAutoReload,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,<sp/>TimerCallbackFunction_t<sp/>pxCallbackFunction,<sp/><ref refid="structx_s_t_a_t_i_c___t_i_m_e_r" kindref="compound">StaticTimer_t</ref><sp/>*pxTimerBuffer<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>MPU_pvTimerGetTimerID(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimerHandle_t<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vTimerSetTimerID(<sp/>TimerHandle_t<sp/>xTimer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvNewID<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">BaseType_t<sp/>MPU_xTimerIsTimerActive(<sp/>TimerHandle_t<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">TaskHandle_t<sp/>MPU_xTimerGetTimerDaemonTaskHandle(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">BaseType_t<sp/>MPU_xTimerPendFunctionCall(<sp/>PendedFunction_t<sp/>xFunctionToPend,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameter1,<sp/>uint32_t<sp/>ulParameter2,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>MPU_pcTimerGetName(<sp/>TimerHandle_t<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">TickType_t<sp/>MPU_xTimerGetPeriod(<sp/>TimerHandle_t<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">TickType_t<sp/>MPU_xTimerGetExpiryTime(<sp/>TimerHandle_t<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">BaseType_t<sp/>MPU_xTimerCreateTimerTask(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">BaseType_t<sp/>MPU_xTimerGenericCommand(<sp/>TimerHandle_t<sp/>xTimer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xCommandID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xOptionalValue,<sp/>BaseType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxHigherPriorityTaskWoken,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>event_group.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">EventGroupHandle_t<sp/>MPU_xEventGroupCreate(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">EventGroupHandle_t<sp/>MPU_xEventGroupCreateStatic(<sp/><ref refid="structx_s_t_a_t_i_c___e_v_e_n_t___g_r_o_u_p" kindref="compound">StaticEventGroup_t</ref><sp/>*pxEventGroupBuffer<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">EventBits_t<sp/>MPU_xEventGroupWaitBits(<sp/>EventGroupHandle_t<sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EventBits_t<sp/>uxBitsToWaitFor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xClearOnExit,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseType_t<sp/>xWaitForAllBits,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">EventBits_t<sp/>MPU_xEventGroupClearBits(<sp/>EventGroupHandle_t<sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EventBits_t<sp/>uxBitsToClear<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">EventBits_t<sp/>MPU_xEventGroupSetBits(<sp/>EventGroupHandle_t<sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EventBits_t<sp/>uxBitsToSet<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">EventBits_t<sp/>MPU_xEventGroupSync(<sp/>EventGroupHandle_t<sp/>xEventGroup,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EventBits_t<sp/>uxBitsToSet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EventBits_t<sp/>uxBitsToWaitFor,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vEventGroupDelete(<sp/>EventGroupHandle_t<sp/>xEventGroup<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">UBaseType_t<sp/>MPU_uxEventGroupGetNumber(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>xEventGroup<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPU<sp/>versions<sp/>of<sp/>message/stream_buffer.h<sp/>API<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MPU_xStreamBufferSend(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvTxData,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xDataLengthBytes,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MPU_xStreamBufferSendFromISR(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvTxData,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xDataLengthBytes,<sp/>BaseType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxHigherPriorityTaskWoken<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MPU_xStreamBufferReceive(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvRxData,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBufferLengthBytes,<sp/>TickType_t<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MPU_xStreamBufferReceiveFromISR(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvRxData,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBufferLengthBytes,<sp/>BaseType_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxHigherPriorityTaskWoken<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MPU_vStreamBufferDelete(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">BaseType_t<sp/>MPU_xStreamBufferIsFull(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">BaseType_t<sp/>MPU_xStreamBufferIsEmpty(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">BaseType_t<sp/>MPU_xStreamBufferReset(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MPU_xStreamBufferSpacesAvailable(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MPU_xStreamBufferBytesAvailable(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">BaseType_t<sp/>MPU_xStreamBufferSetTriggerLevel(<sp/>StreamBufferHandle_t<sp/>xStreamBuffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xTriggerLevel<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">StreamBufferHandle_t<sp/>MPU_xStreamBufferGenericCreate(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBufferSizeBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xTriggerLevelBytes,<sp/>BaseType_t<sp/>xIsMessageBuffer<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">StreamBufferHandle_t<sp/>MPU_xStreamBufferGenericCreateStatic(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBufferSizeBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xTriggerLevelBytes,<sp/>BaseType_t<sp/>xIsMessageBuffer,<sp/>uint8_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pucStreamBufferStorageArea,<sp/><ref refid="structx_s_t_a_t_i_c___s_t_r_e_a_m___b_u_f_f_e_r" kindref="compound">StaticStreamBuffer_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxStaticStreamBuffer<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MPU_PROTOTYPES_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h"/>
  </compounddef>
</doxygen>
