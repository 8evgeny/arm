<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stm32f1xx__hal__rcc__ex_8c" kind="file" language="C++">
    <compoundname>stm32f1xx_hal_rcc_ex.c</compoundname>
    <includes refid="stm32f1xx__hal_8h" local="yes">stm32f1xx_hal.h</includes>
    <incdepgraph>
      <node id="15">
        <label>stm32f1xx_hal_flash.h</label>
        <link refid="stm32f1xx__hal__flash_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stm32f1xx_hal_tim_ex.h</label>
        <link refid="stm32f1xx__hal__tim__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32f1xx_hal_pcd.h</label>
        <link refid="stm32f1xx__hal__pcd_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32f1xx_hal_cortex.h</label>
        <link refid="stm32f1xx__hal__cortex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32f1xx_ll_usb.h</label>
        <link refid="stm32f1xx__ll__usb_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stm32f1xx_hal.h</label>
        <link refid="stm32f1xx__hal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="17">
        <label>stm32f1xx_hal_pwr.h</label>
        <link refid="stm32f1xx__hal__pwr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32f1xx_hal_rcc.h</label>
        <link refid="stm32f1xx__hal__rcc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stm32f1xx_hal_dma_ex.h</label>
        <link refid="stm32f1xx__hal__dma__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32f1xx.h</label>
        <link refid="stm32f1xx_8h"/>
      </node>
      <node id="16">
        <label>stm32f1xx_hal_flash_ex.h</label>
        <link refid="stm32f1xx__hal__flash__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32f1xx_hal_dma.h</label>
        <link refid="stm32f1xx__hal__dma_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stm32f1xx_hal_tim.h</label>
        <link refid="stm32f1xx__hal__tim_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stm32f1xx_hal_rcc_ex.h</label>
        <link refid="stm32f1xx__hal__rcc__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stm32f1xx_hal_conf.h</label>
        <link refid="stm32f1xx__hal__conf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stm32f1xx_hal_gpio.h</label>
        <link refid="stm32f1xx__hal__gpio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c</label>
        <link refid="stm32f1xx__hal__rcc__ex_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stm32f1xx_hal_gpio_ex.h</label>
        <link refid="stm32f1xx__hal__gpio__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stm32f1xx_hal_def.h</label>
        <link refid="stm32f1xx__hal__def_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stm32f1xx_hal_exti.h</label>
        <link refid="stm32f1xx__hal__exti_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Extended RCC HAL module driver. This file provides firmware functions to manage the following functionalities RCC extension peripheral: </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team<itemizedlist>
<listitem><para>Extended Peripheral Control functions</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="attention"><para></para>
</simplesect>
<heading level="2"><center><copy/> Copyright (c) 2016 STMicroelectronics. All rights reserved.</center></heading>
</para>
<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f1xx__hal_8h" kindref="compound">stm32f1xx_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAL_RCC_MODULE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>typedef<sp/>-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>define<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macro<sp/>-------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>---------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>functions<sp/>---------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCCEx_PeriphCLKConfig(<ref refid="struct_r_c_c___periph_c_l_k_init_type_def" kindref="compound">RCC_PeriphCLKInitTypeDef</ref><sp/><sp/>*PeriphClkInit)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart<sp/>=<sp/>0U,<sp/>temp_reg<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>pllactive<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PERIPHCLOCK(PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref>));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*-------------------------------<sp/>RTC/LCD<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref>)<sp/>&amp;<sp/>RCC_PERIPHCLK_RTC)<sp/>==<sp/>RCC_PERIPHCLK_RTC))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>RTC<sp/>Parameters<sp/>used<sp/>to<sp/>output<sp/>RTCCLK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_RTCCLKSOURCE(PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a831cc6023077b77683871743290aa720" kindref="member">RTCClockSelection</ref>));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>FlagStatus<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwrclkchanged<sp/>=<sp/>RESET;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>soon<sp/>as<sp/>function<sp/>is<sp/>called<sp/>to<sp/>change<sp/>RTC<sp/>clock<sp/>source,<sp/>activation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power<sp/>domain<sp/>is<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Requires<sp/>to<sp/>enable<sp/>write<sp/>access<sp/>to<sp/>Backup<sp/>Domain<sp/>of<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_RCC_PWR_IS_CLK_DISABLED())</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PWR_CLK_ENABLE();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pwrclkchanged<sp/>=<sp/>SET;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_CLR(PWR-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf5c65ab845794ef48f09faa2ee44f718" kindref="member">PWR_CR_DBP</ref>))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>write<sp/>access<sp/>to<sp/>Backup<sp/>domain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(PWR-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf5c65ab845794ef48f09faa2ee44f718" kindref="member">PWR_CR_DBP</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>Backup<sp/>domain<sp/>Write<sp/>protection<sp/>disable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_CLR(PWR-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf5c65ab845794ef48f09faa2ee44f718" kindref="member">PWR_CR_DBP</ref>))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>RCC_DBP_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>Backup<sp/>domain<sp/>only<sp/>if<sp/>the<sp/>RTC<sp/>Clock<sp/>source<sp/>selection<sp/>is<sp/>modified<sp/>from<sp/>reset<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_reg<sp/>=<sp/>(RCC-&gt;BDCR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((temp_reg<sp/>!=<sp/>0x00000000U)<sp/>&amp;&amp;<sp/>(temp_reg<sp/>!=<sp/>(PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a831cc6023077b77683871743290aa720" kindref="member">RTCClockSelection</ref><sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>)))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>content<sp/>of<sp/>BDCR<sp/>register<sp/>before<sp/>the<sp/>reset<sp/>of<sp/>Backup<sp/>Domain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_reg<sp/>=<sp/>(RCC-&gt;BDCR<sp/>&amp;<sp/>~(<ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RTC<sp/>Clock<sp/>selection<sp/>can<sp/>be<sp/>changed<sp/>only<sp/>if<sp/>the<sp/>Backup<sp/>Domain<sp/>is<sp/>reset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___r_t_c___clock___configuration_1ga3bf7da608ff985873ca8e248fb1dc4f0" kindref="member">__HAL_RCC_BACKUPRESET_FORCE</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___r_t_c___clock___configuration_1ga14f32622c65f4ae239ba8cb00d510321" kindref="member">__HAL_RCC_BACKUPRESET_RELEASE</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>the<sp/>Content<sp/>of<sp/>BDCR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCC-&gt;BDCR<sp/>=<sp/>temp_reg;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>LSERDY<sp/>if<sp/>LSE<sp/>was<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(temp_reg,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga00145f8814cb9a5b180d76499d97aead" kindref="member">RCC_BDCR_LSEON</ref>))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>LSE<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1gac9fb963db446c16e46a18908f7fe1927" kindref="member">RCC_FLAG_LSERDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>RCC_LSE_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___r_t_c___clock___configuration_1ga2d6c4c7e951bfd007d26988fbfe6eaa4" kindref="member">__HAL_RCC_RTC_CONFIG</ref>(PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a831cc6023077b77683871743290aa720" kindref="member">RTCClockSelection</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Require<sp/>to<sp/>disable<sp/>power<sp/>clock<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwrclkchanged<sp/>==<sp/>SET)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PWR_CLK_DISABLE();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------<sp/>ADC<sp/>clock<sp/>Configuration<sp/>------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref>)<sp/>&amp;<sp/>RCC_PERIPHCLK_ADC)<sp/>==<sp/>RCC_PERIPHCLK_ADC)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_ADCPLLCLK_DIV(PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a28e358df2e95d000ccf4984cd14250e8" kindref="member">AdcClockSelection</ref>));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>ADC<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c_ex___peripheral___configuration_1ga4c75b81d1b7d65cda934c9f1350ea97b" kindref="member">__HAL_RCC_ADC_CONFIG</ref>(PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a28e358df2e95d000ccf4984cd14250e8" kindref="member">AdcClockSelection</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------<sp/>I2S2<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref>)<sp/>&amp;<sp/>RCC_PERIPHCLK_I2S2)<sp/>==<sp/>RCC_PERIPHCLK_I2S2)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_I2S2CLKSOURCE(PeriphClkInit-&gt;I2s2ClockSelection));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>I2S2<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_I2S2_CONFIG(PeriphClkInit-&gt;I2s2ClockSelection);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------<sp/>I2S3<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref>)<sp/>&amp;<sp/>RCC_PERIPHCLK_I2S3)<sp/>==<sp/>RCC_PERIPHCLK_I2S3)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_I2S3CLKSOURCE(PeriphClkInit-&gt;I2s3ClockSelection));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>I2S3<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_I2S3_CONFIG(PeriphClkInit-&gt;I2s3ClockSelection);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------<sp/>PLL<sp/>I2S<sp/>Configuration<sp/>----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>PLLI2S<sp/>need<sp/>to<sp/>be<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_I2S2SRC)<sp/>||<sp/>HAL_IS_BIT_SET(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_I2S3SRC))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>flag<sp/>to<sp/>indicate<sp/>that<sp/>PLL<sp/>I2S<sp/>should<sp/>be<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>pllactive<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>PLL<sp/>I2S<sp/>need<sp/>to<sp/>be<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllactive<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>PLL<sp/>I2S<sp/>only<sp/>if<sp/>not<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_CLR(RCC-&gt;CR,<sp/>RCC_CR_PLL3ON))</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLLI2S_MUL(PeriphClkInit-&gt;PLLI2S.PLLI2SMUL));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HSE_PREDIV2(PeriphClkInit-&gt;PLLI2S.HSEPrediv2Value));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prediv2<sp/>can<sp/>be<sp/>written<sp/>only<sp/>when<sp/>the<sp/>PLL2<sp/>is<sp/>disabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>an<sp/>error<sp/>only<sp/>if<sp/>new<sp/>value<sp/>is<sp/>different<sp/>from<sp/>the<sp/>programmed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/>RCC_CR_PLL2ON)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__HAL_RCC_HSE_GET_PREDIV2()<sp/>!=<sp/>PeriphClkInit-&gt;PLLI2S.HSEPrediv2Value))</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>HSE<sp/>prediv2<sp/>factor<sp/>--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_HSE_PREDIV2_CONFIG(PeriphClkInit-&gt;PLLI2S.HSEPrediv2Value);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>main<sp/>PLLI2S<sp/>multiplication<sp/>factors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PLLI2S_CONFIG(PeriphClkInit-&gt;PLLI2S.PLLI2SMUL);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>main<sp/>PLLI2S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PLLI2S_ENABLE();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLLI2S<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLLI2SRDY)<sp/><sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLLI2S_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>an<sp/>error<sp/>only<sp/>if<sp/>user<sp/>wants<sp/>to<sp/>change<sp/>the<sp/>PLLI2SMUL<sp/>whereas<sp/>PLLI2S<sp/>is<sp/>active<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(READ_BIT(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PLL3MUL)<sp/>!=<sp/>PeriphClkInit-&gt;PLLI2S.PLLI2SMUL)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F102x6)<sp/>||<sp/>defined(STM32F102xB)<sp/>||<sp/>defined(STM32F103x6)\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/>||<sp/>defined(STM32F103xB)<sp/>||<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/>||<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------<sp/>USB<sp/>clock<sp/>Configuration<sp/>------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref>)<sp/>&amp;<sp/>RCC_PERIPHCLK_USB)<sp/>==<sp/>RCC_PERIPHCLK_USB)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_USBPLLCLK_DIV(PeriphClkInit-&gt;UsbClockSelection));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>USB<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_USB_CONFIG(PeriphClkInit-&gt;UsbClockSelection);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F102x6<sp/>||<sp/>STM32F102xB<sp/>||<sp/>STM32F103x6<sp/>||<sp/>STM32F103xB<sp/>||<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>||<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCCEx_GetPeriphCLKConfig(<ref refid="struct_r_c_c___periph_c_l_k_init_type_def" kindref="compound">RCC_PeriphCLKInitTypeDef</ref><sp/><sp/>*PeriphClkInit)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcclk<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>all<sp/>possible<sp/>values<sp/>for<sp/>the<sp/>extended<sp/>clock<sp/>type<sp/>parameter------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref><sp/>=<sp/>RCC_PERIPHCLK_RTC;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>RTC<sp/>configuration<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>srcclk<sp/>=<sp/><ref refid="group___r_c_c___r_t_c___clock___configuration_1gad40d00ff1c984ebd011ea9f6e7f93c44" kindref="member">__HAL_RCC_GET_RTC_SOURCE</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Source<sp/>clock<sp/>is<sp/>LSE<sp/>or<sp/>LSI*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a831cc6023077b77683871743290aa720" kindref="member">RTCClockSelection</ref><sp/>=<sp/>srcclk;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>ADC<sp/>clock<sp/>configuration<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref><sp/>|=<sp/>RCC_PERIPHCLK_ADC;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a28e358df2e95d000ccf4984cd14250e8" kindref="member">AdcClockSelection</ref><sp/>=<sp/><ref refid="group___r_c_c_ex___peripheral___configuration_1ga2ee9f1838a8450f949b548a06ed3bc58" kindref="member">__HAL_RCC_GET_ADC_SOURCE</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>I2S2<sp/>clock<sp/>configuration<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref><sp/>|=<sp/>RCC_PERIPHCLK_I2S2;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;I2s2ClockSelection<sp/>=<sp/>__HAL_RCC_GET_I2S2_SOURCE();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>I2S3<sp/>clock<sp/>configuration<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref><sp/>|=<sp/>RCC_PERIPHCLK_I2S3;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;I2s3ClockSelection<sp/>=<sp/>__HAL_RCC_GET_I2S3_SOURCE();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>I2S2<sp/>clock<sp/>configuration<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref><sp/>|=<sp/>RCC_PERIPHCLK_I2S2;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;I2s2ClockSelection<sp/>=<sp/>RCC_I2S2CLKSOURCE_SYSCLK;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>I2S3<sp/>clock<sp/>configuration<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref><sp/>|=<sp/>RCC_PERIPHCLK_I2S3;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;I2s3ClockSelection<sp/>=<sp/>RCC_I2S3CLKSOURCE_SYSCLK;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F102x6)<sp/>||<sp/>defined(STM32F102xB)<sp/>||<sp/>defined(STM32F103x6)\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/>||<sp/>defined(STM32F103xB)<sp/>||<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/>||<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>USB<sp/>clock<sp/>configuration<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;<ref refid="struct_r_c_c___periph_c_l_k_init_type_def_1a82dae3f6a5ae6c184bd1b95a88d41fc2" kindref="member">PeriphClockSelection</ref><sp/>|=<sp/>RCC_PERIPHCLK_USB;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>PeriphClkInit-&gt;UsbClockSelection<sp/>=<sp/>__HAL_RCC_GET_USB_SOURCE();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F102x6<sp/>||<sp/>STM32F102xB<sp/>||<sp/>STM32F103x6<sp/>||<sp/>STM32F103xB<sp/>||<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>||<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">uint32_t<sp/>HAL_RCCEx_GetPeriphCLKFreq(uint32_t<sp/>PeriphClk)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPLLMULFactorTable[14]<sp/>=<sp/>{0,<sp/>0,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>13};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPredivFactorTable[16]<sp/>=<sp/>{1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15,<sp/>16};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>uint32_t<sp/>prediv1<sp/>=<sp/>0U,<sp/>pllclk<sp/>=<sp/>0U,<sp/>pllmul<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>uint32_t<sp/>pll2mul<sp/>=<sp/>0U,<sp/>pll3mul<sp/>=<sp/>0U,<sp/>prediv2<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F102x6)<sp/>||<sp/>defined(STM32F102xB)<sp/>||<sp/>defined(STM32F103x6)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(STM32F103xB)<sp/>||<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPLLMULFactorTable[16]<sp/>=<sp/>{2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15,<sp/>16,<sp/>16};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPredivFactorTable[2]<sp/>=<sp/>{1,<sp/>2};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>uint32_t<sp/>prediv1<sp/>=<sp/>0U,<sp/>pllclk<sp/>=<sp/>0U,<sp/>pllmul<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F102x6<sp/>||<sp/>STM32F102xB<sp/>||<sp/>STM32F103x6<sp/>||<sp/>STM32F103xB<sp/>||<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>uint32_t<sp/>temp_reg<sp/>=<sp/>0U,<sp/>frequency<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PERIPHCLOCK(PeriphClk));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PeriphClk)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F102x6)<sp/>||<sp/>defined(STM32F102xB)<sp/>||<sp/>defined(STM32F103x6)\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/>||<sp/>defined(STM32F103xB)<sp/>||<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/>||<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_PERIPHCLK_USB:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>RCC<sp/>configuration<sp/>------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_reg<sp/>=<sp/>RCC-&gt;CFGR;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>PLL<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllmul<sp/>=<sp/>aPLLMULFactorTable[(uint32_t)(temp_reg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>)<sp/>&gt;&gt;<sp/>RCC_CFGR_PLLMULL_Pos];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((temp_reg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref>)<sp/>!=<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga09fff12a4e92f4da5980321b7f99b632" kindref="member">RCC_PLLSOURCE_HSI_DIV2</ref>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)<sp/>||<sp/>defined(STM32F100xB)\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/>||<sp/>defined(STM32F100xE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1<sp/>=<sp/>aPredivFactorTable[(uint32_t)(RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV1)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PREDIV1_Pos];</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv1<sp/>=<sp/>aPredivFactorTable[(uint32_t)(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref>)<sp/>&gt;&gt;<sp/>RCC_CFGR_PLLXTPRE_Pos];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>||<sp/>STM32F100xB<sp/>||<sp/>STM32F100xE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PREDIV1SRC))</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL2<sp/>selected<sp/>as<sp/>Prediv1<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLLCLK<sp/>=<sp/>PLL2CLK<sp/>/<sp/>PREDIV1<sp/>*<sp/>PLLMUL<sp/>with<sp/>PLL2CLK<sp/>=<sp/>HSE/PREDIV2<sp/>*<sp/>PLL2MUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv2<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV2)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PREDIV2_Pos)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll2mul<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PLL2MUL)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PLL2MUL_Pos)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)((((<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv2)<sp/>*<sp/>pll2mul)<sp/>/<sp/>prediv1)<sp/>*<sp/>pllmul);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>source<sp/>:<sp/>PLLCLK<sp/>=<sp/>HSE/PREDIV1<sp/>*<sp/>PLLMUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)((<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv1)<sp/>*<sp/>pllmul);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>PLLMUL<sp/>was<sp/>set<sp/>to<sp/>13<sp/>means<sp/>that<sp/>it<sp/>was<sp/>to<sp/>cover<sp/>the<sp/>case<sp/>PLLMUL<sp/>6.5<sp/>(avoid<sp/>using<sp/>float)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>this<sp/>case<sp/>need<sp/>to<sp/>divide<sp/>pllclk<sp/>by<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllmul<sp/>==<sp/>aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5)<sp/>&gt;&gt;<sp/>RCC_CFGR_PLLMULL_Pos])</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>pllclk<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((temp_reg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref>)<sp/>!=<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga09fff12a4e92f4da5980321b7f99b632" kindref="member">RCC_PLLSOURCE_HSI_DIV2</ref>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>source<sp/>:<sp/>PLLCLK<sp/>=<sp/>HSE/PREDIV1<sp/>*<sp/>PLLMUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)((<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv1)<sp/>*<sp/>pllmul);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>source<sp/>:<sp/>PLLCLK<sp/>=<sp/>HSI/2<sp/>*<sp/>PLLMUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)((<ref refid="stm32f1xx__hal__conf_8h_1aaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmul);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calcul<sp/>of<sp/>the<sp/>USB<sp/>frequency*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USBCLK<sp/>=<sp/>PLLVCO<sp/>=<sp/>(2<sp/>x<sp/>PLLCLK)<sp/>/<sp/>USB<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_RCC_GET_USB_SOURCE()<sp/>==<sp/>RCC_USBCLKSOURCE_PLL_DIV2)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prescaler<sp/>of<sp/>2<sp/>selected<sp/>for<sp/>USB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>pllclk;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prescaler<sp/>of<sp/>3<sp/>selected<sp/>for<sp/>USB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>(2<sp/>*<sp/>pllclk)<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USBCLK<sp/>=<sp/>PLLCLK<sp/>/<sp/>USB<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_RCC_GET_USB_SOURCE()<sp/>==<sp/>RCC_USBCLKSOURCE_PLL)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>prescaler<sp/>selected<sp/>for<sp/>USB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>pllclk;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prescaler<sp/>of<sp/>1.5<sp/>selected<sp/>for<sp/>USB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>(pllclk<sp/>*<sp/>2)<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F102x6<sp/>||<sp/>STM32F102xB<sp/>||<sp/>STM32F103x6<sp/>||<sp/>STM32F103xB<sp/>||<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>||<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)<sp/>||<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_PERIPHCLK_I2S2:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK<sp/>used<sp/>as<sp/>source<sp/>clock<sp/>for<sp/>I2S2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>HAL_RCC_GetSysClockFreq();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_RCC_GET_I2S2_SOURCE()<sp/>==<sp/>RCC_I2S2CLKSOURCE_SYSCLK)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK<sp/>used<sp/>as<sp/>source<sp/>clock<sp/>for<sp/>I2S2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>HAL_RCC_GetSysClockFreq();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>PLLI2S<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/>RCC_CR_PLL3ON))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLLI2SVCO<sp/>=<sp/>2<sp/>*<sp/>PLLI2SCLK<sp/>=<sp/>2<sp/>*<sp/>(HSE/PREDIV2<sp/>*<sp/>PLL3MUL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv2<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV2)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PREDIV2_Pos)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll3mul<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PLL3MUL)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PLL3MUL_Pos)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>(uint32_t)(2<sp/>*<sp/>((<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv2)<sp/>*<sp/>pll3mul));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_PERIPHCLK_I2S3:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F103xE)<sp/>||<sp/>defined(STM32F103xG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK<sp/>used<sp/>as<sp/>source<sp/>clock<sp/>for<sp/>I2S3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>HAL_RCC_GetSysClockFreq();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_RCC_GET_I2S3_SOURCE()<sp/>==<sp/>RCC_I2S3CLKSOURCE_SYSCLK)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSCLK<sp/>used<sp/>as<sp/>source<sp/>clock<sp/>for<sp/>I2S3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>HAL_RCC_GetSysClockFreq();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>PLLI2S<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/>RCC_CR_PLL3ON))</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLLI2SVCO<sp/>=<sp/>2<sp/>*<sp/>PLLI2SCLK<sp/>=<sp/>2<sp/>*<sp/>(HSE/PREDIV2<sp/>*<sp/>PLL3MUL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv2<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV2)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PREDIV2_Pos)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll3mul<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PLL3MUL)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PLL3MUL_Pos)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>(uint32_t)(2<sp/>*<sp/>((<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>prediv2)<sp/>*<sp/>pll3mul));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F103xE<sp/>||<sp/>STM32F103xG<sp/>||<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_PERIPHCLK_RTC:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>RCC<sp/>BDCR<sp/>configuration<sp/>------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_reg<sp/>=<sp/>RCC-&gt;BDCR;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>LSE<sp/>is<sp/>ready<sp/>if<sp/>RTC<sp/>clock<sp/>selection<sp/>is<sp/>LSE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((temp_reg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>)<sp/>==<sp/><ref refid="group___r_c_c___r_t_c___clock___source_1ga5dca8d63f250a20bd6bc005670d0c150" kindref="member">RCC_RTCCLKSOURCE_LSE</ref>)<sp/>&amp;&amp;<sp/>(HAL_IS_BIT_SET(temp_reg,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaafca81172ed857ce6b94582fcaada87c" kindref="member">RCC_BDCR_LSERDY</ref>)))</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/><ref refid="stm32f1xx__hal__conf_8h_1a7bbb9d19e5189a6ccd0fb6fa6177d20d" kindref="member">LSE_VALUE</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>LSI<sp/>is<sp/>ready<sp/>if<sp/>RTC<sp/>clock<sp/>selection<sp/>is<sp/>LSI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((temp_reg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>)<sp/>==<sp/><ref refid="group___r_c_c___r_t_c___clock___source_1gab47a1afb8b5eef9f20f4772961d0a5f4" kindref="member">RCC_RTCCLKSOURCE_LSI</ref>)<sp/>&amp;&amp;<sp/>(HAL_IS_BIT_SET(RCC-&gt;CSR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gab569110e757aee573ebf9ad80812e8bb" kindref="member">RCC_CSR_LSIRDY</ref>)))</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/><ref refid="stm32f1xx__hal__conf_8h_1a4872023e65449c0506aac3ea6bec99e9" kindref="member">LSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((temp_reg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>)<sp/>==<sp/><ref refid="group___r_c_c___r_t_c___clock___source_1ga7e022374ec3ceffa94e5bb6310c35c83" kindref="member">RCC_RTCCLKSOURCE_HSE_DIV128</ref>)<sp/>&amp;&amp;<sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)))</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/><ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>/<sp/>128U;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clock<sp/>not<sp/>enabled<sp/>for<sp/>RTC*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>to<sp/>do:<sp/>frequency<sp/>already<sp/>initialized<sp/>to<sp/>0U<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_PERIPHCLK_ADC:</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>HAL_RCC_GetPCLK2Freq()<sp/>/<sp/>(((<ref refid="group___r_c_c_ex___peripheral___configuration_1ga2ee9f1838a8450f949b548a06ed3bc58" kindref="member">__HAL_RCC_GET_ADC_SOURCE</ref>()<sp/>&gt;&gt;<sp/>RCC_CFGR_ADCPRE_Pos)<sp/>+<sp/>1)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(frequency);</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32F105xC)<sp/>||<sp/>defined(STM32F107xC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCCEx_EnablePLLI2S(RCC_PLLI2SInitTypeDef<sp/><sp/>*PLLI2SInit)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>PLL<sp/>I2S<sp/>has<sp/>not<sp/>been<sp/>already<sp/>enabled<sp/>by<sp/>I2S2<sp/>or<sp/>I2S3*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_CLR(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_I2S2SRC)<sp/>&amp;&amp;<sp/>HAL_IS_BIT_CLR(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_I2S3SRC))</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLLI2S_MUL(PLLI2SInit-&gt;PLLI2SMUL));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HSE_PREDIV2(PLLI2SInit-&gt;HSEPrediv2Value));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prediv2<sp/>can<sp/>be<sp/>written<sp/>only<sp/>when<sp/>the<sp/>PLL2<sp/>is<sp/>disabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>an<sp/>error<sp/>only<sp/>if<sp/>new<sp/>value<sp/>is<sp/>different<sp/>from<sp/>the<sp/>programmed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/>RCC_CR_PLL2ON)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__HAL_RCC_HSE_GET_PREDIV2()<sp/>!=<sp/>PLLI2SInit-&gt;HSEPrediv2Value))</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLLI2S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLLI2S_DISABLE();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLLI2S<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLLI2SRDY)<sp/><sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLLI2S_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>HSE<sp/>prediv2<sp/>factor<sp/>--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_HSE_PREDIV2_CONFIG(PLLI2SInit-&gt;HSEPrediv2Value);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>main<sp/>PLLI2S<sp/>multiplication<sp/>factors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLLI2S_CONFIG(PLLI2SInit-&gt;PLLI2SMUL);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>main<sp/>PLLI2S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLLI2S_ENABLE();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLLI2S<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLLI2SRDY)<sp/><sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLLI2S_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLLI2S<sp/>cannot<sp/>be<sp/>modified<sp/>as<sp/>already<sp/>used<sp/>by<sp/>I2S2<sp/>or<sp/>I2S3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCCEx_DisablePLLI2S(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>PLL<sp/>I2S<sp/>as<sp/>not<sp/>requested<sp/>by<sp/>I2S2<sp/>or<sp/>I2S3*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_CLR(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_I2S2SRC)<sp/>&amp;&amp;<sp/>HAL_IS_BIT_CLR(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_I2S3SRC))</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLLI2S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLLI2S_DISABLE();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLLI2S<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLLI2SRDY)<sp/><sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLLI2S_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLLI2S<sp/>is<sp/>currently<sp/>used<sp/>by<sp/>I2S2<sp/>or<sp/>I2S3.<sp/>Cannot<sp/>be<sp/>disabled.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCCEx_EnablePLL2(RCC_PLL2InitTypeDef<sp/><sp/>*PLL2Init)</highlight></codeline>
<codeline lineno="740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>bit<sp/>can<sp/>not<sp/>be<sp/>cleared<sp/>if<sp/>the<sp/>PLL2<sp/>clock<sp/>is<sp/>used<sp/>indirectly<sp/>as<sp/>system</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/>clock<sp/>(i.e.<sp/>it<sp/>is<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>that<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___r_c_c___p_l_l___configuration_1ga3ea1390f8124e2b3b8d53e95541d6e53" kindref="member">__HAL_RCC_GET_PLL_OSCSOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((READ_BIT(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PREDIV1SRC))<sp/>==<sp/>RCC_CFGR2_PREDIV1SRC_PLL2))</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLL2_MUL(PLL2Init-&gt;PLL2MUL));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HSE_PREDIV2(PLL2Init-&gt;HSEPrediv2Value));</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prediv2<sp/>can<sp/>be<sp/>written<sp/>only<sp/>when<sp/>the<sp/>PLLI2S<sp/>is<sp/>disabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>an<sp/>error<sp/>only<sp/>if<sp/>new<sp/>value<sp/>is<sp/>different<sp/>from<sp/>the<sp/>programmed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/>RCC_CR_PLL3ON)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__HAL_RCC_HSE_GET_PREDIV2()<sp/>!=<sp/>PLL2Init-&gt;HSEPrediv2Value))</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLL2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_DISABLE();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLL2RDY)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL2_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>HSE<sp/>prediv2<sp/>factor<sp/>--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_HSE_PREDIV2_CONFIG(PLL2Init-&gt;HSEPrediv2Value);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>main<sp/>PLL2<sp/>multiplication<sp/>factors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_CONFIG(PLL2Init-&gt;PLL2MUL);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>main<sp/>PLL2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_ENABLE();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLL2RDY)<sp/><sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL2_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCCEx_DisablePLL2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>bit<sp/>can<sp/>not<sp/>be<sp/>cleared<sp/>if<sp/>the<sp/>PLL2<sp/>clock<sp/>is<sp/>used<sp/>indirectly<sp/>as<sp/>system</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/>clock<sp/>(i.e.<sp/>it<sp/>is<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>that<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___r_c_c___p_l_l___configuration_1ga3ea1390f8124e2b3b8d53e95541d6e53" kindref="member">__HAL_RCC_GET_PLL_OSCSOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((READ_BIT(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PREDIV1SRC))<sp/>==<sp/>RCC_CFGR2_PREDIV1SRC_PLL2))</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLL2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_DISABLE();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLL2RDY)<sp/><sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL2_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STM32F105xC<sp/>||<sp/>STM32F107xC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAL_RCC_MODULE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment">/************************<sp/>(C)<sp/>COPYRIGHT<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c"/>
  </compounddef>
</doxygen>
