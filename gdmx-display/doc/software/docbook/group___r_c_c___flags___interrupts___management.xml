<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___r_c_c___flags___interrupts___management" xml:lang="en-US">
<title>Flags Interrupts Management</title>
<indexterm><primary>Flags Interrupts Management</primary></indexterm>
<para>

<para>macros to manage the specified RCC Flags and interrupts. </para>
 
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___r_c_c___flags___interrupts___management_1ga180fb20a37b31a6e4f7e59213a6c0405">__HAL_RCC_ENABLE_IT</link>(__INTERRUPT__)   (*(<link linkend="_core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint8_t *) RCC_CIR_BYTE1_ADDRESS |= (__INTERRUPT__))</para>

<para>Enable RCC interrupt. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___flags___interrupts___management_1gafc4df8cd4df0a529d11f18bf1f7e9f50">__HAL_RCC_DISABLE_IT</link>(__INTERRUPT__)   (*(<link linkend="_core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint8_t *) RCC_CIR_BYTE1_ADDRESS &amp;= (uint8_t)(~(__INTERRUPT__)))</para>

<para>Disable RCC interrupt. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___flags___interrupts___management_1ga9d8ab157f58045b8daf8136bee54f139">__HAL_RCC_CLEAR_IT</link>(__INTERRUPT__)   (*(<link linkend="_core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint8_t *) RCC_CIR_BYTE2_ADDRESS = (__INTERRUPT__))</para>

<para>Clear the RCC&apos;s interrupt pending bits. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___flags___interrupts___management_1ga134af980b892f362c05ae21922cd828d">__HAL_RCC_GET_IT</link>(__INTERRUPT__)   ((RCC-&gt;CIR &amp; (__INTERRUPT__)) == (__INTERRUPT__))</para>

<para>Check the RCC&apos;s interrupt has occurred or not. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___r_c_c___flags___interrupts___management_1gaf28c11b36035ef1e27883ff7ee2c46b0"/>#define <link linkend="_group___r_c_c___flags___interrupts___management_1gaf28c11b36035ef1e27883ff7ee2c46b0">__HAL_RCC_CLEAR_RESET_FLAGS</link>()   (*(<link linkend="_core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t *)RCC_CSR_RMVF_BB = ENABLE)</para>

<para>Set RMVF bit to clear the reset flags. The reset flags are RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449">__HAL_RCC_GET_FLAG</link>(__FLAG__)</para>

<para>Check RCC flag is set or not. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>macros to manage the specified RCC Flags and interrupts. </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group___r_c_c___flags___interrupts___management_1ga9d8ab157f58045b8daf8136bee54f139"/>    <section>
    <title>__HAL_RCC_CLEAR_IT</title>
<indexterm><primary>__HAL_RCC_CLEAR_IT</primary><secondary>Flags Interrupts Management</secondary></indexterm>
<indexterm><primary>Flags Interrupts Management</primary><secondary>__HAL_RCC_CLEAR_IT</secondary></indexterm>
<para><computeroutput>#define __HAL_RCC_CLEAR_IT( __INTERRUPT__)   (*(<link linkend="_core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint8_t *) RCC_CIR_BYTE2_ADDRESS = (__INTERRUPT__))</computeroutput></para><para>

<para>Clear the RCC&apos;s interrupt pending bits. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</entry>
                                <entry>
<para>specifies the interrupt pending bit to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94">RCC_IT_LSIRDY</link> LSI ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d">RCC_IT_LSERDY</link> LSE ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f">RCC_IT_HSIRDY</link> HSI ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866">RCC_IT_HSERDY</link> HSE ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9">RCC_IT_PLLRDY</link> Main PLL ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga9bb34a4912d2084dc1c0834eb53aa7a3">RCC_IT_CSS</link> Clock Security System interrupt </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_group___r_c_c___flags___interrupts___management_1gafc4df8cd4df0a529d11f18bf1f7e9f50"/>    <section>
    <title>__HAL_RCC_DISABLE_IT</title>
<indexterm><primary>__HAL_RCC_DISABLE_IT</primary><secondary>Flags Interrupts Management</secondary></indexterm>
<indexterm><primary>Flags Interrupts Management</primary><secondary>__HAL_RCC_DISABLE_IT</secondary></indexterm>
<para><computeroutput>#define __HAL_RCC_DISABLE_IT( __INTERRUPT__)   (*(<link linkend="_core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint8_t *) RCC_CIR_BYTE1_ADDRESS &amp;= (uint8_t)(~(__INTERRUPT__)))</computeroutput></para><para>

<para>Disable RCC interrupt. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</entry>
                                <entry>
<para>specifies the RCC interrupt sources to be disabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94">RCC_IT_LSIRDY</link> LSI ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d">RCC_IT_LSERDY</link> LSE ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f">RCC_IT_HSIRDY</link> HSI ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866">RCC_IT_HSERDY</link> HSE ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9">RCC_IT_PLLRDY</link> main PLL ready interrupt </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_group___r_c_c___flags___interrupts___management_1ga180fb20a37b31a6e4f7e59213a6c0405"/>    <section>
    <title>__HAL_RCC_ENABLE_IT</title>
<indexterm><primary>__HAL_RCC_ENABLE_IT</primary><secondary>Flags Interrupts Management</secondary></indexterm>
<indexterm><primary>Flags Interrupts Management</primary><secondary>__HAL_RCC_ENABLE_IT</secondary></indexterm>
<para><computeroutput>#define __HAL_RCC_ENABLE_IT( __INTERRUPT__)   (*(<link linkend="_core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint8_t *) RCC_CIR_BYTE1_ADDRESS |= (__INTERRUPT__))</computeroutput></para><para>

<para>Enable RCC interrupt. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</entry>
                                <entry>
<para>specifies the RCC interrupt sources to be enabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94">RCC_IT_LSIRDY</link> LSI ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d">RCC_IT_LSERDY</link> LSE ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f">RCC_IT_HSIRDY</link> HSI ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866">RCC_IT_HSERDY</link> HSE ready interrupt </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9">RCC_IT_PLLRDY</link> main PLL ready interrupt </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449"/>    <section>
    <title>__HAL_RCC_GET_FLAG</title>
<indexterm><primary>__HAL_RCC_GET_FLAG</primary><secondary>Flags Interrupts Management</secondary></indexterm>
<indexterm><primary>Flags Interrupts Management</primary><secondary>__HAL_RCC_GET_FLAG</secondary></indexterm>
<para><computeroutput>#define __HAL_RCC_GET_FLAG( __FLAG__)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((((__FLAG__)&#32;&gt;&gt;&#32;5U)&#32;==&#32;CR_REG_INDEX)?&#32;&#32;&#32;RCC-&gt;CR&#32;&#32;&#32;:&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((((__FLAG__)&#32;&gt;&gt;&#32;5U)&#32;==&#32;BDCR_REG_INDEX)?&#32;RCC-&gt;BDCR&#32;:&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RCC-&gt;CSR))&#32;&amp;&#32;(1U&#32;&lt;&lt;&#32;((__FLAG__)&#32;&amp;&#32;RCC_FLAG_MASK)))
</programlisting><para>

<para>Check RCC flag is set or not. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>&lt;strong&gt;FLAG&lt;/strong&gt;</entry>
                                <entry>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem>
<para><link linkend="_group___r_c_c___flag_1ga827d986723e7ce652fa733bb8184d216">RCC_FLAG_HSIRDY</link> HSI oscillator clock ready. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c">RCC_FLAG_HSERDY</link> HSE oscillator clock ready. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1gaf82d8afb18d9df75db1d6c08b9c50046">RCC_FLAG_PLLRDY</link> Main PLL clock ready. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1gac9fb963db446c16e46a18908f7fe1927">RCC_FLAG_LSERDY</link> LSE oscillator clock ready. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1ga8c5e4992314d347597621bfe7ab10d72">RCC_FLAG_LSIRDY</link> LSI oscillator clock ready. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1gabfc3ab5d4a8a94ec1c9f38794ce37ad6">RCC_FLAG_PINRST</link> Pin reset. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1ga39ad309070f416720207eece5da7dc2c">RCC_FLAG_PORRST</link> POR/PDR reset. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1gaf7852615e9b19f0b2dbc8d08c7594b52">RCC_FLAG_SFTRST</link> Software reset. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1gaac46bac8a97cf16635ff7ffc1e6c657f">RCC_FLAG_IWDGRST</link> Independent Watchdog reset. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1gaa80b60b2d497ccd7b7de1075009999a7">RCC_FLAG_WWDGRST</link> Window Watchdog reset. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___flag_1ga67049531354aed7546971163d02c9920">RCC_FLAG_LPWRRST</link> Low Power reset. </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>The</entry>
                                <entry>
<para>new state of <emphasis role="bold">FLAG</emphasis> (TRUE or FALSE). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_group___r_c_c___flags___interrupts___management_1ga134af980b892f362c05ae21922cd828d"/>    <section>
    <title>__HAL_RCC_GET_IT</title>
<indexterm><primary>__HAL_RCC_GET_IT</primary><secondary>Flags Interrupts Management</secondary></indexterm>
<indexterm><primary>Flags Interrupts Management</primary><secondary>__HAL_RCC_GET_IT</secondary></indexterm>
<para><computeroutput>#define __HAL_RCC_GET_IT( __INTERRUPT__)   ((RCC-&gt;CIR &amp; (__INTERRUPT__)) == (__INTERRUPT__))</computeroutput></para><para>

<para>Check the RCC&apos;s interrupt has occurred or not. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</entry>
                                <entry>
<para>specifies the RCC interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94">RCC_IT_LSIRDY</link> LSI ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d">RCC_IT_LSERDY</link> LSE ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f">RCC_IT_HSIRDY</link> HSI ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866">RCC_IT_HSERDY</link> HSE ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9">RCC_IT_PLLRDY</link> Main PLL ready interrupt. </para>
</listitem>
<listitem>
<para><link linkend="_group___r_c_c___interrupt_1ga9bb34a4912d2084dc1c0834eb53aa7a3">RCC_IT_CSS</link> Clock Security System interrupt </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>The</entry>
                                <entry>
<para>new state of <emphasis role="bold">INTERRUPT</emphasis> (TRUE or FALSE). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
