<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f1xx_8h" xml:lang="en-US">
<title>Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h File Reference</title>
<indexterm><primary>Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h</primary></indexterm>
<para>

<para>CMSIS STM32F1xx Device Peripheral Access Layer Header File. </para>
 
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___library__configuration__section_1gab52bb1ba72165913f41a6271d60b844c">STM32F1</link></para>

<para>STM32 Family. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___library__configuration__section_1gab50febca128907bd4baf44562e1202d0">__STM32F1_CMSIS_VERSION_MAIN</link>   (0x04)</para>

<para>Comment the line below if you will not use the peripherals drivers. In this case, these drivers will not be included and the application code will be based on direct access to peripherals registers. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___library__configuration__section_1ga4e51532a561075fb07e03adf49646321">__STM32F1_CMSIS_VERSION_SUB1</link>   (0x03)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___library__configuration__section_1gaadb6cccec78cfbae315f60e7a72d7ad6">__STM32F1_CMSIS_VERSION_SUB2</link>   (0x01)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___library__configuration__section_1ga3a6ddbe6f81547b6c4379e0a43769c2a">__STM32F1_CMSIS_VERSION_RC</link>   (0x00)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">__STM32F1_CMSIS_VERSION</emphasis></para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_FUNCTIONAL_STATE</emphasis>(STATE)   (((STATE) == DISABLE) || ((STATE) == ENABLE))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">SET_BIT</emphasis>(REG,  BIT)   ((REG) |= (BIT))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">CLEAR_BIT</emphasis>(REG,  BIT)   ((REG) &amp;= ~(BIT))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">READ_BIT</emphasis>(REG,  BIT)   ((REG) &amp; (BIT))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">CLEAR_REG</emphasis>(REG)   ((REG) = (0x0))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">WRITE_REG</emphasis>(REG,  VAL)   ((REG) = (VAL))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">READ_REG</emphasis>(REG)   ((REG))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">MODIFY_REG</emphasis>(REG,  CLEARMASK,  SETMASK)   WRITE_REG((REG), (((READ_REG(REG)) &amp; (~(CLEARMASK))) | (SETMASK)))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">POSITION_VAL</emphasis>(VAL)   (<link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</link>(<link linkend="_group___c_m_s_i_s___core___instruction_interface_1gaf944a7b7d8fd70164cca27669316bcf7">__RBIT</link>(VAL)))</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef enum FlagStatus <emphasis role="strong">ITStatus</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___exported__types_1ga89136caac2e14c55151f527ac02daaff"/>enum <emphasis role="strong">FlagStatus</emphasis> { <emphasis role="strong">RESET</emphasis> = 0
, <emphasis role="strong">SET</emphasis> = !RESET
 }</para>
</listitem>
            <listitem><para><anchor xml:id="_group___exported__types_1gac9a7e9a35d2513ec15c3b537aaa4fba1"/>enum <emphasis role="strong">FunctionalState</emphasis> { <emphasis role="strong">DISABLE</emphasis> = 0
, <emphasis role="strong">ENABLE</emphasis> = !DISABLE
 }</para>
</listitem>
            <listitem><para><anchor xml:id="_group___exported__types_1ga8333b96c67f83cba354b3407fcbb6ee8"/>enum <emphasis role="strong">ErrorStatus</emphasis> { <emphasis role="strong">SUCCESS</emphasis> = 0U
, <emphasis role="strong">ERROR</emphasis> = !SUCCESS
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>CMSIS STM32F1xx Device Peripheral Access Layer Header File. </para>

<para><formalpara><title>Author</title>

<para>MCD Application Team <literallayout><computeroutput>     The file is the unique include file that the application programmer
     is using in the C source code, usually in main.c. This file contains:
       - Configuration section that allows to select:
         - The STM32F1xx device used in the target application
         - To use or not the peripheral’s drivers in application code(i.e. 
           code will be based on direct access to peripheral’s registers 
           rather than drivers API), this option is controlled by 
           &quot;#define USE_HAL_DRIVER&quot;
</computeroutput></literallayout></para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
<formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; Copyright (c) 2017 STMicroelectronics. All rights reserved.</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>

<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
</section>
</section>
