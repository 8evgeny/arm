.TH "Inc/display.h" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Inc/display.h \- Display module (header file)\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include 'stm32f1xx_hal\&.h'\fP
.br
\fC#include 'hd44780\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDISPLAY_REFRESH_INTERVAL\fP   60"
.br
.RI "Display video page render interval, ms\&. "
.in -1c
.PP
.RI "\fBFramebuffer parameters\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBDISPLAY_ROW_SIZE\fP   \fBHD44780_ROW_SIZE\fP"
.br
.RI "Number of characters per line\&. "
.ti -1c
.RI "#define \fBDISPLAY_ROW_NUM\fP   \fBHD44780_ROW_NUM\fP"
.br
.RI "Number of lines\&. "
.in -1c
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBDISPLAY_init\fP (void)"
.br
.RI "Display initialization\&. "
.ti -1c
.RI "void \fBDISPLAY_clear\fP (void)"
.br
.RI "Display clear\&. "
.ti -1c
.RI "void \fBDISPLAY_setRenderBuffer\fP (uint8_t **buffer)"
.br
.RI "Setting the display buffer\&. "
.ti -1c
.RI "void \fBDISPLAY_setCursorMode\fP (uint8_t mode)"
.br
.RI "Cursor mode control\&. "
.ti -1c
.RI "uint8_t \fBDISPLAY_moveCursorXY\fP (uint8_t X, uint8_t Y)"
.br
.RI "Moves the cursor to the specified position\&. "
.ti -1c
.RI "void \fBDISPLAY_printSymbol\fP (uint8_t Symbol)"
.br
.RI "Print the character at the current position\&. "
.ti -1c
.RI "void \fBDISPLAY_printSymbolXY\fP (uint8_t X, uint8_t Y, uint8_t Symbol)"
.br
.RI "Printing a character at the current position from FLASH memory\&. "
.ti -1c
.RI "void \fBDISPLAY_printString\fP (uint8_t *String)"
.br
.RI "Print a character at a specified position from FLASH memory\&. "
.ti -1c
.RI "void \fBDISPLAY_printScreen\fP (uint8_t *Screen)"
.br
.ti -1c
.RI "void \fBDISPLAY_printStringXY\fP (uint8_t X, uint8_t Y, uint8_t *String)"
.br
.RI "Print a string from FLASH memory at the current position\&. "
.ti -1c
.RI "void \fBDISPLAY_putSymbolXYToRenderBuffer\fP (uint8_t X, uint8_t Y, uint8_t Symbol)"
.br
.RI "Printing a line from FLASH memory to position X, Y\&. "
.ti -1c
.RI "void \fBDISPLAY_putStringXYToRenderBuffer\fP (uint8_t X, uint8_t Y, uint8_t *String)"
.br
.RI "Function for printing a string in RenderBuffer\&. "
.ti -1c
.RI "void \fBDISPLAY_printuint8_t\fP (uint8_t Value)"
.br
.RI "Function of printing an unsigned integer number on the display\&. "
.ti -1c
.RI "void \fBDISPLAY_printXYuint8_t\fP (uint8_t X, uint8_t Y, uint8_t Value)"
.br
.RI "Function of printing an unsigned integer number on the display\&. "
.ti -1c
.RI "void \fBDISPLAY_printuint16_t\fP (uint16_t Value)"
.br
.RI "Function of printing an unsigned integer number on the display\&. "
.ti -1c
.RI "void \fBDISPLAY_printXYuint16_t\fP (uint8_t X, uint8_t Y, uint16_t Value)"
.br
.RI "Function of printing an unsigned integer number on the display\&. "
.ti -1c
.RI "void \fBDISPLAY_run\fP (void)"
.br
.RI "Display render function\&. "
.in -1c
.SH "Detailed Description"
.PP 
Display module (header file)\&. 

Display module (source file)\&.
.PP
Display control module\&. 
.PP
\fBAuthor\fP
.RS 4
Arthur Markaryan 
.RE
.PP
\fBDate\fP
.RS 4
31\&.03\&.2021 
.RE
.PP
\fBCopyright\fP
.RS 4

.br
 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void DISPLAY_clear (void)"

.PP
Display clear\&. Display cleaning function\&. 
.SS "void DISPLAY_init (void)"

.PP
Display initialization\&. Display control module initialization function\&. 
.SS "uint8_t DISPLAY_moveCursorXY (uint8_t X, uint8_t Y)"

.PP
Moves the cursor to the specified position\&. The function of moving the cursor to the X, Y position\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_printString (uint8_t * String)"

.PP
Print a character at a specified position from FLASH memory\&. The function of printing a character from FLASH memory to position X, Y\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fIptrSymbol\fP - pointer to the displayed symbol in FLASH memory\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&.
.RE
.PP
Print a string\&.
.PP
Function of printing the string at the current cursor position on the display\&. 
.PP
\fBParameters\fP
.RS 4
\fIString\fP - the string to be printed\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_printStringXY (uint8_t X, uint8_t Y, uint8_t * String)"

.PP
Print a string from FLASH memory at the current position\&. Function of printing a string from FLASH memory at the current cursor position on the display\&. 
.PP
\fBParameters\fP
.RS 4
\fIString\fP - the string to be printed\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&.
.RE
.PP
Print the string at the specified position\&.
.PP
The function of printing a line to position X, Y\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fIString\fP - the string to be printed\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_printSymbol (uint8_t Symbol)"

.PP
Print the character at the current position\&. The function of printing a character at the current cursor position on the display\&. 
.PP
\fBParameters\fP
.RS 4
\fISymbol\fP - the displayed symbol\&. 
.RE
.PP

.SS "void DISPLAY_printSymbolXY (uint8_t X, uint8_t Y, uint8_t Symbol)"

.PP
Printing a character at the current position from FLASH memory\&. The function of printing a character at the current cursor position on the display\&. 
.PP
\fBParameters\fP
.RS 4
\fIptrSymbol\fP - pointer to the displayed symbol in FLASH memory\&.
.RE
.PP
Prints a character at the specified position\&.
.PP
The function of printing a character in the X, Y position\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fISymbol\fP - the displayed symbol\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_printuint16_t (uint16_t Value)"

.PP
Function of printing an unsigned integer number on the display\&. Function of printing an 'uint16_t' number on the display from current position\&. 
.PP
\fBParameters\fP
.RS 4
\fIValue\fP - the unsigned integer number to be printed on the display\&. 
.br
 
.RE
.PP

.SS "void DISPLAY_printuint8_t (uint8_t Value)"

.PP
Function of printing an unsigned integer number on the display\&. Function of printing an 'uint8_t' number on the display from current position\&. 
.PP
\fBParameters\fP
.RS 4
\fIValue\fP - the unsigned integer number to be printed on the display\&. 
.br
 
.RE
.PP

.SS "void DISPLAY_printXYuint16_t (uint8_t X, uint8_t Y, uint16_t Value)"

.PP
Function of printing an unsigned integer number on the display\&. Function of printing an 'uint16_t' number on the display from position from the of X, Y\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fIValue\fP - the unsigned integer number to be printed on the display\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_printXYuint8_t (uint8_t X, uint8_t Y, uint8_t Value)"

.PP
Function of printing an unsigned integer number on the display\&. Function of printing an 'uint8_t' number on the display from position from the of X, Y\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fIValue\fP - the unsigned integer number to be printed on the display\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_putStringXYToRenderBuffer (uint8_t X, uint8_t Y, uint8_t * String)"

.PP
Function for printing a string in RenderBuffer\&. The function of printing a string in RenderBuffer at position X, Y\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fIString\fP - the string to be printed to the buffer\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_putSymbolXYToRenderBuffer (uint8_t X, uint8_t Y, uint8_t Symbol)"

.PP
Printing a line from FLASH memory to position X, Y\&. Function of printing a line from FLASH memory to position X, Y on the display\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fIString\fP - string to be printed\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&.
.RE
.PP
The function of printing a character in RenderBuffer\&.
.PP
The function to print a character in RenderBuffer at X, Y position\&. 
.PP
\fBParameters\fP
.RS 4
\fIX\fP - coordinate of familiarity along the X axis (from 0 to N)\&. 
.br
\fIY\fP - coordinate of familiarity along the Y axis (from 0 to N)\&. 
.br
\fISymbol\fP - the symbol to be printed into the buffer\&. 
.RE
.PP
\fBNote\fP
.RS 4
The origin is in the upper left corner of the display\&. 
.RE
.PP

.SS "void DISPLAY_run (void)"

.PP
Display render function\&. A function that renders the framebuffer to the display\&. 
.PP
\fBParameters\fP
.RS 4
\fInone\&.\fP 
.RE
.PP
\fBReturns\fP
.RS 4
none\&. 
.RE
.PP

.SS "void DISPLAY_setCursorMode (uint8_t mode)"

.PP
Cursor mode control\&. A function that controls the mode of the cursor\&. 
.PP
\fBParameters\fP
.RS 4
\fImode\fP - cursor operation mode\&. Bit0 - On / Off, Bit1 - BlankOn / BlankOff\&. 
.RE
.PP

.SS "void DISPLAY_setRenderBuffer (uint8_t ** buffer)"

.PP
Setting the display buffer\&. Display buffer setting function\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP - Pointer to a two-dimensional buffer of displayed information\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
