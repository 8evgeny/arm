.TH "vTaskDelete" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vTaskDelete \- vTaskDelete
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
task\&. h 
.PP
.nf
void vTaskDelete( TaskHandle_t xTask );
.fi
.PP
.PP
INCLUDE_vTaskDelete must be defined as 1 for this function to be available\&. See the configuration section for more information\&.
.PP
Remove a task from the RTOS real time kernel's management\&. The task being deleted will be removed from all ready, blocked, suspended and event lists\&.
.PP
NOTE: The idle task is responsible for freeing the kernel allocated memory from tasks that have been deleted\&. It is therefore important that the idle task is not starved of microcontroller processing time if your application makes any calls to vTaskDelete ()\&. Memory allocated by the task code is not automatically freed, and should be freed before the task is deleted\&.
.PP
See the demo application file death\&.c for sample code that utilises vTaskDelete ()\&.
.PP
\fBParameters\fP
.RS 4
\fIxTask\fP The handle of the task to be deleted\&. Passing NULL will cause the calling task to be deleted\&.
.RE
.PP
Example usage: 
.PP
.nf

void vOtherFunction( void )
{
TaskHandle_t xHandle;

    // Create the task, storing the handle\&.
    xTaskCreate( vTaskCode, 'NAME', STACK_SIZE, NULL, tskIDLE_PRIORITY, &xHandle );

    // Use the handle to delete the task\&.
    vTaskDelete( xHandle );
}
  
.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
