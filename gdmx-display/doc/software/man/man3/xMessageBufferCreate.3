.TH "xMessageBufferCreate" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xMessageBufferCreate \- xMessageBufferCreate
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
\fBmessage_buffer\&.h\fP
.PP
.PP
.nf

MessageBufferHandle_t xMessageBufferCreate( size_t xBufferSizeBytes );
.fi
.PP
.PP
Creates a new message buffer using dynamically allocated memory\&. See xMessageBufferCreateStatic() for a version that uses statically allocated memory (memory that is allocated at compile time)\&.
.PP
configSUPPORT_DYNAMIC_ALLOCATION must be set to 1 or left undefined in \fBFreeRTOSConfig\&.h\fP for xMessageBufferCreate() to be available\&.
.PP
\fBParameters\fP
.RS 4
\fIxBufferSizeBytes\fP The total number of bytes (not messages) the message buffer will be able to hold at any one time\&. When a message is written to the message buffer an additional sizeof( size_t ) bytes are also written to store the message's length\&. sizeof( size_t ) is typically 4 bytes on a 32-bit architecture, so on most 32-bit architectures a 10 byte message will take up 14 bytes of message buffer space\&.
.RE
.PP
\fBReturns\fP
.RS 4
If NULL is returned, then the message buffer cannot be created because there is insufficient heap memory available for FreeRTOS to allocate the message buffer data structures and storage area\&. A non-NULL value being returned indicates that the message buffer has been created successfully - the returned value should be stored as the handle to the created message buffer\&.
.RE
.PP
Example use: 
.PP
.nf


void vAFunction( void )
{
MessageBufferHandle_t xMessageBuffer;
const size_t xMessageBufferSizeBytes = 100;

    // Create a message buffer that can hold 100 bytes\&.  The memory used to hold
    // both the message buffer structure and the messages themselves is allocated
    // dynamically\&.  Each message added to the buffer consumes an additional 4
    // bytes which are used to hold the lengh of the message\&.
    xMessageBuffer = xMessageBufferCreate( xMessageBufferSizeBytes );

    if( xMessageBuffer == NULL )
    {
        // There was not enough heap memory space available to create the
        // message buffer\&.
    }
    else
    {
        // The message buffer was created successfully and can now be used\&.
    }

.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
