.TH "crSTART" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
crSTART \- crSTART
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
croutine\&. h 
.PP
.nf

crSTART( CoRoutineHandle_t xHandle );
.fi
.PP
.PP
This macro MUST always be called at the start of a co-routine function\&.
.PP
Example usage: 
.PP
.nf

// Co-routine to be created\&.
void vACoRoutine( CoRoutineHandle_t xHandle, UBaseType_t uxIndex )
{
// Variables in co-routines must be declared static if they must maintain value across a blocking call\&.
static int32_t ulAVariable;

    // Must start every co-routine with a call to crSTART();
    crSTART( xHandle );

    for( ;; )
    {
         // Co-routine functionality goes here\&.
    }

    // Must end every co-routine with a call to crEND();
    crEND();
}
.fi
.PP
.PP
croutine\&. h 
.PP
.nf

crEND();
.fi
.PP
.PP
This macro MUST always be called at the end of a co-routine function\&.
.PP
Example usage: 
.PP
.nf

// Co-routine to be created\&.
void vACoRoutine( CoRoutineHandle_t xHandle, UBaseType_t uxIndex )
{
// Variables in co-routines must be declared static if they must maintain value across a blocking call\&.
static int32_t ulAVariable;

    // Must start every co-routine with a call to crSTART();
    crSTART( xHandle );

    for( ;; )
    {
         // Co-routine functionality goes here\&.
    }

    // Must end every co-routine with a call to crEND();
    crEND();
}
.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
