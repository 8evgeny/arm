<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="sysmem_8c" kind="file" language="C++">
    <compoundname>sysmem.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="2">
        <label>errno.h</label>
      </node>
      <node id="1">
        <label>Src/sysmem.c</label>
        <link refid="sysmem_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sysmem_8c_1ad65a8842cc674e3ddf69355898c0ecbf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int errno</definition>
        <argsstring></argsstring>
        <name>errno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>File : sysmem.c</para>
<para>Author : Auto-generated by STM32CubeIDE</para>
<para>Abstract : STM32CubeIDE Minimal System Memory calls file <verbatim>             For more information about which c-functions
          need which of these lowlevel functions
          please consult the Newlib libc-manual
</verbatim> Environment : STM32CubeIDE MCU</para>
<para>Distribution: The file is distributed as is, without any warranty of any kind.</para>
<para><heading level="2"><center><copy/> COPYRIGHT(c) 2018 STMicroelectronics</center></heading>
</para>
<para>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:<orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of STMicroelectronics nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></orderedlist>
</para>
<para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/sysmem.c" line="54" column="12" declfile="Src/sysmem.c" declline="54" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sysmem_8c_1ac48c4dec788f2c14941ca36c3404c618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>register char *stack_ptr</type>
        <definition>register char* stack_ptr asm</definition>
        <argsstring>(&quot;sp&quot;)</argsstring>
        <name>asm</name>
        <param>
          <type>&quot;sp&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/sysmem.c" line="55" column="26" declfile="Src/sysmem.c" declline="55" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="sysmem_8c_1aae54d7b9578ba1fc171ce6f30f4c68a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>caddr_t</type>
        <definition>caddr_t _sbrk</definition>
        <argsstring>(int incr)</argsstring>
        <name>_sbrk</name>
        <param>
          <type>int</type>
          <declname>incr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>_sbrk Increase program data space. Malloc and related functions depend on this </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Src/sysmem.c" line="63" column="9" bodyfile="Src/sysmem.c" bodystart="63" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errno;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>stack_ptr<sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;sp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">caddr_t<sp/>_sbrk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incr)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>end<sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*heap_end;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prev_heap_end;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap_end<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_end<sp/>=<sp/>&amp;end;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_heap_end<sp/>=<sp/>heap_end;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap_end<sp/>+<sp/>incr<sp/>&gt;<sp/>stack_ptr)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(caddr_t)<sp/>-1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>heap_end<sp/>+=<sp/>incr;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(caddr_t)<sp/>prev_heap_end;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Src/sysmem.c"/>
  </compounddef>
</doxygen>
