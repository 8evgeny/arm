<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group___r_c_c___r_t_c___clock___configuration" kind="group">
    <compoundname>RCC_RTC_Clock_Configuration</compoundname>
    <title>RCC RTC Clock Configuration</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___r_c_c___r_t_c___clock___configuration_1ga2d6c4c7e951bfd007d26988fbfe6eaa4" prot="public" static="no">
        <name>__HAL_RCC_RTC_CONFIG</name>
        <param><defname>__RTC_CLKSOURCE__</defname></param>
        <initializer>MODIFY_REG(RCC-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>, (__RTC_CLKSOURCE__))</initializer>
        <briefdescription>
<para>Macro to configure the RTC clock (RTCCLK). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>As the RTC clock configuration bits are in the Backup domain and write access is denied to this domain after reset, you have to enable write access using the Power Backup Access macro before to configure the RTC clock source (to be done once after reset). </para>
</simplesect>
<simplesect kind="note"><para>Once the RTC clock is configured it can&apos;t be changed unless the Backup domain is reset using <ref refid="group___r_c_c___r_t_c___clock___configuration_1ga3bf7da608ff985873ca8e248fb1dc4f0" kindref="member">__HAL_RCC_BACKUPRESET_FORCE()</ref> macro, or by a Power On Reset (POR).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;RTC_CLKSOURCE&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RTC clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1gacce0b2f54d103340d8c3a218e86e295d" kindref="member">RCC_RTCCLKSOURCE_NO_CLK</ref> No clock selected as RTC clock </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1ga5dca8d63f250a20bd6bc005670d0c150" kindref="member">RCC_RTCCLKSOURCE_LSE</ref> LSE selected as RTC clock </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1gab47a1afb8b5eef9f20f4772961d0a5f4" kindref="member">RCC_RTCCLKSOURCE_LSI</ref> LSI selected as RTC clock </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1ga7e022374ec3ceffa94e5bb6310c35c83" kindref="member">RCC_RTCCLKSOURCE_HSE_DIV128</ref> HSE divided by 128 selected as RTC clock </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If the LSE or LSI is used as RTC clock source, the RTC continues to work in STOP and STANDBY modes, and can be used as wakeup source. However, when the HSE clock is used as RTC clock source, the RTC cannot be used in STOP and STANDBY modes. </para>
</simplesect>
<simplesect kind="note"><para>The maximum input clock frequency for RTC is 1MHz (when using HSE as RTC clock source). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="987" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___r_t_c___clock___configuration_1gad40d00ff1c984ebd011ea9f6e7f93c44" prot="public" static="no">
        <name>__HAL_RCC_GET_RTC_SOURCE</name>
        <param></param>
        <initializer>(READ_BIT(RCC-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1gabe30dbd38f6456990ee641648bc05d40" kindref="member">RCC_BDCR_RTCSEL</ref>))</initializer>
        <briefdescription>
<para>Macro to get the RTC clock source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>clock source can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1gacce0b2f54d103340d8c3a218e86e295d" kindref="member">RCC_RTCCLKSOURCE_NO_CLK</ref> No clock selected as RTC clock </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1ga5dca8d63f250a20bd6bc005670d0c150" kindref="member">RCC_RTCCLKSOURCE_LSE</ref> LSE selected as RTC clock </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1gab47a1afb8b5eef9f20f4772961d0a5f4" kindref="member">RCC_RTCCLKSOURCE_LSI</ref> LSI selected as RTC clock </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___r_t_c___clock___source_1ga7e022374ec3ceffa94e5bb6310c35c83" kindref="member">RCC_RTCCLKSOURCE_HSE_DIV128</ref> HSE divided by 128 selected as RTC clock </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="996" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___r_t_c___clock___configuration_1gab7cc36427c31da645a0e38e181f8ce0f" prot="public" static="no">
        <name>__HAL_RCC_RTC_ENABLE</name>
        <param></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint32_t *) RCC_BDCR_RTCEN_BB = ENABLE)</initializer>
        <briefdescription>
<para>Macro to enable the the RTC clock. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>These macros must be used only after the RTC clock source was selected. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1001" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1001" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___r_t_c___clock___configuration_1gaab5eeb81fc9f0c8d4450069f7a751855" prot="public" static="no">
        <name>__HAL_RCC_RTC_DISABLE</name>
        <param></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint32_t *) RCC_BDCR_RTCEN_BB = DISABLE)</initializer>
        <briefdescription>
<para>Macro to disable the the RTC clock. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>These macros must be used only after the RTC clock source was selected. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1006" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___r_t_c___clock___configuration_1ga3bf7da608ff985873ca8e248fb1dc4f0" prot="public" static="no">
        <name>__HAL_RCC_BACKUPRESET_FORCE</name>
        <param></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint32_t *) RCC_BDCR_BDRST_BB = ENABLE)</initializer>
        <briefdescription>
<para>Macro to force the Backup domain reset. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function resets the RTC peripheral (including the backup registers) and the RTC clock source selection in RCC_BDCR register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1012" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___r_t_c___clock___configuration_1ga14f32622c65f4ae239ba8cb00d510321" prot="public" static="no">
        <name>__HAL_RCC_BACKUPRESET_RELEASE</name>
        <param></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint32_t *) RCC_BDCR_BDRST_BB = DISABLE)</initializer>
        <briefdescription>
<para>Macros to release the Backup domain reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1016" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1016" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
