<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stm32f1xx__hal__rcc_8c" kind="file" language="C++">
    <compoundname>stm32f1xx_hal_rcc.c</compoundname>
    <includes refid="stm32f1xx__hal_8h" local="yes">stm32f1xx_hal.h</includes>
    <incdepgraph>
      <node id="15">
        <label>stm32f1xx_hal_flash.h</label>
        <link refid="stm32f1xx__hal__flash_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stm32f1xx_hal_tim_ex.h</label>
        <link refid="stm32f1xx__hal__tim__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32f1xx_hal_pcd.h</label>
        <link refid="stm32f1xx__hal__pcd_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32f1xx_hal_cortex.h</label>
        <link refid="stm32f1xx__hal__cortex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32f1xx_ll_usb.h</label>
        <link refid="stm32f1xx__ll__usb_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stm32f1xx_hal.h</label>
        <link refid="stm32f1xx__hal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="17">
        <label>stm32f1xx_hal_pwr.h</label>
        <link refid="stm32f1xx__hal__pwr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32f1xx_hal_rcc.h</label>
        <link refid="stm32f1xx__hal__rcc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stm32f1xx_hal_dma_ex.h</label>
        <link refid="stm32f1xx__hal__dma__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32f1xx.h</label>
        <link refid="stm32f1xx_8h"/>
      </node>
      <node id="16">
        <label>stm32f1xx_hal_flash_ex.h</label>
        <link refid="stm32f1xx__hal__flash__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32f1xx_hal_dma.h</label>
        <link refid="stm32f1xx__hal__dma_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c</label>
        <link refid="stm32f1xx__hal__rcc_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stm32f1xx_hal_tim.h</label>
        <link refid="stm32f1xx__hal__tim_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stm32f1xx_hal_rcc_ex.h</label>
        <link refid="stm32f1xx__hal__rcc__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stm32f1xx_hal_conf.h</label>
        <link refid="stm32f1xx__hal__conf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stm32f1xx_hal_gpio.h</label>
        <link refid="stm32f1xx__hal__gpio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stm32f1xx_hal_gpio_ex.h</label>
        <link refid="stm32f1xx__hal__gpio__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stm32f1xx_hal_def.h</label>
        <link refid="stm32f1xx__hal__def_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stm32f1xx_hal_exti.h</label>
        <link refid="stm32f1xx__hal__exti_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para>RCC HAL module driver. This file provides firmware functions to manage the following functionalities of the Reset and Clock Control (RCC) peripheral: </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team<itemizedlist>
<listitem><para>Initialization and de-initialization functions</para>
</listitem><listitem><para>Peripheral Control functions</para>
</listitem></itemizedlist>
</para>
</simplesect>
<verbatim>==============================================================================
                    ##### RCC specific features #####
==============================================================================
  [..]
    After reset the device is running from Internal High Speed oscillator
    (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled,
    and all peripherals are off except internal SRAM, Flash and JTAG.
    (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
        all peripherals mapped on these buses are running at HSI speed.
    (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
    (+) All GPIOs are in input floating state, except the JTAG pins which
        are assigned to be used for debug purpose.
  [..] Once the device started from reset, the user application has to:
    (+) Configure the clock source to be used to drive the System clock
        (if the application needs higher frequency/performance)
    (+) Configure the System clock frequency and Flash settings
    (+) Configure the AHB and APB buses prescalers
    (+) Enable the clock for the peripheral(s) to be used
    (+) Configure the clock source(s) for peripherals whose clocks are not
        derived from the System clock (I2S, RTC, ADC, USB OTG FS)

                    ##### RCC Limitations #####
==============================================================================
  [..]
    A delay between an RCC peripheral clock enable and the effective peripheral
    enabling should be taken into account in order to manage the peripheral read/write
    from/to registers.
    (+) This delay depends on the peripheral mapping.
      (++) AHB &amp; APB peripherals, 1 dummy read is necessary

  [..]
    Workarounds:
    (#) For AHB &amp; APB peripherals, a dummy read to the peripheral register has been
        inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.</verbatim></para>
<para><simplesect kind="attention"><para></para>
</simplesect>
<heading level="2"><center><copy/> Copyright (c) 2016 STMicroelectronics. All rights reserved.</center></heading>
</para>
<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f1xx__hal_8h" kindref="compound">stm32f1xx_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAL_RCC_MODULE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>typedef<sp/>-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>define<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macro<sp/>-------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCO1_CLK_ENABLE()<sp/><sp/><sp/><sp/><sp/>__HAL_RCC_GPIOA_CLK_ENABLE()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCO1_GPIO_PORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPIOA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCO1_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPIO_PIN_8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>---------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_Delay(uint32_t<sp/>mdelay);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/>Additional<sp/>consideration<sp/>on<sp/>the<sp/>SYSCLK<sp/>based<sp/>on<sp/>Latency<sp/>settings:</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+-----------------------------------------------+</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Latency<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>SYSCLK<sp/>clock<sp/>frequency<sp/>(MHz)<sp/><sp/>|</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|---------------|-------------------------------|</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|0WS(1CPU<sp/>cycle)|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>&lt;<sp/>SYSCLK<sp/>&lt;=<sp/>24<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|---------------|-------------------------------|</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|1WS(2CPU<sp/>cycle)|<sp/><sp/><sp/><sp/><sp/><sp/>24<sp/>&lt;<sp/>SYSCLK<sp/>&lt;=<sp/>48<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|---------------|-------------------------------|</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|2WS(3CPU<sp/>cycle)|<sp/><sp/><sp/><sp/><sp/><sp/>48<sp/>&lt;<sp/>SYSCLK<sp/>&lt;=<sp/>72<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+-----------------------------------------------+</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCC_DeInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HSION<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>SET_BIT(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf4fcacf94a97f7d49a70e089b39cf474" kindref="member">RCC_CR_HSION</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSI<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(READ_BIT(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9dbac3f2bc04f04ebafe1e66ae3fcf0d" kindref="member">RCC_CR_HSIRDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>HSI_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>HSITRIM<sp/>bits<sp/>to<sp/>the<sp/>reset<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>MODIFY_REG(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5cb4397b2095c31660a01b748386aa70" kindref="member">RCC_CR_HSITRIM</ref>,<sp/>(0x10U<sp/>&lt;&lt;<sp/>RCC_CR_HSITRIM_Pos));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>CFGR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>CLEAR_REG(RCC-&gt;CFGR);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>clock<sp/>switch<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(READ_BIT(RCC-&gt;CFGR,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>CLOCKSWITCH_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>SystemCoreClock<sp/>global<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="group___s_t_m32_f10x___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/><ref refid="stm32f1xx__hal__conf_8h_1aaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adapt<sp/>Systick<sp/>interrupt<sp/>period<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___h_a_l___exported___functions___group1_1ga879cdb21ef051eb81ec51c18147397d5" kindref="member">HAL_InitTick</ref>(uwTickPrio)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second<sp/>step<sp/>is<sp/>to<sp/>clear<sp/>PLLON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>CLEAR_BIT(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(READ_BIT(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gafa12d7ac6a7f0f91d066aeb2c6071888" kindref="member">RCC_CR_PLLRDY</ref>)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>to<sp/>reset<sp/>PLLSRC<sp/>and<sp/>PLLMUL<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>CLEAR_REG(RCC-&gt;CFGR);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEON<sp/>&amp;<sp/>CSSON<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>CLEAR_BIT(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gacc05308869ad055e1e6f2c32d738aecd" kindref="member">RCC_CR_CSSON</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(READ_BIT(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga86a34e00182c83409d89ff566cb02cc4" kindref="member">RCC_CR_HSERDY</ref>)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>HSE_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>HSEBYP<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>CLEAR_BIT(RCC-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_PLL2_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PLL2ON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>CLEAR_BIT(RCC-&gt;CR,<sp/>RCC_CR_PLL2ON);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(READ_BIT(RCC-&gt;CR,<sp/>RCC_CR_PLL2RDY)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL2_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RCC_PLL2_SUPPORT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_PLLI2S_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>PLL3ON<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>CLEAR_BIT(RCC-&gt;CR,<sp/>RCC_CR_PLL3ON);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL3<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(READ_BIT(RCC-&gt;CR,<sp/>RCC_CR_PLL3RDY)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLLI2S_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RCC_PLLI2S_SUPPORT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>CFGR2<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>CLEAR_REG(RCC-&gt;CFGR2);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RCC_CFGR2_PREDIV1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>all<sp/>CSR<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>SET_BIT(RCC-&gt;CSR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gafc26c5996b14005a70afbeaa29aae716" kindref="member">RCC_CSR_RMVF</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>CLEAR_REG(RCC-&gt;CIR);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCC_OscConfig(<ref refid="struct_r_c_c___osc_init_type_def" kindref="compound">RCC_OscInitTypeDef</ref><sp/><sp/>*RCC_OscInitStruct)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>uint32_t<sp/>pll_config;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Null<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_OscInitStruct<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a23b9d1da2a92936c618d2416406275a3" kindref="member">OscillatorType</ref>));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*-------------------------------<sp/>HSE<sp/>Configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a23b9d1da2a92936c618d2416406275a3" kindref="member">OscillatorType</ref>)<sp/>&amp;<sp/>RCC_OSCILLATORTYPE_HSE)<sp/>==<sp/>RCC_OSCILLATORTYPE_HSE)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HSE(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad499b1bbeeb8096235b534a9bfa53c9d" kindref="member">HSEState</ref>));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>HSE<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>or<sp/>clock<sp/>source<sp/>for<sp/>PLL<sp/>in<sp/>these<sp/>cases<sp/>it<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>be<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga3847769265bf19becf7b976a7e908a64" kindref="member">RCC_SYSCLKSOURCE_STATUS_HSE</ref>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="group___r_c_c___p_l_l___configuration_1ga3ea1390f8124e2b3b8d53e95541d6e53" kindref="member">__HAL_RCC_GET_PLL_OSCSOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref>)))</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" kindref="member">RCC_FLAG_HSERDY</ref>)<sp/>!=<sp/>RESET)<sp/>&amp;&amp;<sp/>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad499b1bbeeb8096235b534a9bfa53c9d" kindref="member">HSEState</ref><sp/>==<sp/><ref refid="group___r_c_c___h_s_e___config_1ga1616626d23fbce440398578855df6f97" kindref="member">RCC_HSE_OFF</ref>))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>new<sp/>HSE<sp/>configuration<sp/>---------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___h_s_e___configuration_1gaa3d98648399f15d02645ef84f6ca8e4b" kindref="member">__HAL_RCC_HSE_CONFIG</ref>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad499b1bbeeb8096235b534a9bfa53c9d" kindref="member">HSEState</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>HSE<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad499b1bbeeb8096235b534a9bfa53c9d" kindref="member">HSEState</ref><sp/>!=<sp/><ref refid="group___r_c_c___h_s_e___config_1ga1616626d23fbce440398578855df6f97" kindref="member">RCC_HSE_OFF</ref>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" kindref="member">RCC_FLAG_HSERDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>HSE_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSE<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" kindref="member">RCC_FLAG_HSERDY</ref>)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>HSE_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*-----------------------------<sp/>HSI<sp/>Configuration<sp/>--------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a23b9d1da2a92936c618d2416406275a3" kindref="member">OscillatorType</ref>)<sp/>&amp;<sp/>RCC_OSCILLATORTYPE_HSI)<sp/>==<sp/>RCC_OSCILLATORTYPE_HSI)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HSI(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a49183e0be5cf522de0fa1968df0bf0d7" kindref="member">HSIState</ref>));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad28b977e258a3ee788cd6c2d72430c30" kindref="member">HSICalibrationValue</ref>));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>HSI<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>or<sp/>as<sp/>PLL<sp/>source<sp/>when<sp/>PLL<sp/>is<sp/>selected<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga0d6c2b0b2d59e6591295649853bb2abd" kindref="member">RCC_SYSCLKSOURCE_STATUS_HSI</ref>)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="group___r_c_c___p_l_l___configuration_1ga3ea1390f8124e2b3b8d53e95541d6e53" kindref="member">__HAL_RCC_GET_PLL_OSCSOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga09fff12a4e92f4da5980321b7f99b632" kindref="member">RCC_PLLSOURCE_HSI_DIV2</ref>)))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>HSI<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>it<sp/>will<sp/>not<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga827d986723e7ce652fa733bb8184d216" kindref="member">RCC_FLAG_HSIRDY</ref>)<sp/>!=<sp/>RESET)<sp/>&amp;&amp;<sp/>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a49183e0be5cf522de0fa1968df0bf0d7" kindref="member">HSIState</ref><sp/>!=<sp/><ref refid="group___r_c_c___h_s_i___config_1ga0bf09ef9e46d5da25cced7b3122f92f5" kindref="member">RCC_HSI_ON</ref>))</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>just<sp/>the<sp/>calibration<sp/>is<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjusts<sp/>the<sp/>Internal<sp/>High<sp/>Speed<sp/>oscillator<sp/>(HSI)<sp/>calibration<sp/>value.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___h_s_i___configuration_1ga36991d340af7ad14b79f204c748b0e3e" kindref="member">__HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST</ref>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad28b977e258a3ee788cd6c2d72430c30" kindref="member">HSICalibrationValue</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>HSI<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a49183e0be5cf522de0fa1968df0bf0d7" kindref="member">HSIState</ref><sp/>!=<sp/><ref refid="group___r_c_c___h_s_i___config_1ga1b34d37d3b51afec0758b3ddc7a7e665" kindref="member">RCC_HSI_OFF</ref>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Internal<sp/>High<sp/>Speed<sp/>oscillator<sp/>(HSI).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___h_s_i___configuration_1gaab944f562b53fc74bcc0e4958388fd42" kindref="member">__HAL_RCC_HSI_ENABLE</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSI<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga827d986723e7ce652fa733bb8184d216" kindref="member">RCC_FLAG_HSIRDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>HSI_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjusts<sp/>the<sp/>Internal<sp/>High<sp/>Speed<sp/>oscillator<sp/>(HSI)<sp/>calibration<sp/>value.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___h_s_i___configuration_1ga36991d340af7ad14b79f204c748b0e3e" kindref="member">__HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST</ref>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad28b977e258a3ee788cd6c2d72430c30" kindref="member">HSICalibrationValue</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>Internal<sp/>High<sp/>Speed<sp/>oscillator<sp/>(HSI).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_HSI_DISABLE();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>HSI<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga827d986723e7ce652fa733bb8184d216" kindref="member">RCC_FLAG_HSIRDY</ref>)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>HSI_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------<sp/>LSI<sp/>Configuration<sp/>-------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a23b9d1da2a92936c618d2416406275a3" kindref="member">OscillatorType</ref>)<sp/>&amp;<sp/>RCC_OSCILLATORTYPE_LSI)<sp/>==<sp/>RCC_OSCILLATORTYPE_LSI)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_LSI(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a9acc15f6278f950ef02d5d6f819f68e8" kindref="member">LSIState</ref>));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>LSI<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a9acc15f6278f950ef02d5d6f819f68e8" kindref="member">LSIState</ref><sp/>!=<sp/><ref refid="group___r_c_c___l_s_i___config_1gaa1710927d79a2032f87f039c4a27356a" kindref="member">RCC_LSI_OFF</ref>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Internal<sp/>Low<sp/>Speed<sp/>oscillator<sp/>(LSI).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___l_s_i___configuration_1ga560de8b8991db4a296de878a7a8aa58b" kindref="member">__HAL_RCC_LSI_ENABLE</ref>();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>LSI<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga8c5e4992314d347597621bfe7ab10d72" kindref="member">RCC_FLAG_LSIRDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>LSI_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>To<sp/>have<sp/>a<sp/>fully<sp/>stabilized<sp/>clock<sp/>in<sp/>the<sp/>specified<sp/>range,<sp/>a<sp/>software<sp/>delay<sp/>of<sp/>1ms</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>added.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCC_Delay(1);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>Internal<sp/>Low<sp/>Speed<sp/>oscillator<sp/>(LSI).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___l_s_i___configuration_1ga4f96095bb4acda60b7f66d5d927da181" kindref="member">__HAL_RCC_LSI_DISABLE</ref>();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>LSI<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga8c5e4992314d347597621bfe7ab10d72" kindref="member">RCC_FLAG_LSIRDY</ref>)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>LSI_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------<sp/>LSE<sp/>Configuration<sp/>-------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a23b9d1da2a92936c618d2416406275a3" kindref="member">OscillatorType</ref>)<sp/>&amp;<sp/>RCC_OSCILLATORTYPE_LSE)<sp/>==<sp/>RCC_OSCILLATORTYPE_LSE)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>FlagStatus<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwrclkchanged<sp/>=<sp/>RESET;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_LSE(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1abb72dd5bfb99667e36d99b6887f80a0a" kindref="member">LSEState</ref>));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>LSE<sp/>configuration<sp/>in<sp/>Backup<sp/>Domain<sp/>control<sp/>register<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Requires<sp/>to<sp/>enable<sp/>write<sp/>access<sp/>to<sp/>Backup<sp/>Domain<sp/>of<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_RCC_PWR_IS_CLK_DISABLED())</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PWR_CLK_ENABLE();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pwrclkchanged<sp/>=<sp/>SET;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_CLR(PWR-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf5c65ab845794ef48f09faa2ee44f718" kindref="member">PWR_CR_DBP</ref>))</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>write<sp/>access<sp/>to<sp/>Backup<sp/>domain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(PWR-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf5c65ab845794ef48f09faa2ee44f718" kindref="member">PWR_CR_DBP</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>Backup<sp/>domain<sp/>Write<sp/>protection<sp/>disable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_CLR(PWR-&gt;CR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf5c65ab845794ef48f09faa2ee44f718" kindref="member">PWR_CR_DBP</ref>))</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>RCC_DBP_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>new<sp/>LSE<sp/>configuration<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___l_s_e___configuration_1ga6b2b48f429e347c1c9c469122c64798b" kindref="member">__HAL_RCC_LSE_CONFIG</ref>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1abb72dd5bfb99667e36d99b6887f80a0a" kindref="member">LSEState</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>LSE<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1abb72dd5bfb99667e36d99b6887f80a0a" kindref="member">LSEState</ref><sp/>!=<sp/><ref refid="group___r_c_c___l_s_e___config_1ga6645c27708d0cad1a4ab61d2abb24c77" kindref="member">RCC_LSE_OFF</ref>)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>LSE<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1gac9fb963db446c16e46a18908f7fe1927" kindref="member">RCC_FLAG_LSERDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>RCC_LSE_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>LSE<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1gac9fb963db446c16e46a18908f7fe1927" kindref="member">RCC_FLAG_LSERDY</ref>)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>RCC_LSE_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Require<sp/>to<sp/>disable<sp/>power<sp/>clock<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwrclkchanged<sp/>==<sp/>SET)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PWR_CLK_DISABLE();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CR_PLL2ON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------------<sp/>PLL2<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLL2(RCC_OscInitStruct-&gt;PLL2.PLL2State));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC_OscInitStruct-&gt;PLL2.PLL2State)<sp/>!=<sp/>RCC_PLL2_NONE)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>bit<sp/>can<sp/>not<sp/>be<sp/>cleared<sp/>if<sp/>the<sp/>PLL2<sp/>clock<sp/>is<sp/>used<sp/>indirectly<sp/>as<sp/>system</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>clock<sp/>(i.e.<sp/>it<sp/>is<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>entry<sp/>that<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___r_c_c___p_l_l___configuration_1ga3ea1390f8124e2b3b8d53e95541d6e53" kindref="member">__HAL_RCC_GET_PLL_OSCSOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>==<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((READ_BIT(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PREDIV1SRC))<sp/>==<sp/>RCC_CFGR2_PREDIV1SRC_PLL2))</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC_OscInitStruct-&gt;PLL2.PLL2State)<sp/>==<sp/>RCC_PLL2_ON)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLL2_MUL(RCC_OscInitStruct-&gt;PLL2.PLL2MUL));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct-&gt;PLL2.HSEPrediv2Value));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prediv2<sp/>can<sp/>be<sp/>written<sp/>only<sp/>when<sp/>the<sp/>PLLI2S<sp/>is<sp/>disabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>an<sp/>error<sp/>only<sp/>if<sp/>new<sp/>value<sp/>is<sp/>different<sp/>from<sp/>the<sp/>programmed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CR,<sp/>RCC_CR_PLL3ON)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__HAL_RCC_HSE_GET_PREDIV2()<sp/>!=<sp/>RCC_OscInitStruct-&gt;PLL2.HSEPrediv2Value))</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLL2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_DISABLE();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLL2RDY)<sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL2_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>HSE<sp/>prediv2<sp/>factor<sp/>--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct-&gt;PLL2.HSEPrediv2Value);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>main<sp/>PLL2<sp/>multiplication<sp/>factors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct-&gt;PLL2.PLL2MUL);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>main<sp/>PLL2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_ENABLE();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLL2RDY)<sp/><sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL2_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PREDIV1<sp/>source<sp/>to<sp/>HSE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLL2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_PLL2_DISABLE();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL2<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(RCC_FLAG_PLL2RDY)<sp/><sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL2_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RCC_CR_PLL2ON<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------------<sp/>PLL<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLL(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1ab3bb33f461bb409576e1c899c962e0b0" kindref="member">PLLState</ref>));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1ab3bb33f461bb409576e1c899c962e0b0" kindref="member">PLLState</ref>)<sp/>!=<sp/><ref refid="group___r_c_c___p_l_l___config_1gae47a612f8e15c32917ee2181362d88f3" kindref="member">RCC_PLL_NONE</ref>)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>PLL<sp/>is<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>or<sp/>not<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>!=<sp/><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1ab3bb33f461bb409576e1c899c962e0b0" kindref="member">PLLState</ref>)<sp/>==<sp/><ref refid="group___r_c_c___p_l_l___config_1gaf86dbee130304ba5760818f56d34ec91" kindref="member">RCC_PLL_ON</ref>)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLLSOURCE(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a418ecda4a355c6a161e4893a7bc1897f" kindref="member">PLLSource</ref>));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PLL_MUL(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a4a57e48e8e939695ff2a76456e6360ef" kindref="member">PLLMUL</ref>));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___p_l_l___configuration_1ga718a6afcb1492cc2796be78445a7d5ab" kindref="member">__HAL_RCC_PLL_DISABLE</ref>();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1gaf82d8afb18d9df75db1d6c08b9c50046" kindref="member">RCC_FLAG_PLLRDY</ref>)<sp/><sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>HSE<sp/>prediv<sp/>factor<sp/>--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>can<sp/>be<sp/>written<sp/>only<sp/>when<sp/>the<sp/>PLL<sp/>is<sp/>disabled.<sp/>Not<sp/>used<sp/>in<sp/>PLL<sp/>source<sp/>is<sp/>different<sp/>than<sp/>HSE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a418ecda4a355c6a161e4893a7bc1897f" kindref="member">PLLSource</ref><sp/>==<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref>)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HSE_PREDIV(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a92007c1d01624a71cb277bf05b8d9a14" kindref="member">HSEPredivValue</ref>));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1SRC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct-&gt;Prediv1Source));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PREDIV1<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(RCC-&gt;CFGR2,<sp/>RCC_OscInitStruct-&gt;Prediv1Source);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RCC_CFGR2_PREDIV1SRC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>PREDIV1<sp/>Value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c_ex___h_s_e___configuration_1gafc6bfe4fd172ea49871172fa137b60e0" kindref="member">__HAL_RCC_HSE_PREDIV_CONFIG</ref>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a92007c1d01624a71cb277bf05b8d9a14" kindref="member">HSEPredivValue</ref>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>main<sp/>PLL<sp/>clock<sp/>source<sp/>and<sp/>multiplication<sp/>factors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___p_l_l___configuration_1gadff34131a73367bbf345984ea5fdecca" kindref="member">__HAL_RCC_PLL_CONFIG</ref>(RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a418ecda4a355c6a161e4893a7bc1897f" kindref="member">PLLSource</ref>,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a4a57e48e8e939695ff2a76456e6360ef" kindref="member">PLLMUL</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>main<sp/>PLL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___p_l_l___configuration_1gaaf196a2df41b0bcbc32745c2b218e696" kindref="member">__HAL_RCC_PLL_ENABLE</ref>();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1gaf82d8afb18d9df75db1d6c08b9c50046" kindref="member">RCC_FLAG_PLLRDY</ref>)<sp/><sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>main<sp/>PLL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___p_l_l___configuration_1ga718a6afcb1492cc2796be78445a7d5ab" kindref="member">__HAL_RCC_PLL_DISABLE</ref>();</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>till<sp/>PLL<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1gaf82d8afb18d9df75db1d6c08b9c50046" kindref="member">RCC_FLAG_PLLRDY</ref>)<sp/><sp/>!=<sp/>RESET)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>PLL_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>there<sp/>is<sp/>a<sp/>request<sp/>to<sp/>disable<sp/>the<sp/>PLL<sp/>used<sp/>as<sp/>System<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1ab3bb33f461bb409576e1c899c962e0b0" kindref="member">PLLState</ref>)<sp/>==<sp/><ref refid="group___r_c_c___p_l_l___config_1ga3a8d5c8bcb101c6ca1a574729acfa903" kindref="member">RCC_PLL_OFF</ref>)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>not<sp/>return<sp/>HAL_ERROR<sp/>if<sp/>request<sp/>repeats<sp/>the<sp/>current<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll_config<sp/>=<sp/>RCC-&gt;CFGR;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((READ_BIT(pll_config,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref>)<sp/>!=<sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a418ecda4a355c6a161e4893a7bc1897f" kindref="member">PLLSource</ref>)<sp/>||</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(READ_BIT(pll_config,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>)<sp/>!=<sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a4a57e48e8e939695ff2a76456e6360ef" kindref="member">PLLMUL</ref>))</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_RCC_ClockConfig(<ref refid="struct_r_c_c___clk_init_type_def" kindref="compound">RCC_ClkInitTypeDef</ref><sp/><sp/>*RCC_ClkInitStruct,<sp/>uint32_t<sp/>FLatency)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Null<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_ClkInitStruct<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref>));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_FLASH_LATENCY(FLatency));</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>correctly<sp/>read<sp/>data<sp/>from<sp/>FLASH<sp/>memory,<sp/>the<sp/>number<sp/>of<sp/>wait<sp/>states<sp/>(LATENCY)</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/>must<sp/>be<sp/>correctly<sp/>programmed<sp/>according<sp/>to<sp/>the<sp/>frequency<sp/>of<sp/>the<sp/>CPU<sp/>clock</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/>(HCLK)<sp/>of<sp/>the<sp/>device.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FLASH_ACR_LATENCY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increasing<sp/>the<sp/>number<sp/>of<sp/>wait<sp/>states<sp/>because<sp/>of<sp/>higher<sp/>CPU<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FLatency<sp/>&gt;<sp/>__HAL_FLASH_GET_LATENCY())</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Program<sp/>the<sp/>new<sp/>number<sp/>of<sp/>wait<sp/>states<sp/>to<sp/>the<sp/>LATENCY<sp/>bits<sp/>in<sp/>the<sp/>FLASH_ACR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_FLASH_SET_LATENCY(FLatency);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>new<sp/>number<sp/>of<sp/>wait<sp/>states<sp/>is<sp/>taken<sp/>into<sp/>account<sp/>to<sp/>access<sp/>the<sp/>Flash</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/><sp/><sp/><sp/>memory<sp/>by<sp/>reading<sp/>the<sp/>FLASH_ACR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_FLASH_GET_LATENCY()<sp/>!=<sp/>FLatency)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FLASH_ACR_LATENCY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------<sp/>HCLK<sp/>Configuration<sp/>--------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref>)<sp/>&amp;<sp/><ref refid="group___r_c_c___system___clock___type_1gaa5330efbd790632856a2b15851517ef9" kindref="member">RCC_CLOCKTYPE_HCLK</ref>)<sp/>==<sp/><ref refid="group___r_c_c___system___clock___type_1gaa5330efbd790632856a2b15851517ef9" kindref="member">RCC_CLOCKTYPE_HCLK</ref>)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>highest<sp/>APBx<sp/>dividers<sp/>in<sp/>order<sp/>to<sp/>ensure<sp/>that<sp/>we<sp/>do<sp/>not<sp/>go<sp/>through</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>non-spec<sp/>phase<sp/>whatever<sp/>we<sp/>decrease<sp/>or<sp/>increase<sp/>HCLK.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref>)<sp/>&amp;<sp/><ref refid="group___r_c_c___system___clock___type_1gab00c7b70f0770a616be4b5df45a454c4" kindref="member">RCC_CLOCKTYPE_PCLK1</ref>)<sp/>==<sp/><ref refid="group___r_c_c___system___clock___type_1gab00c7b70f0770a616be4b5df45a454c4" kindref="member">RCC_CLOCKTYPE_PCLK1</ref>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODIFY_REG(RCC-&gt;CFGR,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga50b2423a5fea74a47b9eb8ab51869412" kindref="member">RCC_CFGR_PPRE1</ref>,<sp/><ref refid="group___r_c_c___a_p_b1___a_p_b2___clock___source_1ga27ac27d48360121bc2dc68b99dc8845d" kindref="member">RCC_HCLK_DIV16</ref>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref>)<sp/>&amp;<sp/><ref refid="group___r_c_c___system___clock___type_1gaef7e78706e597a6551d71f5f9ad60cc0" kindref="member">RCC_CLOCKTYPE_PCLK2</ref>)<sp/>==<sp/><ref refid="group___r_c_c___system___clock___type_1gaef7e78706e597a6551d71f5f9ad60cc0" kindref="member">RCC_CLOCKTYPE_PCLK2</ref>)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MODIFY_REG(RCC-&gt;CFGR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gad61bd4f9f345ba41806813b0bfff1311" kindref="member">RCC_CFGR_PPRE2</ref>,<sp/>(<ref refid="group___r_c_c___a_p_b1___a_p_b2___clock___source_1ga27ac27d48360121bc2dc68b99dc8845d" kindref="member">RCC_HCLK_DIV16</ref><sp/>&lt;&lt;<sp/>3));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>new<sp/>HCLK<sp/>clock<sp/>divider<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_HCLK(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a082c91ea9f270509aca7ae6ec42c2a54" kindref="member">AHBCLKDivider</ref>));</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>MODIFY_REG(RCC-&gt;CFGR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gafe10e66938644ee8054a2426ff23efea" kindref="member">RCC_CFGR_HPRE</ref>,<sp/>RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a082c91ea9f270509aca7ae6ec42c2a54" kindref="member">AHBCLKDivider</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*-------------------------<sp/>SYSCLK<sp/>Configuration<sp/>---------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref>)<sp/>&amp;<sp/><ref refid="group___r_c_c___system___clock___type_1ga7e721f5bf3fe925f78dae0356165332e" kindref="member">RCC_CLOCKTYPE_SYSCLK</ref>)<sp/>==<sp/><ref refid="group___r_c_c___system___clock___type_1ga7e721f5bf3fe925f78dae0356165332e" kindref="member">RCC_CLOCKTYPE_SYSCLK</ref>)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a02b70c23b593a55814d887f483ea0871" kindref="member">SYSCLKSource</ref>));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>is<sp/>selected<sp/>as<sp/>System<sp/>Clock<sp/>Source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a02b70c23b593a55814d887f483ea0871" kindref="member">SYSCLKSource</ref><sp/>==<sp/><ref refid="group___r_c_c___system___clock___source_1ga9116d0627e1e7f33c48e1357b9a35a1c" kindref="member">RCC_SYSCLKSOURCE_HSE</ref>)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>HSE<sp/>ready<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" kindref="member">RCC_FLAG_HSERDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>is<sp/>selected<sp/>as<sp/>System<sp/>Clock<sp/>Source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a02b70c23b593a55814d887f483ea0871" kindref="member">SYSCLKSource</ref><sp/>==<sp/><ref refid="group___r_c_c___system___clock___source_1ga5caf08ac71d7dd7e7b2e3e421606aca7" kindref="member">RCC_SYSCLKSOURCE_PLLCLK</ref>)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>PLL<sp/>ready<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1gaf82d8afb18d9df75db1d6c08b9c50046" kindref="member">RCC_FLAG_PLLRDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>is<sp/>selected<sp/>as<sp/>System<sp/>Clock<sp/>Source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>HSI<sp/>ready<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" kindref="member">__HAL_RCC_GET_FLAG</ref>(<ref refid="group___r_c_c___flag_1ga827d986723e7ce652fa733bb8184d216" kindref="member">RCC_FLAG_HSIRDY</ref>)<sp/>==<sp/>RESET)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___get___clock__source_1gaa29be28740b3d480e83efbc2e695c1b8" kindref="member">__HAL_RCC_SYSCLK_CONFIG</ref>(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a02b70c23b593a55814d887f483ea0871" kindref="member">SYSCLKSource</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Start<sp/>Tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___get___clock__source_1gac99c2453d9e77c8b457acc0210e754c2" kindref="member">__HAL_RCC_GET_SYSCLK_SOURCE</ref>()<sp/>!=<sp/>(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a02b70c23b593a55814d887f483ea0871" kindref="member">SYSCLKSource</ref><sp/>&lt;&lt;<sp/>RCC_CFGR_SWS_Pos))</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((HAL_GetTick()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>CLOCKSWITCH_TIMEOUT_VALUE)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_TIMEOUT;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FLASH_ACR_LATENCY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decreasing<sp/>the<sp/>number<sp/>of<sp/>wait<sp/>states<sp/>because<sp/>of<sp/>lower<sp/>CPU<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FLatency<sp/>&lt;<sp/>__HAL_FLASH_GET_LATENCY())</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Program<sp/>the<sp/>new<sp/>number<sp/>of<sp/>wait<sp/>states<sp/>to<sp/>the<sp/>LATENCY<sp/>bits<sp/>in<sp/>the<sp/>FLASH_ACR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_FLASH_SET_LATENCY(FLatency);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>new<sp/>number<sp/>of<sp/>wait<sp/>states<sp/>is<sp/>taken<sp/>into<sp/>account<sp/>to<sp/>access<sp/>the<sp/>Flash</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/><sp/>memory<sp/>by<sp/>reading<sp/>the<sp/>FLASH_ACR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__HAL_FLASH_GET_LATENCY()<sp/>!=<sp/>FLatency)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FLASH_ACR_LATENCY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------<sp/>PCLK1<sp/>Configuration<sp/>---------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref>)<sp/>&amp;<sp/><ref refid="group___r_c_c___system___clock___type_1gab00c7b70f0770a616be4b5df45a454c4" kindref="member">RCC_CLOCKTYPE_PCLK1</ref>)<sp/>==<sp/><ref refid="group___r_c_c___system___clock___type_1gab00c7b70f0770a616be4b5df45a454c4" kindref="member">RCC_CLOCKTYPE_PCLK1</ref>)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PCLK(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a994aca51c40decfc340e045da1a6ca19" kindref="member">APB1CLKDivider</ref>));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>MODIFY_REG(RCC-&gt;CFGR,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga50b2423a5fea74a47b9eb8ab51869412" kindref="member">RCC_CFGR_PPRE1</ref>,<sp/>RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a994aca51c40decfc340e045da1a6ca19" kindref="member">APB1CLKDivider</ref>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------<sp/>PCLK2<sp/>Configuration<sp/>---------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref>)<sp/>&amp;<sp/><ref refid="group___r_c_c___system___clock___type_1gaef7e78706e597a6551d71f5f9ad60cc0" kindref="member">RCC_CLOCKTYPE_PCLK2</ref>)<sp/>==<sp/><ref refid="group___r_c_c___system___clock___type_1gaef7e78706e597a6551d71f5f9ad60cc0" kindref="member">RCC_CLOCKTYPE_PCLK2</ref>)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_PCLK(RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a9bbc30e9f4ddf462bc1fa6ea273eb4db" kindref="member">APB2CLKDivider</ref>));</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>MODIFY_REG(RCC-&gt;CFGR,<sp/><ref refid="group___peripheral___registers___bits___definition_1gad61bd4f9f345ba41806813b0bfff1311" kindref="member">RCC_CFGR_PPRE2</ref>,<sp/>((RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a9bbc30e9f4ddf462bc1fa6ea273eb4db" kindref="member">APB2CLKDivider</ref>)<sp/>&lt;&lt;<sp/>3));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>SystemCoreClock<sp/>global<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><ref refid="group___s_t_m32_f10x___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>=<sp/>HAL_RCC_GetSysClockFreq()<sp/>&gt;&gt;<sp/><ref refid="group___s_t_m32_f10x___system___exported__types_1ga53cb26d01524d9560f98101a2c597c40" kindref="member">AHBPrescTable</ref>[(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafe10e66938644ee8054a2426ff23efea" kindref="member">RCC_CFGR_HPRE</ref>)<sp/>&gt;&gt;<sp/>RCC_CFGR_HPRE_Pos];</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>source<sp/>of<sp/>time<sp/>base<sp/>considering<sp/>new<sp/>system<sp/>clocks<sp/>settings*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><ref refid="group___h_a_l___exported___functions___group1_1ga879cdb21ef051eb81ec51c18147397d5" kindref="member">HAL_InitTick</ref>(uwTickPrio);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCC_MCOConfig(uint32_t<sp/>RCC_MCOx,<sp/>uint32_t<sp/>RCC_MCOSource,<sp/>uint32_t<sp/>RCC_MCODiv)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><ref refid="struct_g_p_i_o___init_type_def" kindref="compound">GPIO_InitTypeDef</ref><sp/>gpio<sp/>=<sp/>{0U};</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_MCO(RCC_MCOx));</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_MCODIV(RCC_MCODiv));</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_RCC_MCO1SOURCE(RCC_MCOSource));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>UNUSED(RCC_MCOx);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>UNUSED(RCC_MCODiv);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>MCO1<sp/>pin<sp/>in<sp/>alternate<sp/>function<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>gpio.<ref refid="struct_g_p_i_o___init_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___g_p_i_o__mode__define_1ga526c72c5264316fc05c775b6cad4aa6a" kindref="member">GPIO_MODE_AF_PP</ref>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>gpio.<ref refid="struct_g_p_i_o___init_type_def_1ad04b2041f59d32492ec36a891418f3fd" kindref="member">Speed</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___g_p_i_o__speed__define_1gaef5898db71cdb957cd41f940b0087af8" kindref="member">GPIO_SPEED_FREQ_HIGH</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>gpio.<ref refid="struct_g_p_i_o___init_type_def_1a6cdde08eb507b710f8179a4326548e26" kindref="member">Pull</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___g_p_i_o__pull__define_1ga5c2862579882c1cc64e36d38fbd07a4c" kindref="member">GPIO_NOPULL</ref>;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>gpio.<ref refid="struct_g_p_i_o___init_type_def_1a871d0ab74071724e96b7cc9ae2a7532b" kindref="member">Pin</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>MCO1_PIN;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>MCO1<sp/>Clock<sp/>Enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>MCO1_CLK_ENABLE();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>HAL_GPIO_Init(MCO1_GPIO_PORT,<sp/>&amp;gpio);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>MCO<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><ref refid="group___r_c_c_ex___m_c_ox___clock___config_1ga7e5f7f1efc92794b6f0e96068240b45e" kindref="member">__HAL_RCC_MCO1_CONFIG</ref>(RCC_MCOSource,<sp/>RCC_MCODiv);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCC_EnableCSS(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>*(<ref refid="core__armv8mbl_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>RCC_CR_CSSON_BB<sp/>=<sp/>(uint32_t)ENABLE;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCC_DisableCSS(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>*(<ref refid="core__armv8mbl_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>*)<sp/>RCC_CR_CSSON_BB<sp/>=<sp/>(uint32_t)DISABLE;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal">uint32_t<sp/>HAL_RCC_GetSysClockFreq(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1SRC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPLLMULFactorTable[14]<sp/>=<sp/>{0,<sp/>0,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>13};</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPredivFactorTable[16]<sp/>=<sp/>{1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15,<sp/>16};</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPLLMULFactorTable[16]<sp/>=<sp/>{2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15,<sp/>16,<sp/>16};</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPredivFactorTable[16]<sp/>=<sp/>{1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15,<sp/>16};</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>aPredivFactorTable[2]<sp/>=<sp/>{1,<sp/>2};</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*RCC_CFGR2_PREDIV1*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg<sp/>=<sp/>0U,<sp/>prediv<sp/>=<sp/>0U,<sp/>pllclk<sp/>=<sp/>0U,<sp/>pllmul<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>uint32_t<sp/>sysclockfreq<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1SRC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>uint32_t<sp/>prediv2<sp/>=<sp/>0U,<sp/>pll2mul<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*RCC_CFGR2_PREDIV1SRC*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/>RCC-&gt;CFGR;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>SYSCLK<sp/>source<sp/>-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tmpreg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___system___clock___source___status_1ga3847769265bf19becf7b976a7e908a64" kindref="member">RCC_SYSCLKSOURCE_STATUS_HSE</ref>:<sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sysclockfreq<sp/>=<sp/><ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref>;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref>:<sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pllmul<sp/>=<sp/>aPLLMULFactorTable[(uint32_t)(tmpreg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>)<sp/>&gt;&gt;<sp/>RCC_CFGR_PLLMULL_Pos];</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmpreg<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref>)<sp/>!=<sp/><ref refid="group___r_c_c___p_l_l___clock___source_1ga09fff12a4e92f4da5980321b7f99b632" kindref="member">RCC_PLLSOURCE_HSI_DIV2</ref>)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv<sp/>=<sp/>aPredivFactorTable[(uint32_t)(RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV1)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PREDIV1_Pos];</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv<sp/>=<sp/>aPredivFactorTable[(uint32_t)(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga39cb6bd06fb93eed1e2fe9da0297810a" kindref="member">RCC_CFGR_PLLXTPRE</ref>)<sp/>&gt;&gt;<sp/>RCC_CFGR_PLLXTPRE_Pos];</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*RCC_CFGR2_PREDIV1*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1SRC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_IS_BIT_SET(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PREDIV1SRC))</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLL2<sp/>selected<sp/>as<sp/>Prediv1<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PLLCLK<sp/>=<sp/>PLL2CLK<sp/>/<sp/>PREDIV1<sp/>*<sp/>PLLMUL<sp/>with<sp/>PLL2CLK<sp/>=<sp/>HSE/PREDIV2<sp/>*<sp/>PLL2MUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prediv2<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PREDIV2)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PREDIV2_Pos)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll2mul<sp/>=<sp/>((RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PLL2MUL)<sp/>&gt;&gt;<sp/>RCC_CFGR2_PLL2MUL_Pos)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)(((uint64_t)<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>*<sp/>(uint64_t)pll2mul<sp/>*<sp/>(uint64_t)pllmul)<sp/>/<sp/>((uint64_t)prediv2<sp/>*<sp/>(uint64_t)prediv));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>source<sp/>:<sp/>PLLCLK<sp/>=<sp/>HSE/PREDIV1<sp/>*<sp/>PLLMUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)((<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/>*<sp/>pllmul)<sp/>/<sp/>prediv);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>PLLMUL<sp/>was<sp/>set<sp/>to<sp/>13<sp/>means<sp/>that<sp/>it<sp/>was<sp/>to<sp/>cover<sp/>the<sp/>case<sp/>PLLMUL<sp/>6.5<sp/>(avoid<sp/>using<sp/>float)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>this<sp/>case<sp/>need<sp/>to<sp/>divide<sp/>pllclk<sp/>by<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pllmul<sp/>==<sp/>aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5)<sp/>&gt;&gt;<sp/>RCC_CFGR_PLLMULL_Pos])</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>pllclk<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSE<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>source<sp/>:<sp/>PLLCLK<sp/>=<sp/>HSE/PREDIV1<sp/>*<sp/>PLLMUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)((<ref refid="stm32f1xx__hal__conf_8h_1aeafcff4f57440c60e64812dddd13e7cb" kindref="member">HSE_VALUE</ref><sp/><sp/>*<sp/>pllmul)<sp/>/<sp/>prediv);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*RCC_CFGR2_PREDIV1SRC*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>used<sp/>as<sp/>PLL<sp/>clock<sp/>source<sp/>:<sp/>PLLCLK<sp/>=<sp/>HSI/2<sp/>*<sp/>PLLMUL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pllclk<sp/>=<sp/>(uint32_t)((<ref refid="stm32f1xx__hal__conf_8h_1aaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref><sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>pllmul);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sysclockfreq<sp/>=<sp/>pllclk;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_c_c___system___clock___source___status_1ga0d6c2b0b2d59e6591295649853bb2abd" kindref="member">RCC_SYSCLKSOURCE_STATUS_HSI</ref>:<sp/><sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>HSI<sp/>used<sp/>as<sp/>system<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sysclockfreq<sp/>=<sp/><ref refid="stm32f1xx__hal__conf_8h_1aaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sysclockfreq;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal">uint32_t<sp/>HAL_RCC_GetHCLKFreq(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___s_t_m32_f10x___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal">uint32_t<sp/>HAL_RCC_GetPCLK1Freq(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>HCLK<sp/>source<sp/>and<sp/>Compute<sp/>PCLK1<sp/>frequency<sp/>---------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(HAL_RCC_GetHCLKFreq()<sp/>&gt;&gt;<sp/><ref refid="group___s_t_m32_f10x___system___exported__types_1gaa93c123312c9273c0928a79f1203f759" kindref="member">APBPrescTable</ref>[(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga50b2423a5fea74a47b9eb8ab51869412" kindref="member">RCC_CFGR_PPRE1</ref>)<sp/>&gt;&gt;<sp/>RCC_CFGR_PPRE1_Pos]);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal">uint32_t<sp/>HAL_RCC_GetPCLK2Freq(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>HCLK<sp/>source<sp/>and<sp/>Compute<sp/>PCLK2<sp/>frequency<sp/>---------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(HAL_RCC_GetHCLKFreq()<sp/>&gt;&gt;<sp/><ref refid="group___s_t_m32_f10x___system___exported__types_1gaa93c123312c9273c0928a79f1203f759" kindref="member">APBPrescTable</ref>[(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gad61bd4f9f345ba41806813b0bfff1311" kindref="member">RCC_CFGR_PPRE2</ref>)<sp/>&gt;&gt;<sp/>RCC_CFGR_PPRE2_Pos]);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCC_GetOscConfig(<ref refid="struct_r_c_c___osc_init_type_def" kindref="compound">RCC_OscInitTypeDef</ref><sp/><sp/>*RCC_OscInitStruct)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(RCC_OscInitStruct<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>all<sp/>possible<sp/>values<sp/>for<sp/>the<sp/>Oscillator<sp/>type<sp/>parameter<sp/>---------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a23b9d1da2a92936c618d2416406275a3" kindref="member">OscillatorType</ref><sp/>=<sp/>RCC_OSCILLATORTYPE_HSE<sp/>|<sp/>RCC_OSCILLATORTYPE_HSI<sp/><sp/>\</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>RCC_OSCILLATORTYPE_LSE<sp/>|<sp/>RCC_OSCILLATORTYPE_LSI;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CFGR2_PREDIV1SRC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>Prediv1<sp/>source<sp/>--------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;Prediv1Source<sp/>=<sp/>READ_BIT(RCC-&gt;CFGR2,<sp/>RCC_CFGR2_PREDIV1SRC);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RCC_CFGR2_PREDIV1SRC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>HSE<sp/>configuration<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad499b1bbeeb8096235b534a9bfa53c9d" kindref="member">HSEState</ref><sp/>=<sp/><ref refid="group___r_c_c___h_s_e___config_1ga5ca515db2d5c4d5bdb9ee3d154df2704" kindref="member">RCC_HSE_BYPASS</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad499b1bbeeb8096235b534a9bfa53c9d" kindref="member">HSEState</ref><sp/>=<sp/><ref refid="group___r_c_c___h_s_e___config_1gabc4f70a44776c557af20496b04d9a9db" kindref="member">RCC_HSE_ON</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad499b1bbeeb8096235b534a9bfa53c9d" kindref="member">HSEState</ref><sp/>=<sp/><ref refid="group___r_c_c___h_s_e___config_1ga1616626d23fbce440398578855df6f97" kindref="member">RCC_HSE_OFF</ref>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a92007c1d01624a71cb277bf05b8d9a14" kindref="member">HSEPredivValue</ref><sp/>=<sp/><ref refid="group___r_c_c_ex___h_s_e___configuration_1ga33799456f6dcbcdb9e66374277083d4c" kindref="member">__HAL_RCC_HSE_GET_PREDIV</ref>();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>HSI<sp/>configuration<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf4fcacf94a97f7d49a70e089b39cf474" kindref="member">RCC_CR_HSION</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf4fcacf94a97f7d49a70e089b39cf474" kindref="member">RCC_CR_HSION</ref>)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a49183e0be5cf522de0fa1968df0bf0d7" kindref="member">HSIState</ref><sp/>=<sp/><ref refid="group___r_c_c___h_s_i___config_1ga0bf09ef9e46d5da25cced7b3122f92f5" kindref="member">RCC_HSI_ON</ref>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a49183e0be5cf522de0fa1968df0bf0d7" kindref="member">HSIState</ref><sp/>=<sp/><ref refid="group___r_c_c___h_s_i___config_1ga1b34d37d3b51afec0758b3ddc7a7e665" kindref="member">RCC_HSI_OFF</ref>;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1ad28b977e258a3ee788cd6c2d72430c30" kindref="member">HSICalibrationValue</ref><sp/>=<sp/>(uint32_t)((RCC-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5cb4397b2095c31660a01b748386aa70" kindref="member">RCC_CR_HSITRIM</ref>)<sp/>&gt;&gt;<sp/>RCC_CR_HSITRIM_Pos);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>LSE<sp/>configuration<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;BDCR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga542dffd7f8dc4da5401b54d822a22af0" kindref="member">RCC_BDCR_LSEBYP</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1ga542dffd7f8dc4da5401b54d822a22af0" kindref="member">RCC_BDCR_LSEBYP</ref>)</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1abb72dd5bfb99667e36d99b6887f80a0a" kindref="member">LSEState</ref><sp/>=<sp/><ref refid="group___r_c_c___l_s_e___config_1gaad580157edbae878edbcc83c5a68e767" kindref="member">RCC_LSE_BYPASS</ref>;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;BDCR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga00145f8814cb9a5b180d76499d97aead" kindref="member">RCC_BDCR_LSEON</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1ga00145f8814cb9a5b180d76499d97aead" kindref="member">RCC_BDCR_LSEON</ref>)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1abb72dd5bfb99667e36d99b6887f80a0a" kindref="member">LSEState</ref><sp/>=<sp/><ref refid="group___r_c_c___l_s_e___config_1gac981ea636c2f215e4473901e0912f55a" kindref="member">RCC_LSE_ON</ref>;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1abb72dd5bfb99667e36d99b6887f80a0a" kindref="member">LSEState</ref><sp/>=<sp/><ref refid="group___r_c_c___l_s_e___config_1ga6645c27708d0cad1a4ab61d2abb24c77" kindref="member">RCC_LSE_OFF</ref>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>LSI<sp/>configuration<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;CSR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga803cbf97bda1ebaf9afee2a3c9f0851b" kindref="member">RCC_CSR_LSION</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1ga803cbf97bda1ebaf9afee2a3c9f0851b" kindref="member">RCC_CSR_LSION</ref>)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a9acc15f6278f950ef02d5d6f819f68e8" kindref="member">LSIState</ref><sp/>=<sp/><ref refid="group___r_c_c___l_s_i___config_1ga6b364ac3500e60b6bff695ee518c87d6" kindref="member">RCC_LSI_ON</ref>;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a9acc15f6278f950ef02d5d6f819f68e8" kindref="member">LSIState</ref><sp/>=<sp/><ref refid="group___r_c_c___l_s_i___config_1gaa1710927d79a2032f87f039c4a27356a" kindref="member">RCC_LSI_OFF</ref>;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>PLL<sp/>configuration<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;CR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>)</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1ab3bb33f461bb409576e1c899c962e0b0" kindref="member">PLLState</ref><sp/>=<sp/><ref refid="group___r_c_c___p_l_l___config_1gaf86dbee130304ba5760818f56d34ec91" kindref="member">RCC_PLL_ON</ref>;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1ab3bb33f461bb409576e1c899c962e0b0" kindref="member">PLLState</ref><sp/>=<sp/><ref refid="group___r_c_c___p_l_l___config_1ga3a8d5c8bcb101c6ca1a574729acfa903" kindref="member">RCC_PLL_OFF</ref>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a418ecda4a355c6a161e4893a7bc1897f" kindref="member">PLLSource</ref><sp/>=<sp/>(uint32_t)(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaba4a5dbbd286f07a97f5aa6e6f3f6a57" kindref="member">RCC_CFGR_PLLSRC</ref>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;<ref refid="struct_r_c_c___osc_init_type_def_1a7ec4025786fa81e2a4bfc42832c0eddf" kindref="member">PLL</ref>.<ref refid="struct_r_c_c___p_l_l_init_type_def_1a4a57e48e8e939695ff2a76456e6360ef" kindref="member">PLLMUL</ref><sp/>=<sp/>(uint32_t)(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9735c088436b547fff3baae2bbaa0426" kindref="member">RCC_CFGR_PLLMULL</ref>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RCC_CR_PLL2ON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>PLL2<sp/>configuration<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((RCC-&gt;CR<sp/>&amp;<sp/>RCC_CR_PLL2ON)<sp/>==<sp/>RCC_CR_PLL2ON)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;PLL2.PLL2State<sp/>=<sp/>RCC_PLL2_ON;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct-&gt;PLL2.PLL2State<sp/>=<sp/>RCC_PLL2_OFF;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;PLL2.HSEPrediv2Value<sp/>=<sp/>__HAL_RCC_HSE_GET_PREDIV2();</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>RCC_OscInitStruct-&gt;PLL2.PLL2MUL<sp/>=<sp/>(uint32_t)(RCC-&gt;CFGR2<sp/>&amp;<sp/>RCC_CFGR2_PLL2MUL);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RCC_CR_PLL2ON<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCC_GetClockConfig(<ref refid="struct_r_c_c___clk_init_type_def" kindref="compound">RCC_ClkInitTypeDef</ref><sp/><sp/>*RCC_ClkInitStruct,<sp/>uint32_t<sp/>*pFLatency)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(RCC_ClkInitStruct<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(pFLatency<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>all<sp/>possible<sp/>values<sp/>for<sp/>the<sp/>Clock<sp/>type<sp/>parameter<sp/>--------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1afe92b105bff8e698233c286bb3018384" kindref="member">ClockType</ref><sp/>=<sp/><ref refid="group___r_c_c___system___clock___type_1ga7e721f5bf3fe925f78dae0356165332e" kindref="member">RCC_CLOCKTYPE_SYSCLK</ref><sp/>|<sp/><ref refid="group___r_c_c___system___clock___type_1gaa5330efbd790632856a2b15851517ef9" kindref="member">RCC_CLOCKTYPE_HCLK</ref><sp/>|<sp/><ref refid="group___r_c_c___system___clock___type_1gab00c7b70f0770a616be4b5df45a454c4" kindref="member">RCC_CLOCKTYPE_PCLK1</ref><sp/>|<sp/><ref refid="group___r_c_c___system___clock___type_1gaef7e78706e597a6551d71f5f9ad60cc0" kindref="member">RCC_CLOCKTYPE_PCLK2</ref>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>SYSCLK<sp/>configuration<sp/>--------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a02b70c23b593a55814d887f483ea0871" kindref="member">SYSCLKSource</ref><sp/>=<sp/>(uint32_t)(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>HCLK<sp/>configuration<sp/>----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a082c91ea9f270509aca7ae6ec42c2a54" kindref="member">AHBCLKDivider</ref><sp/>=<sp/>(uint32_t)(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gafe10e66938644ee8054a2426ff23efea" kindref="member">RCC_CFGR_HPRE</ref>);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>APB1<sp/>configuration<sp/>----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a994aca51c40decfc340e045da1a6ca19" kindref="member">APB1CLKDivider</ref><sp/>=<sp/>(uint32_t)(RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga50b2423a5fea74a47b9eb8ab51869412" kindref="member">RCC_CFGR_PPRE1</ref>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>APB2<sp/>configuration<sp/>----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>RCC_ClkInitStruct-&gt;<ref refid="struct_r_c_c___clk_init_type_def_1a9bbc30e9f4ddf462bc1fa6ea273eb4db" kindref="member">APB2CLKDivider</ref><sp/>=<sp/>(uint32_t)((RCC-&gt;CFGR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gad61bd4f9f345ba41806813b0bfff1311" kindref="member">RCC_CFGR_PPRE2</ref>)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/><sp/>defined(FLASH_ACR_LATENCY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>Flash<sp/>Wait<sp/>State<sp/>(Latency)<sp/>configuration<sp/>------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>*pFLatency<sp/>=<sp/>(uint32_t)(FLASH-&gt;ACR<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaef5e44cbb084160a6004ca9951ec7318" kindref="member">FLASH_ACR_LATENCY</ref>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>VALUE<sp/>lines<sp/>devices,<sp/>only<sp/>LATENCY_0<sp/>can<sp/>be<sp/>set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>*pFLatency<sp/>=<sp/>(uint32_t)<ref refid="group___f_l_a_s_h___latency_1ga1276f51e97dc9857ca261fae4eb890f3" kindref="member">FLASH_LATENCY_0</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCC_NMI_IRQHandler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>RCC<sp/>CSSF<sp/>flag<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_c_c___flags___interrupts___management_1ga134af980b892f362c05ae21922cd828d" kindref="member">__HAL_RCC_GET_IT</ref>(<ref refid="group___r_c_c___interrupt_1ga9bb34a4912d2084dc1c0834eb53aa7a3" kindref="member">RCC_IT_CSS</ref>))</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RCC<sp/>Clock<sp/>Security<sp/>System<sp/>interrupt<sp/>user<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RCC_CSSCallback();</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RCC<sp/>CSS<sp/>pending<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_c_c___flags___interrupts___management_1ga9d8ab157f58045b8daf8136bee54f139" kindref="member">__HAL_RCC_CLEAR_IT</ref>(<ref refid="group___r_c_c___interrupt_1ga9bb34a4912d2084dc1c0834eb53aa7a3" kindref="member">RCC_IT_CSS</ref>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RCC_Delay(uint32_t<sp/>mdelay)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><ref refid="core__armv8mbl_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref><sp/>uint32_t<sp/>Delay<sp/>=<sp/>mdelay<sp/>*<sp/>(<ref refid="group___s_t_m32_f10x___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6" kindref="member">SystemCoreClock</ref><sp/>/<sp/>8U<sp/>/<sp/>1000U);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1gabd585ddc865fb9b7f2493af1eee1a572" kindref="member">__NOP</ref>();</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Delay<sp/>--);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_RCC_CSSCallback(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>Should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="1382"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>HAL_RCC_CSSCallback<sp/>could<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAL_RCC_MODULE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="comment">/************************<sp/>(C)<sp/>COPYRIGHT<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"/>
  </compounddef>
</doxygen>
