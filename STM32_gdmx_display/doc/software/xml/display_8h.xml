<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="display_8h" kind="file" language="C++">
    <compoundname>display.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="stm32f1xx__hal_8h" local="yes">stm32f1xx_hal.h</includes>
    <includes refid="hd44780_8h" local="yes">hd44780.h</includes>
    <includedby refid="main_8h" local="yes">Inc/main.h</includedby>
    <includedby refid="usbd__cdc__if_8h" local="yes">Inc/usbd_cdc_if.h</includedby>
    <includedby refid="display_8c" local="yes">Src/display.c</includedby>
    <incdepgraph>
      <node id="17">
        <label>stm32f1xx_hal_flash.h</label>
        <link refid="stm32f1xx__hal__flash_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32f1xx_hal_tim_ex.h</label>
        <link refid="stm32f1xx__hal__tim__ex_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stm32f1xx_hal_pcd.h</label>
        <link refid="stm32f1xx__hal__pcd_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="16">
        <label>stm32f1xx_hal_cortex.h</label>
        <link refid="stm32f1xx__hal__cortex_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stm32f1xx_ll_usb.h</label>
        <link refid="stm32f1xx__ll__usb_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32f1xx_hal.h</label>
        <link refid="stm32f1xx__hal_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="19">
        <label>stm32f1xx_hal_pwr.h</label>
        <link refid="stm32f1xx__hal__pwr_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32f1xx_hal_rcc.h</label>
        <link refid="stm32f1xx__hal__rcc_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stm32f1xx_hal_dma_ex.h</label>
        <link refid="stm32f1xx__hal__dma__ex_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stm32f1xx.h</label>
        <link refid="stm32f1xx_8h"/>
      </node>
      <node id="18">
        <label>stm32f1xx_hal_flash_ex.h</label>
        <link refid="stm32f1xx__hal__flash__ex_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32f1xx_hal_dma.h</label>
        <link refid="stm32f1xx__hal__dma_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32f1xx_hal_tim.h</label>
        <link refid="stm32f1xx__hal__tim_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stm32f1xx_hal_rcc_ex.h</label>
        <link refid="stm32f1xx__hal__rcc__ex_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>hd44780.h</label>
        <link refid="hd44780_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stm32f1xx_hal_conf.h</label>
        <link refid="stm32f1xx__hal__conf_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stm32f1xx_hal_gpio.h</label>
        <link refid="stm32f1xx__hal__gpio_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32f1xx_hal_gpio_ex.h</label>
        <link refid="stm32f1xx__hal__gpio__ex_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stm32f1xx_hal_def.h</label>
        <link refid="stm32f1xx__hal__def_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Inc/display.h</label>
        <link refid="display_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="13">
        <label>stm32f1xx_hal_exti.h</label>
        <link refid="stm32f1xx__hal__exti_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>Inc/usbd_cdc_if.h</label>
        <link refid="usbd__cdc__if_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Inc/usb_device.h</label>
        <link refid="usb__device_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Src/usb_device.c</label>
        <link refid="usb__device_8c"/>
      </node>
      <node id="11">
        <label>Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c</label>
        <link refid="usbd__cdc_8c"/>
      </node>
      <node id="16">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h</label>
        <link refid="usbd__def_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h</label>
        <link refid="usbd__cdc_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Inc/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c</label>
        <link refid="usbd__ioreq_8c"/>
      </node>
      <node id="12">
        <label>Src/usbd_conf.c</label>
        <link refid="usbd__conf_8c"/>
      </node>
      <node id="18">
        <label>Inc/usbd_desc.h</label>
        <link refid="usbd__desc_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="10">
        <label>Src/usbd_cdc_if.c</label>
        <link refid="usbd__cdc__if_8c"/>
      </node>
      <node id="4">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h</label>
        <link refid="usbd__core_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Src/stm32f1xx_it.c</label>
        <link refid="stm32f1xx__it_8c"/>
      </node>
      <node id="15">
        <label>Src/usbd_desc.c</label>
        <link refid="usbd__desc_8c"/>
      </node>
      <node id="3">
        <label>Inc/usbd_conf.h</label>
        <link refid="usbd__conf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c</label>
        <link refid="usbd__core_8c"/>
      </node>
      <node id="19">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h</label>
        <link refid="usbd__ctlreq_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Inc/display.h</label>
        <link refid="display_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ioreq.h</label>
        <link refid="usbd__ioreq_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Framebuffer parameters</header>
      <memberdef kind="define" id="display_8h_1a993a4d4222351be0e7c6b094a655ce51" prot="public" static="no">
        <name>DISPLAY_ROW_SIZE</name>
        <initializer><ref refid="hd44780_8h_1aea65f7cf75dd2099485351a9596231e9" kindref="member">HD44780_ROW_SIZE</ref></initializer>
        <briefdescription>
<para>Number of characters per line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="37" column="9" bodyfile="Inc/display.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="display_8h_1ab45d61bf18ecf084278962fa9ad43389" prot="public" static="no">
        <name>DISPLAY_ROW_NUM</name>
        <initializer><ref refid="hd44780_8h_1a1f3b159c39a6eb32cf369d7f7f4f966f" kindref="member">HD44780_ROW_NUM</ref></initializer>
        <briefdescription>
<para>Number of lines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="39" column="9" bodyfile="Inc/display.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="display_8h_1a92ebc8b690017a2fc1ecd6991de36efc" prot="public" static="no">
        <name>DISPLAY_REFRESH_INTERVAL</name>
        <initializer>60</initializer>
        <briefdescription>
<para>Display video page render interval, ms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="30" column="9" bodyfile="Inc/display.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="display_8h_1a7ffe3a1eb9de5d766a71c82b9e29479e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_init</definition>
        <argsstring>(void)</argsstring>
        <name>DISPLAY_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Display initialization. </para>
        </briefdescription>
        <detaileddescription>
<para>Display control module initialization function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="54" column="6" bodyfile="Src/display.c" bodystart="42" bodyend="104" declfile="Inc/display.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1af2d9b11fc11add9c5b2067065173490f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_clear</definition>
        <argsstring>(void)</argsstring>
        <name>DISPLAY_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Display clear. </para>
        </briefdescription>
        <detaileddescription>
<para>Display cleaning function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="58" column="6" bodyfile="Src/display.c" bodystart="107" bodyend="126" declfile="Inc/display.h" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a3a58c2de5330df44cba322688012fc5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_setRenderBuffer</definition>
        <argsstring>(uint8_t **buffer)</argsstring>
        <name>DISPLAY_setRenderBuffer</name>
        <param>
          <type>uint8_t **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Setting the display buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Display buffer setting function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to a two-dimensional buffer of displayed information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="63" column="6" bodyfile="Src/display.c" bodystart="129" bodyend="131" declfile="Inc/display.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a184eeb79104d99b29c02ade191eb5da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_setCursorMode</definition>
        <argsstring>(uint8_t mode)</argsstring>
        <name>DISPLAY_setCursorMode</name>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Cursor mode control. </para>
        </briefdescription>
        <detaileddescription>
<para>A function that controls the mode of the cursor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>- cursor operation mode. Bit0 - On / Off, Bit1 - BlankOn / BlankOff. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="68" column="6" bodyfile="Src/display.c" bodystart="134" bodyend="156" declfile="Inc/display.h" declline="68" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a92df0fd966747a290d3b8a8ac00e36c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t DISPLAY_moveCursorXY</definition>
        <argsstring>(uint8_t X, uint8_t Y)</argsstring>
        <name>DISPLAY_moveCursorXY</name>
        <param>
          <type>uint8_t</type>
          <declname>X</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Moves the cursor to the specified position. </para>
        </briefdescription>
        <detaileddescription>
<para>The function of moving the cursor to the X, Y position. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="75" column="9" bodyfile="Src/display.c" bodystart="159" bodyend="218" declfile="Inc/display.h" declline="75" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a529c2e8347c655d37fd7f3142b667b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printSymbol</definition>
        <argsstring>(uint8_t Symbol)</argsstring>
        <name>DISPLAY_printSymbol</name>
        <param>
          <type>uint8_t</type>
          <declname>Symbol</declname>
        </param>
        <briefdescription>
<para>Print the character at the current position. </para>
        </briefdescription>
        <detaileddescription>
<para>The function of printing a character at the current cursor position on the display. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>- the displayed symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="80" column="6" bodyfile="Src/display.c" bodystart="221" bodyend="234" declfile="Inc/display.h" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a716e554a372718233ed84482c9d6fddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printSymbolXY</definition>
        <argsstring>(uint8_t X, uint8_t Y, uint8_t Symbol)</argsstring>
        <name>DISPLAY_printSymbolXY</name>
        <param>
          <type>uint8_t</type>
          <declname>X</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Symbol</declname>
        </param>
        <briefdescription>
<para>Printing a character at the current position from FLASH memory. </para>
        </briefdescription>
        <detaileddescription>
<para>The function of printing a character at the current cursor position on the display. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptrSymbol</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to the displayed symbol in FLASH memory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Prints a character at the specified position.</para>
<para>The function of printing a character in the X, Y position. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>- the displayed symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="100" column="6" bodyfile="Src/display.c" bodystart="247" bodyend="250" declfile="Inc/display.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a78ee696bc155ce1e387e51cd2de725ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printString</definition>
        <argsstring>(uint8_t *String)</argsstring>
        <name>DISPLAY_printString</name>
        <param>
          <type>uint8_t *</type>
          <declname>String</declname>
        </param>
        <briefdescription>
<para>Print a character at a specified position from FLASH memory. </para>
        </briefdescription>
        <detaileddescription>
<para>The function of printing a character from FLASH memory to position X, Y. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptrSymbol</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to the displayed symbol in FLASH memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display.</para>
</simplesect>
Print a string.</para>
<para>Function of printing the string at the current cursor position on the display. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>- the string to be printed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="121" column="6" bodyfile="Src/display.c" bodystart="265" bodyend="269" declfile="Inc/display.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a97ffb57b84ae6310716e699958818aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printScreen</definition>
        <argsstring>(uint8_t *Screen)</argsstring>
        <name>DISPLAY_printScreen</name>
        <param>
          <type>uint8_t *</type>
          <declname>Screen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="124" column="7" bodyfile="Src/display.c" bodystart="272" bodyend="289" declfile="Inc/display.h" declline="124" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1aaed284eab9e3f3045d2919e28ffa32e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printStringXY</definition>
        <argsstring>(uint8_t X, uint8_t Y, uint8_t *String)</argsstring>
        <name>DISPLAY_printStringXY</name>
        <param>
          <type>uint8_t</type>
          <declname>X</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>String</declname>
        </param>
        <briefdescription>
<para>Print a string from FLASH memory at the current position. </para>
        </briefdescription>
        <detaileddescription>
<para>Function of printing a string from FLASH memory at the current cursor position on the display. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>- the string to be printed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display.</para>
</simplesect>
Print the string at the specified position.</para>
<para>The function of printing a line to position X, Y. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>- the string to be printed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="145" column="6" bodyfile="Src/display.c" bodystart="312" bodyend="315" declfile="Inc/display.h" declline="145" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a0d6aec7669ccd3945ae03a20ba054b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_putSymbolXYToRenderBuffer</definition>
        <argsstring>(uint8_t X, uint8_t Y, uint8_t Symbol)</argsstring>
        <name>DISPLAY_putSymbolXYToRenderBuffer</name>
        <param>
          <type>uint8_t</type>
          <declname>X</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Symbol</declname>
        </param>
        <briefdescription>
<para>Printing a line from FLASH memory to position X, Y. </para>
        </briefdescription>
        <detaileddescription>
<para>Function of printing a line from FLASH memory to position X, Y on the display. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>- string to be printed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display.</para>
</simplesect>
The function of printing a character in RenderBuffer.</para>
<para>The function to print a character in RenderBuffer at X, Y position. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>- the symbol to be printed into the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="168" column="6" bodyfile="Src/display.c" bodystart="330" bodyend="332" declfile="Inc/display.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a4b74a845ba968c15b1d1904d012b6100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_putStringXYToRenderBuffer</definition>
        <argsstring>(uint8_t X, uint8_t Y, uint8_t *String)</argsstring>
        <name>DISPLAY_putStringXYToRenderBuffer</name>
        <param>
          <type>uint8_t</type>
          <declname>X</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>String</declname>
        </param>
        <briefdescription>
<para>Function for printing a string in RenderBuffer. </para>
        </briefdescription>
        <detaileddescription>
<para>The function of printing a string in RenderBuffer at position X, Y. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>String</parametername>
</parameternamelist>
<parameterdescription>
<para>- the string to be printed to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="176" column="6" bodyfile="Src/display.c" bodystart="335" bodyend="337" declfile="Inc/display.h" declline="176" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1aa9a5c1a970aa5de34d3304971e2fc2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printuint8_t</definition>
        <argsstring>(uint8_t Value)</argsstring>
        <name>DISPLAY_printuint8_t</name>
        <param>
          <type>uint8_t</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Function of printing an unsigned integer number on the display. </para>
        </briefdescription>
        <detaileddescription>
<para>Function of printing an &quot;uint8_t&quot; number on the display from current position. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>- the unsigned integer number to be printed on the display. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="181" column="6" bodyfile="Src/display.c" bodystart="340" bodyend="344" declfile="Inc/display.h" declline="181" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1ae9559572c2911e6486eecb935cc4d6d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printXYuint8_t</definition>
        <argsstring>(uint8_t X, uint8_t Y, uint8_t Value)</argsstring>
        <name>DISPLAY_printXYuint8_t</name>
        <param>
          <type>uint8_t</type>
          <declname>X</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Function of printing an unsigned integer number on the display. </para>
        </briefdescription>
        <detaileddescription>
<para>Function of printing an &quot;uint8_t&quot; number on the display from position from the of X, Y. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>- the unsigned integer number to be printed on the display. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="189" column="6" bodyfile="Src/display.c" bodystart="347" bodyend="350" declfile="Inc/display.h" declline="189" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a8a290b3726a83ce8446812044feb7fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printuint16_t</definition>
        <argsstring>(uint16_t Value)</argsstring>
        <name>DISPLAY_printuint16_t</name>
        <param>
          <type>uint16_t</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Function of printing an unsigned integer number on the display. </para>
        </briefdescription>
        <detaileddescription>
<para>Function of printing an &quot;uint16_t&quot; number on the display from current position. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>- the unsigned integer number to be printed on the display. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="194" column="6" bodyfile="Src/display.c" bodystart="353" bodyend="357" declfile="Inc/display.h" declline="194" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a2b92f13e36779f17acbfafeb4c7c5653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_printXYuint16_t</definition>
        <argsstring>(uint8_t X, uint8_t Y, uint16_t Value)</argsstring>
        <name>DISPLAY_printXYuint16_t</name>
        <param>
          <type>uint8_t</type>
          <declname>X</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Function of printing an unsigned integer number on the display. </para>
        </briefdescription>
        <detaileddescription>
<para>Function of printing an &quot;uint16_t&quot; number on the display from position from the of X, Y. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the X axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>- coordinate of familiarity along the Y axis (from 0 to N). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>- the unsigned integer number to be printed on the display. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The origin is in the upper left corner of the display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="202" column="6" bodyfile="Src/display.c" bodystart="360" bodyend="363" declfile="Inc/display.h" declline="202" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="display_8h_1a9b19caa251ad2b621967249c19483af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DISPLAY_run</definition>
        <argsstring>(void)</argsstring>
        <name>DISPLAY_run</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Display render function. </para>
        </briefdescription>
        <detaileddescription>
<para>A function that renders the framebuffer to the display. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/display.h" line="208" column="6" bodyfile="Src/display.c" bodystart="367" bodyend="386" declfile="Inc/display.h" declline="208" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Display module (header file). </para>
    </briefdescription>
    <detaileddescription>
<para>Display module (source file).</para>
<para>Display control module. <simplesect kind="author"><para>Arthur Markaryan </para>
</simplesect>
<simplesect kind="date"><para>31.03.2021 </para>
</simplesect>
<simplesect kind="copyright"><para><linebreak/>
 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DISPLAY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DISPLAY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standart<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Device<sp/>specific<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f1xx__hal_8h" kindref="compound">stm32f1xx_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Custom<sp/>modules<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hd44780_8h" kindref="compound">hd44780.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//-------------------Defines<sp/>of<sp/>hardware<sp/>parameters---------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="display_8h_1a92ebc8b690017a2fc1ecd6991de36efc" refkind="member"><highlight class="preprocessor">#define<sp/>DISPLAY_REFRESH_INTERVAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\{<sp/>*/</highlight></codeline>
<codeline lineno="37" refid="display_8h_1a993a4d4222351be0e7c6b094a655ce51" refkind="member"><highlight class="preprocessor">#define<sp/>DISPLAY_ROW_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HD44780_ROW_SIZE</highlight></codeline>
<codeline lineno="39" refid="display_8h_1ab45d61bf18ecf084278962fa9ad43389" refkind="member"><highlight class="preprocessor">#define<sp/>DISPLAY_ROW_NUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HD44780_ROW_NUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//-----------------------Structures<sp/>definitions-------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//--------------------Define<sp/>functions<sp/>and<sp/>macroses---------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//-----------------------Function<sp/>declarationes-------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a7ffe3a1eb9de5d766a71c82b9e29479e" kindref="member">DISPLAY_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1af2d9b11fc11add9c5b2067065173490f" kindref="member">DISPLAY_clear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a3a58c2de5330df44cba322688012fc5d" kindref="member">DISPLAY_setRenderBuffer</ref>(uint8_t<sp/>**buffer);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a184eeb79104d99b29c02ade191eb5da8" kindref="member">DISPLAY_setCursorMode</ref>(uint8_t<sp/>mode);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="display_8h_1a92df0fd966747a290d3b8a8ac00e36c7" kindref="member">DISPLAY_moveCursorXY</ref>(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a529c2e8347c655d37fd7f3142b667b1c" kindref="member">DISPLAY_printSymbol</ref>(uint8_t<sp/>Symbol);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__TI_COMPILER_VERSION__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printSymbolFromFlash(__flash<sp/>uint8_t<sp/>*ptrSymbol);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printSymbolFromFlash(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptrSymbol);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Compiler<sp/>not<sp/>supported!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a716e554a372718233ed84482c9d6fddc" kindref="member">DISPLAY_printSymbolXY</ref>(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>uint8_t<sp/>Symbol);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__TI_COMPILER_VERSION__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printSymbolXYFromFlash(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>__flash<sp/>uint8_t<sp/>*ptrSymbol);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printSymbolXYFromFlash(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptrSymbol);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Compiler<sp/>not<sp/>supported!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a78ee696bc155ce1e387e51cd2de725ce" kindref="member">DISPLAY_printString</ref>(uint8_t<sp/>*String);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>of<sp/>printing<sp/>the<sp/>Screen<sp/>from<sp/>the<sp/>(0,<sp/>0)<sp/>position<sp/>on<sp/>the<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printScreen(uint8_t<sp/>*Screen);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__TI_COMPILER_VERSION__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printStringFromFlash(__flash<sp/>uint8_t<sp/>*String);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printStringFromFlash(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Compiler<sp/>not<sp/>supported!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1aaed284eab9e3f3045d2919e28ffa32e2" kindref="member">DISPLAY_printStringXY</ref>(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>uint8_t<sp/>*String);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__TI_COMPILER_VERSION__)<sp/>||<sp/>defined(__IAR_SYSTEMS_ICC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printStringXYFromFlash(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>__flash<sp/>uint8_t<sp/>*String);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DISPLAY_printStringXYFromFlash(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Compiler<sp/>not<sp/>supported!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a0d6aec7669ccd3945ae03a20ba054b60" kindref="member">DISPLAY_putSymbolXYToRenderBuffer</ref>(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>uint8_t<sp/>Symbol);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a4b74a845ba968c15b1d1904d012b6100" kindref="member">DISPLAY_putStringXYToRenderBuffer</ref>(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>uint8_t<sp/>*String);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1aa9a5c1a970aa5de34d3304971e2fc2ee" kindref="member">DISPLAY_printuint8_t</ref>(uint8_t<sp/>Value);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1ae9559572c2911e6486eecb935cc4d6d8" kindref="member">DISPLAY_printXYuint8_t</ref>(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>uint8_t<sp/>Value);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a8a290b3726a83ce8446812044feb7fa6" kindref="member">DISPLAY_printuint16_t</ref>(uint16_t<sp/>Value);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a2b92f13e36779f17acbfafeb4c7c5653" kindref="member">DISPLAY_printXYuint16_t</ref>(uint8_t<sp/>X,<sp/>uint8_t<sp/>Y,<sp/>uint16_t<sp/>Value);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display_8h_1a9b19caa251ad2b621967249c19483af1" kindref="member">DISPLAY_run</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//_DISPLAY_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Inc/display.h"/>
  </compounddef>
</doxygen>
