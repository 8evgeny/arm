<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stm32f1xx__hal__pwr_8h" kind="file" language="C++">
    <compoundname>stm32f1xx_hal_pwr.h</compoundname>
    <includes refid="stm32f1xx__hal__def_8h" local="yes">stm32f1xx_hal_def.h</includes>
    <includedby refid="stm32f1xx__hal__conf_8h" local="yes">Inc/stm32f1xx_hal_conf.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h</label>
        <link refid="stm32f1xx__hal__pwr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stm32f1xx.h</label>
        <link refid="stm32f1xx_8h"/>
      </node>
      <node id="2">
        <label>stm32f1xx_hal_def.h</label>
        <link refid="stm32f1xx__hal__def_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="26">
        <label>Inc/usbd_cdc_if.h</label>
        <link refid="usbd__cdc__if_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Inc/usb_device.h</label>
        <link refid="usb__device_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Src/buzzer.c</label>
        <link refid="buzzer_8c"/>
      </node>
      <node id="28">
        <label>Src/usb_device.c</label>
        <link refid="usb__device_8c"/>
      </node>
      <node id="30">
        <label>Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c</label>
        <link refid="usbd__cdc_8c"/>
      </node>
      <node id="35">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h</label>
        <link refid="usbd__def_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c</label>
        <link refid="stm32f1xx__hal__cortex_8c"/>
      </node>
      <node id="6">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_dma.c</label>
        <link refid="stm32f1xx__hal__dma_8c"/>
      </node>
      <node id="25">
        <label>Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h</label>
        <link refid="usbd__cdc_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Inc/buzzer.h</label>
        <link refid="buzzer_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h</label>
        <link refid="stm32f1xx__hal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>Src/hd44780.c</label>
        <link refid="hd44780_8c"/>
      </node>
      <node id="17">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c</label>
        <link refid="stm32f1xx__hal__tim_8c"/>
      </node>
      <node id="46">
        <label>Src/stm32f1xx_hal_timebase_tim.c</label>
        <link refid="stm32f1xx__hal__timebase__tim_8c"/>
      </node>
      <node id="1">
        <label>Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h</label>
        <link refid="stm32f1xx__hal__pwr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Inc/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c</label>
        <link refid="stm32f1xx__hal_8c"/>
      </node>
      <node id="9">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c</label>
        <link refid="stm32f1xx__hal__flash__ex_8c"/>
      </node>
      <node id="32">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c</label>
        <link refid="usbd__ioreq_8c"/>
      </node>
      <node id="10">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c</label>
        <link refid="stm32f1xx__hal__gpio_8c"/>
      </node>
      <node id="31">
        <label>Src/usbd_conf.c</label>
        <link refid="usbd__conf_8c"/>
      </node>
      <node id="37">
        <label>Inc/usbd_desc.h</label>
        <link refid="usbd__desc_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_usb.c</label>
        <link refid="stm32f1xx__ll__usb_8c"/>
      </node>
      <node id="27">
        <label>Src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="29">
        <label>Src/usbd_cdc_if.c</label>
        <link refid="usbd__cdc__if_8c"/>
      </node>
      <node id="23">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h</label>
        <link refid="usbd__core_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pcd_ex.c</label>
        <link refid="stm32f1xx__hal__pcd__ex_8c"/>
      </node>
      <node id="44">
        <label>Inc/led.h</label>
        <link refid="led_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pwr.c</label>
        <link refid="stm32f1xx__hal__pwr_8c"/>
      </node>
      <node id="15">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c</label>
        <link refid="stm32f1xx__hal__rcc_8c"/>
      </node>
      <node id="8">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash.c</label>
        <link refid="stm32f1xx__hal__flash_8c"/>
      </node>
      <node id="39">
        <label>Src/stm32f1xx_it.c</label>
        <link refid="stm32f1xx__it_8c"/>
      </node>
      <node id="34">
        <label>Src/usbd_desc.c</label>
        <link refid="usbd__desc_8c"/>
      </node>
      <node id="18">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim_ex.c</label>
        <link refid="stm32f1xx__hal__tim__ex_8c"/>
      </node>
      <node id="11">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio_ex.c</label>
        <link refid="stm32f1xx__hal__gpio__ex_8c"/>
      </node>
      <node id="42">
        <label>Inc/hd44780.h</label>
        <link refid="hd44780_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Inc/stm32f1xx_hal_conf.h</label>
        <link refid="stm32f1xx__hal__conf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Src/led.c</label>
        <link refid="led_8c"/>
      </node>
      <node id="22">
        <label>Inc/usbd_conf.h</label>
        <link refid="usbd__conf_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c</label>
        <link refid="usbd__core_8c"/>
      </node>
      <node id="38">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h</label>
        <link refid="usbd__ctlreq_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c</label>
        <link refid="stm32f1xx__hal__rcc__ex_8c"/>
      </node>
      <node id="7">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_exti.c</label>
        <link refid="stm32f1xx__hal__exti_8c"/>
      </node>
      <node id="41">
        <label>Inc/display.h</label>
        <link refid="display_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ioreq.h</label>
        <link refid="usbd__ioreq_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pcd.c</label>
        <link refid="stm32f1xx__hal__pcd_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_p_w_r___p_v_d_type_def" prot="public">PWR_PVDTypeDef</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" prot="public" static="no">
        <name>PWR_EXTI_LINE_PVD</name>
        <initializer>((uint32_t)0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External interrupt line 16 Connected to the PVD EXTI Line </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="69" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1gaddf4616a143ac3481f3043f2a4c21c18" prot="public" static="no">
        <name>PWR_PVDLEVEL_0</name>
        <initializer>PWR_CR_PLS_2V2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="85" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1ga06e55b20a8777594f1a91ee71fac1f79" prot="public" static="no">
        <name>PWR_PVDLEVEL_1</name>
        <initializer>PWR_CR_PLS_2V3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="86" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1gab26bb78650bbaef26ac9f9123c791cc7" prot="public" static="no">
        <name>PWR_PVDLEVEL_2</name>
        <initializer>PWR_CR_PLS_2V4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="87" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1ga7b751743b3e29c237e6a0e1d7bdd0503" prot="public" static="no">
        <name>PWR_PVDLEVEL_3</name>
        <initializer>PWR_CR_PLS_2V5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="88" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1ga03c0d3ae547deb1a51b8acafac101698" prot="public" static="no">
        <name>PWR_PVDLEVEL_4</name>
        <initializer>PWR_CR_PLS_2V6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="89" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1ga46a1476440945c2b6426b4973172f24b" prot="public" static="no">
        <name>PWR_PVDLEVEL_5</name>
        <initializer>PWR_CR_PLS_2V7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="90" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1ga5dda7d0ac3fd3d606666455ca3c8f537" prot="public" static="no">
        <name>PWR_PVDLEVEL_6</name>
        <initializer>PWR_CR_PLS_2V8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="91" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d__detection__level_1ga2c5cd8dd26b13bdf0164c1f7596b4bfd" prot="public" static="no">
        <name>PWR_PVDLEVEL_7</name>
        <initializer>PWR_CR_PLS_2V9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="92" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d___mode_1ga3a4bf701a36a14a4edf4dc5a28153277" prot="public" static="no">
        <name>PWR_PVD_MODE_NORMAL</name>
        <initializer>0x00000000U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>basic mode is used </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="101" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d___mode_1ga102d7b8354419990a2a780f61cd020a6" prot="public" static="no">
        <name>PWR_PVD_MODE_IT_RISING</name>
        <initializer>0x00010001U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Interrupt Mode with Rising edge trigger detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="102" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d___mode_1gab600a54f3a588de836cfe4b727ab8a53" prot="public" static="no">
        <name>PWR_PVD_MODE_IT_FALLING</name>
        <initializer>0x00010002U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Interrupt Mode with Falling edge trigger detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="103" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d___mode_1gac531fbf14457e6595505354fad521b67" prot="public" static="no">
        <name>PWR_PVD_MODE_IT_RISING_FALLING</name>
        <initializer>0x00010003U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Interrupt Mode with Rising/Falling edge trigger detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="104" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d___mode_1ga1a946b01887aa886de329a92c3ab0dd4" prot="public" static="no">
        <name>PWR_PVD_MODE_EVENT_RISING</name>
        <initializer>0x00020001U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event Mode with Rising edge trigger detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="105" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d___mode_1gaaedbe45f1a1ea6c30af6ac51abae0cae" prot="public" static="no">
        <name>PWR_PVD_MODE_EVENT_FALLING</name>
        <initializer>0x00020002U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event Mode with Falling edge trigger detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="106" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___p_v_d___mode_1ga7455387c8e9049f9f66b46423d4f4091" prot="public" static="no">
        <name>PWR_PVD_MODE_EVENT_RISING_FALLING</name>
        <initializer>0x00020003U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event Mode with Rising/Falling edge trigger detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="107" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___wake_up___pins_1ga0da8e7cbe0826e93b777ae4419a1cd05" prot="public" static="no">
        <name>PWR_WAKEUP_PIN1</name>
        <initializer><ref refid="group___peripheral___registers___bits___definition_1ga7ac8c15a08bbee754ea720b0d4a4f580" kindref="member">PWR_CSR_EWUP</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="118" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___regulator__state__in___s_l_e_e_p___s_t_o_p__mode_1ga1d5b4e1482184286e28c16162f530039" prot="public" static="no">
        <name>PWR_MAINREGULATOR_ON</name>
        <initializer>0x00000000U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="127" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___regulator__state__in___s_l_e_e_p___s_t_o_p__mode_1gab9922a15f8414818d736d5e7fcace963" prot="public" static="no">
        <name>PWR_LOWPOWERREGULATOR_ON</name>
        <initializer><ref refid="group___peripheral___registers___bits___definition_1ga3aeb8d6f2539b0a3a4b851aeba0eea66" kindref="member">PWR_CR_LPDS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="128" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___s_l_e_e_p__mode__entry_1ga4f0f99a3526c57efb3501b016639fa45" prot="public" static="no">
        <name>PWR_SLEEPENTRY_WFI</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="137" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___s_l_e_e_p__mode__entry_1ga2ef4bd42ad37dcfcd0813676087d559e" prot="public" static="no">
        <name>PWR_SLEEPENTRY_WFE</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="138" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___s_t_o_p__mode__entry_1ga3bdb1a9c9b421b73ab148d45eb90fa9b" prot="public" static="no">
        <name>PWR_STOPENTRY_WFI</name>
        <initializer>((uint8_t)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="147" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___s_t_o_p__mode__entry_1ga2e1ee5c9577cc322474a826fa97de798" prot="public" static="no">
        <name>PWR_STOPENTRY_WFE</name>
        <initializer>((uint8_t)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="148" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1ga2d06760a5769e729b06d41e37036d58e" prot="public" static="no">
        <name>PWR_FLAG_WU</name>
        <initializer><ref refid="group___peripheral___registers___bits___definition_1ga9465bb7ad9ca936688344e2a077539e6" kindref="member">PWR_CSR_WUF</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="157" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1ga9e55f0b5dec2346d5c8dee3ab3c0c2df" prot="public" static="no">
        <name>PWR_FLAG_SB</name>
        <initializer><ref refid="group___peripheral___registers___bits___definition_1gab4fd42f153660593cad6f4fe22ff76bb" kindref="member">PWR_CSR_SBF</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="158" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___flag_1gaefd05d58cc050eeef83a1b5c520b2c2a" prot="public" static="no">
        <name>PWR_FLAG_PVDO</name>
        <initializer><ref refid="group___peripheral___registers___bits___definition_1ga3535ce181895cc00afeb28dcac68d04c" kindref="member">PWR_CSR_PVDO</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="159" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga2977135bbea35b786805eea640d1c884" prot="public" static="no">
        <name>__HAL_PWR_GET_FLAG</name>
        <param><defname>__FLAG__</defname></param>
        <initializer>((PWR-&gt;CSR &amp; (__FLAG__)) == (__FLAG__))</initializer>
        <briefdescription>
<para>Check PWR flag is set or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;FLAG&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para>PWR_FLAG_WU: Wake Up flag. This flag indicates that a wakeup event was received from the WKUP pin or from the RTC alarm An additional wakeup event is detected if the WKUP pin is enabled (by setting the EWUP bit) when the WKUP pin level is already high. </para>
</listitem>
<listitem><para>PWR_FLAG_SB: StandBy flag. This flag indicates that the system was resumed from StandBy mode. </para>
</listitem>
<listitem><para>PWR_FLAG_PVDO: PVD Output. This flag is valid only if PVD is enabled by the HAL_PWR_EnablePVD() function. The PVD is stopped by Standby mode For this reason, this bit is equal to 0 after Standby or reset until the PVDE bit is set. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of <bold>FLAG</bold> (TRUE or FALSE). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="190" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga96f24bf4b16c9f944cd829100bf746e5" prot="public" static="no">
        <name>__HAL_PWR_CLEAR_FLAG</name>
        <param><defname>__FLAG__</defname></param>
        <initializer>SET_BIT(PWR-&gt;CR, ((__FLAG__) &lt;&lt; 2))</initializer>
        <briefdescription>
<para>Clear the PWR&apos;s pending flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;FLAG&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to clear. This parameter can be one of the following values: <itemizedlist>
<listitem><para>PWR_FLAG_WU: Wake Up flag </para>
</listitem>
<listitem><para>PWR_FLAG_SB: StandBy flag </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="198" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga3180f039cf14ef78a64089f387f8f9c2" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_ENABLE_IT</name>
        <param></param>
        <initializer>SET_BIT(EXTI-&gt;IMR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>Enable interrupt on PVD Exti Line 16. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="204" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1gad240d7bf8f15191b068497b9aead1f1f" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_DISABLE_IT</name>
        <param></param>
        <initializer>CLEAR_BIT(EXTI-&gt;IMR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>Disable interrupt on PVD Exti Line 16. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="210" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1gae5ba5672fe8cb7c1686c7f2cc211b128" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_ENABLE_EVENT</name>
        <param></param>
        <initializer>SET_BIT(EXTI-&gt;EMR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>Enable event on PVD Exti Line 16. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="216" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga8bd379e960497722450c7cea474a7e7a" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_DISABLE_EVENT</name>
        <param></param>
        <initializer>CLEAR_BIT(EXTI-&gt;EMR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>Disable event on PVD Exti Line 16. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="222" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga5b971478563a00e1ee1a9d8ca8054e08" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE</name>
        <param></param>
        <initializer>SET_BIT(EXTI-&gt;FTSR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>PVD EXTI line configuration: set falling edge trigger. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="229" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga1ca57168205f8cd8d1014e6eb9465f2d" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE</name>
        <param></param>
        <initializer>CLEAR_BIT(EXTI-&gt;FTSR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>Disable the PVD Extended Interrupt Falling Trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="236" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga7bef3f30c9fe267c99d5240fbf3f878c" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE</name>
        <param></param>
        <initializer>SET_BIT(EXTI-&gt;RTSR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>PVD EXTI line configuration: set rising edge trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="243" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga1ca8fd7f3286a176f6be540c75a004c6" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE</name>
        <param></param>
        <initializer>CLEAR_BIT(EXTI-&gt;RTSR, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>Disable the PVD Extended Interrupt Rising Trigger. This parameter can be: </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="250" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga638033d236eb78c1e5ecb9b49c4e7f36" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_ENABLE_RISING_FALLING_EDGE</name>
        <param></param>
        <initializer><ref refid="group___p_w_r___exported___macros_1ga7bef3f30c9fe267c99d5240fbf3f878c" kindref="member">__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE</ref>();<ref refid="group___p_w_r___exported___macros_1ga5b971478563a00e1ee1a9d8ca8054e08" kindref="member">__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE</ref>();</initializer>
        <briefdescription>
<para>PVD EXTI line configuration: set rising &amp; falling edge trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="256" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga3f66c9c0c214cd08c24674904dcdc4e0" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_DISABLE_RISING_FALLING_EDGE</name>
        <param></param>
        <initializer><ref refid="group___p_w_r___exported___macros_1ga1ca8fd7f3286a176f6be540c75a004c6" kindref="member">__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE</ref>();<ref refid="group___p_w_r___exported___macros_1ga1ca57168205f8cd8d1014e6eb9465f2d" kindref="member">__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE</ref>();</initializer>
        <briefdescription>
<para>Disable the PVD Extended Interrupt Rising &amp; Falling Trigger. This parameter can be: </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="263" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1ga5e66fa75359b51066e0731ac1e5ae438" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_GET_FLAG</name>
        <param></param>
        <initializer>(EXTI-&gt;PR &amp; (<ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>))</initializer>
        <briefdescription>
<para>Check whether the specified PVD EXTI interrupt flag is set or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>EXTI</parametername>
</parameternamelist>
<parameterdescription>
<para>PVD Line Status. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="271" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1gac0fb2218bc050f5d8fdb1a3f28590352" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_CLEAR_FLAG</name>
        <param></param>
        <initializer>(EXTI-&gt;PR = (<ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>))</initializer>
        <briefdescription>
<para>Clear the PVD EXTI flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="277" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___exported___macros_1gaba4a7968f5c4c4ca6a7047b147ba18d4" prot="public" static="no">
        <name>__HAL_PWR_PVD_EXTI_GENERATE_SWIT</name>
        <param></param>
        <initializer>SET_BIT(EXTI-&gt;SWIER, <ref refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" kindref="member">PWR_EXTI_LINE_PVD</ref>)</initializer>
        <briefdescription>
<para>Generate a Software interrupt on selected EXTI line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="283" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___private___macros_1gabac4485a57abc97aad91eaa0b65ae927" prot="public" static="no">
        <name>IS_PWR_PVD_LEVEL</name>
        <param><defname>LEVEL</defname></param>
        <initializer>                                 (((LEVEL) == PWR_PVDLEVEL_0) || ((LEVEL) == PWR_PVDLEVEL_1)|| \
                                 ((LEVEL) == PWR_PVDLEVEL_2) || ((LEVEL) == PWR_PVDLEVEL_3)|| \
                                 ((LEVEL) == PWR_PVDLEVEL_4) || ((LEVEL) == PWR_PVDLEVEL_5)|| \
                                 ((LEVEL) == PWR_PVDLEVEL_6) || ((LEVEL) == PWR_PVDLEVEL_7))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="292" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___private___macros_1ga8edfbbba20e58a9281408c23dc6ff7ef" prot="public" static="no">
        <name>IS_PWR_PVD_MODE</name>
        <param><defname>MODE</defname></param>
        <initializer>                              (((MODE) == <ref refid="group___p_w_r___p_v_d___mode_1ga102d7b8354419990a2a780f61cd020a6" kindref="member">PWR_PVD_MODE_IT_RISING</ref>)|| ((MODE) == <ref refid="group___p_w_r___p_v_d___mode_1gab600a54f3a588de836cfe4b727ab8a53" kindref="member">PWR_PVD_MODE_IT_FALLING</ref>) || \
                              ((MODE) == <ref refid="group___p_w_r___p_v_d___mode_1gac531fbf14457e6595505354fad521b67" kindref="member">PWR_PVD_MODE_IT_RISING_FALLING</ref>) || ((MODE) == <ref refid="group___p_w_r___p_v_d___mode_1ga1a946b01887aa886de329a92c3ab0dd4" kindref="member">PWR_PVD_MODE_EVENT_RISING</ref>) || \
                              ((MODE) == <ref refid="group___p_w_r___p_v_d___mode_1gaaedbe45f1a1ea6c30af6ac51abae0cae" kindref="member">PWR_PVD_MODE_EVENT_FALLING</ref>) || ((MODE) == <ref refid="group___p_w_r___p_v_d___mode_1ga7455387c8e9049f9f66b46423d4f4091" kindref="member">PWR_PVD_MODE_EVENT_RISING_FALLING</ref>) || \
                              ((MODE) == <ref refid="group___p_w_r___p_v_d___mode_1ga3a4bf701a36a14a4edf4dc5a28153277" kindref="member">PWR_PVD_MODE_NORMAL</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="298" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___private___macros_1gac6fcc59d6ff95b8feda1b228517f9c3f" prot="public" static="no">
        <name>IS_PWR_WAKEUP_PIN</name>
        <param><defname>PIN</defname></param>
        <initializer>(((PIN) == PWR_WAKEUP_PIN1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="303" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___private___macros_1ga03c105070272141c0bab5f2b74469072" prot="public" static="no">
        <name>IS_PWR_REGULATOR</name>
        <param><defname>REGULATOR</defname></param>
        <initializer>                                     (((REGULATOR) == PWR_MAINREGULATOR_ON) || \
                                     ((REGULATOR) == PWR_LOWPOWERREGULATOR_ON))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="305" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___private___macros_1ga9b36a9c213a77d36340788b2e7e277ff" prot="public" static="no">
        <name>IS_PWR_SLEEP_ENTRY</name>
        <param><defname>ENTRY</defname></param>
        <initializer>(((ENTRY) == PWR_SLEEPENTRY_WFI) || ((ENTRY) == PWR_SLEEPENTRY_WFE))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="308" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_w_r___private___macros_1ga4a94eb1f400dec6e486fbc229cbea8a0" prot="public" static="no">
        <name>IS_PWR_STOP_ENTRY</name>
        <param><defname>ENTRY</defname></param>
        <initializer>(((ENTRY) == PWR_STOPENTRY_WFI) || ((ENTRY) == PWR_STOPENTRY_WFE))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="310" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_w_r___exported___functions___group1_1ga7edb99b94a46448c34f0301b0a077ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="329" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="329" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group1_1ga3d07cef39bf294db4aed7e06e5dbf9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnableBkUpAccess</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_EnableBkUpAccess</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="330" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="330" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group1_1ga1513de5f2e4b72e094fb04bab786fec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_DisableBkUpAccess</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_DisableBkUpAccess</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="331" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="331" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga87e59191de350b0942847624ddbe6d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_ConfigPVD</definition>
        <argsstring>(PWR_PVDTypeDef *sConfigPVD)</argsstring>
        <name>HAL_PWR_ConfigPVD</name>
        <param>
          <type><ref refid="struct_p_w_r___p_v_d_type_def" kindref="compound">PWR_PVDTypeDef</ref> *</type>
          <declname>sConfigPVD</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="342" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="342" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga729c254eac1847073d8a55621384107d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnablePVD</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_EnablePVD</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="344" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="344" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga3a843cc2fd1a1bb02c7f2dfa355bf9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_DisablePVD</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_DisablePVD</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="345" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="345" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1gaa76f42833a89110293f687b034164916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnableWakeUpPin</definition>
        <argsstring>(uint32_t WakeUpPinx)</argsstring>
        <name>HAL_PWR_EnableWakeUpPin</name>
        <param>
          <type>uint32_t</type>
          <declname>WakeUpPinx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="348" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="348" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1gab12ca816929e23e36f5ed8f4ccdb1472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_DisableWakeUpPin</definition>
        <argsstring>(uint32_t WakeUpPinx)</argsstring>
        <name>HAL_PWR_DisableWakeUpPin</name>
        <param>
          <type>uint32_t</type>
          <declname>WakeUpPinx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="349" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="349" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1gacfca5f1062274423e08317c0a5a225fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnterSTOPMode</definition>
        <argsstring>(uint32_t Regulator, uint8_t STOPEntry)</argsstring>
        <name>HAL_PWR_EnterSTOPMode</name>
        <param>
          <type>uint32_t</type>
          <declname>Regulator</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>STOPEntry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="352" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="352" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga5c84f4e046525c22d233c8a3443fab5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnterSLEEPMode</definition>
        <argsstring>(uint32_t Regulator, uint8_t SLEEPEntry)</argsstring>
        <name>HAL_PWR_EnterSLEEPMode</name>
        <param>
          <type>uint32_t</type>
          <declname>Regulator</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>SLEEPEntry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="353" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="353" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga40736f74c169077fcd08f34470559aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnterSTANDBYMode</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_EnterSTANDBYMode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="354" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="354" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga85d0154c96068b286072a64fca4c7e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnableSleepOnExit</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_EnableSleepOnExit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="356" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="356" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga1da299e8186a3e08a694865bd41c3bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_DisableSleepOnExit</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_DisableSleepOnExit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="357" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="357" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga6f33b1c8c8cc85129c68ac302a281033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_EnableSEVOnPend</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_EnableSEVOnPend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="358" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="358" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1ga7811014def9b864dd490a63ada4bab68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_DisableSEVOnPend</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_DisableSEVOnPend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="359" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="359" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1gae3403237bde597d72b32f0434932a047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_PVD_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_PVD_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="363" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="363" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___p_w_r___exported___functions___group2_1gaa4843b3eb7989f5b95e1218af4086940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PWR_PVDCallback</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PWR_PVDCallback</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" line="364" column="6" declfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h" declline="364" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header file of PWR HAL module. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team</para>
</simplesect>
<simplesect kind="attention"><para></para>
</simplesect>
<heading level="2"><center><copy/> Copyright (c) 2016 STMicroelectronics. All rights reserved.</center></heading>
</para>
<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32F1xx_HAL_PWR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32F1xx_HAL_PWR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f1xx__hal__def_8h" kindref="compound">stm32f1xx_hal_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>types<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="struct_p_w_r___p_v_d_type_def" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50" refid="struct_p_w_r___p_v_d_type_def_1abf0db5c2b84ba24ffeedab5cf06bad31" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_p_w_r___p_v_d_type_def_1abf0db5c2b84ba24ffeedab5cf06bad31" kindref="member">PVDLevel</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="struct_p_w_r___p_v_d_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_p_w_r___p_v_d_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<ref refid="struct_p_w_r___p_v_d_type_def" kindref="compound">PWR_PVDTypeDef</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>constants<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_EXTI_LINE_PVD<sp/><sp/>((uint32_t)0x00010000)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>constants<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVDLEVEL_7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_PLS_2V9<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="group___p_w_r___p_v_d___mode_1ga3a4bf701a36a14a4edf4dc5a28153277" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVD_MODE_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000000U<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group___p_w_r___p_v_d___mode_1ga102d7b8354419990a2a780f61cd020a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVD_MODE_IT_RISING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010001U<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group___p_w_r___p_v_d___mode_1gab600a54f3a588de836cfe4b727ab8a53" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVD_MODE_IT_FALLING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00010002U<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group___p_w_r___p_v_d___mode_1gac531fbf14457e6595505354fad521b67" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVD_MODE_IT_RISING_FALLING<sp/><sp/><sp/><sp/><sp/><sp/>0x00010003U<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="group___p_w_r___p_v_d___mode_1ga1a946b01887aa886de329a92c3ab0dd4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVD_MODE_EVENT_RISING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020001U<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group___p_w_r___p_v_d___mode_1gaaedbe45f1a1ea6c30af6ac51abae0cae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVD_MODE_EVENT_FALLING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00020002U<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="group___p_w_r___p_v_d___mode_1ga7455387c8e9049f9f66b46423d4f4091" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_PVD_MODE_EVENT_RISING_FALLING<sp/><sp/><sp/>0x00020003U<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_WAKEUP_PIN1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CSR_EWUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_MAINREGULATOR_ON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000000U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_LOWPOWERREGULATOR_ON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CR_LPDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_SLEEPENTRY_WFI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_SLEEPENTRY_WFE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_STOPENTRY_WFI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_STOPENTRY_WFE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_FLAG_WU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CSR_WUF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_FLAG_SB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CSR_SBF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWR_FLAG_PVDO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PWR_CSR_PVDO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>macro<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="group___p_w_r___exported___macros_1ga2977135bbea35b786805eea640d1c884" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_GET_FLAG(__FLAG__)<sp/>((PWR-&gt;CSR<sp/>&amp;<sp/>(__FLAG__))<sp/>==<sp/>(__FLAG__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group___p_w_r___exported___macros_1ga96f24bf4b16c9f944cd829100bf746e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_CLEAR_FLAG(__FLAG__)<sp/>SET_BIT(PWR-&gt;CR,<sp/>((__FLAG__)<sp/>&lt;&lt;<sp/>2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group___p_w_r___exported___macros_1ga3180f039cf14ef78a64089f387f8f9c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_ENABLE_IT()<sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(EXTI-&gt;IMR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="group___p_w_r___exported___macros_1gad240d7bf8f15191b068497b9aead1f1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_DISABLE_IT()<sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(EXTI-&gt;IMR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group___p_w_r___exported___macros_1gae5ba5672fe8cb7c1686c7f2cc211b128" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_ENABLE_EVENT()<sp/><sp/><sp/>SET_BIT(EXTI-&gt;EMR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="group___p_w_r___exported___macros_1ga8bd379e960497722450c7cea474a7e7a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_DISABLE_EVENT()<sp/><sp/>CLEAR_BIT(EXTI-&gt;EMR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="group___p_w_r___exported___macros_1ga5b971478563a00e1ee1a9d8ca8054e08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE()<sp/><sp/>SET_BIT(EXTI-&gt;FTSR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group___p_w_r___exported___macros_1ga1ca57168205f8cd8d1014e6eb9465f2d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE()<sp/><sp/>CLEAR_BIT(EXTI-&gt;FTSR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="group___p_w_r___exported___macros_1ga7bef3f30c9fe267c99d5240fbf3f878c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE()<sp/><sp/><sp/>SET_BIT(EXTI-&gt;RTSR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group___p_w_r___exported___macros_1ga1ca8fd7f3286a176f6be540c75a004c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE()<sp/><sp/>CLEAR_BIT(EXTI-&gt;RTSR,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="group___p_w_r___exported___macros_1ga638033d236eb78c1e5ecb9b49c4e7f36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_ENABLE_RISING_FALLING_EDGE()<sp/><sp/><sp/>__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="group___p_w_r___exported___macros_1ga3f66c9c0c214cd08c24674904dcdc4e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_DISABLE_RISING_FALLING_EDGE()<sp/><sp/>__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="group___p_w_r___exported___macros_1ga5e66fa75359b51066e0731ac1e5ae438" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_GET_FLAG()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EXTI-&gt;PR<sp/>&amp;<sp/>(PWR_EXTI_LINE_PVD))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="group___p_w_r___exported___macros_1gac0fb2218bc050f5d8fdb1a3f28590352" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_CLEAR_FLAG()<sp/><sp/><sp/><sp/><sp/>(EXTI-&gt;PR<sp/>=<sp/>(PWR_EXTI_LINE_PVD))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group___p_w_r___exported___macros_1gaba4a7968f5c4c4ca6a7047b147ba18d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__HAL_PWR_PVD_EXTI_GENERATE_SWIT()<sp/><sp/>SET_BIT(EXTI-&gt;SWIER,<sp/>PWR_EXTI_LINE_PVD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macro<sp/>-------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_PVD_LEVEL(LEVEL)<sp/>(((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_0)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_1)||<sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_2)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_3)||<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_4)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_5)||<sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_6)<sp/>||<sp/>((LEVEL)<sp/>==<sp/>PWR_PVDLEVEL_7))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_PVD_MODE(MODE)<sp/>(((MODE)<sp/>==<sp/>PWR_PVD_MODE_IT_RISING)||<sp/>((MODE)<sp/>==<sp/>PWR_PVD_MODE_IT_FALLING)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>PWR_PVD_MODE_IT_RISING_FALLING)<sp/>||<sp/>((MODE)<sp/>==<sp/>PWR_PVD_MODE_EVENT_RISING)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>PWR_PVD_MODE_EVENT_FALLING)<sp/>||<sp/>((MODE)<sp/>==<sp/>PWR_PVD_MODE_EVENT_RISING_FALLING)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((MODE)<sp/>==<sp/>PWR_PVD_MODE_NORMAL))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_WAKEUP_PIN(PIN)<sp/>(((PIN)<sp/>==<sp/>PWR_WAKEUP_PIN1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_REGULATOR(REGULATOR)<sp/>(((REGULATOR)<sp/>==<sp/>PWR_MAINREGULATOR_ON)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((REGULATOR)<sp/>==<sp/>PWR_LOWPOWERREGULATOR_ON))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_SLEEP_ENTRY(ENTRY)<sp/>(((ENTRY)<sp/>==<sp/>PWR_SLEEPENTRY_WFI)<sp/>||<sp/>((ENTRY)<sp/>==<sp/>PWR_SLEEPENTRY_WFE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PWR_STOP_ENTRY(ENTRY)<sp/>(((ENTRY)<sp/>==<sp/>PWR_STOPENTRY_WFI)<sp/>||<sp/>((ENTRY)<sp/>==<sp/>PWR_STOPENTRY_WFE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialization<sp/>and<sp/>de-initialization<sp/>functions<sp/>*******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_DeInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnableBkUpAccess(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_DisableBkUpAccess(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Peripheral<sp/>Control<sp/>functions<sp/><sp/>************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_ConfigPVD(<ref refid="struct_p_w_r___p_v_d_type_def" kindref="compound">PWR_PVDTypeDef</ref><sp/>*sConfigPVD);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>HAL_PWR_ConfigPVD<sp/>12*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnablePVD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_DisablePVD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WakeUp<sp/>pins<sp/>configuration<sp/>functions<sp/>****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnableWakeUpPin(uint32_t<sp/>WakeUpPinx);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_DisableWakeUpPin(uint32_t<sp/>WakeUpPinx);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Low<sp/>Power<sp/>modes<sp/>configuration<sp/>functions<sp/>************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnterSTOPMode(uint32_t<sp/>Regulator,<sp/>uint8_t<sp/>STOPEntry);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnterSLEEPMode(uint32_t<sp/>Regulator,<sp/>uint8_t<sp/>SLEEPEntry);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnterSTANDBYMode(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnableSleepOnExit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_DisableSleepOnExit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_EnableSEVOnPend(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_DisableSEVOnPend(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_PVD_IRQHandler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_PWR_PVDCallback(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32F1xx_HAL_PWR_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">/************************<sp/>(C)<sp/>COPYRIGHT<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h"/>
  </compounddef>
</doxygen>
