<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group___r_c_c___flags___interrupts___management" kind="group">
    <compoundname>RCC_Flags_Interrupts_Management</compoundname>
    <title>Flags Interrupts Management</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___r_c_c___flags___interrupts___management_1ga180fb20a37b31a6e4f7e59213a6c0405" prot="public" static="no">
        <name>__HAL_RCC_ENABLE_IT</name>
        <param><defname>__INTERRUPT__</defname></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint8_t *) RCC_CIR_BYTE1_ADDRESS |= (__INTERRUPT__))</initializer>
        <briefdescription>
<para>Enable RCC interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RCC interrupt sources to be enabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94" kindref="member">RCC_IT_LSIRDY</ref> LSI ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d" kindref="member">RCC_IT_LSERDY</ref> LSE ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f" kindref="member">RCC_IT_HSIRDY</ref> HSI ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866" kindref="member">RCC_IT_HSERDY</ref> HSE ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9" kindref="member">RCC_IT_PLLRDY</ref> main PLL ready interrupt </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1043" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___flags___interrupts___management_1gafc4df8cd4df0a529d11f18bf1f7e9f50" prot="public" static="no">
        <name>__HAL_RCC_DISABLE_IT</name>
        <param><defname>__INTERRUPT__</defname></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint8_t *) RCC_CIR_BYTE1_ADDRESS &amp;= (uint8_t)(~(__INTERRUPT__)))</initializer>
        <briefdescription>
<para>Disable RCC interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RCC interrupt sources to be disabled. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94" kindref="member">RCC_IT_LSIRDY</ref> LSI ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d" kindref="member">RCC_IT_LSERDY</ref> LSE ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f" kindref="member">RCC_IT_HSIRDY</ref> HSI ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866" kindref="member">RCC_IT_HSERDY</ref> HSE ready interrupt </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9" kindref="member">RCC_IT_PLLRDY</ref> main PLL ready interrupt </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1061" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1061" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___flags___interrupts___management_1ga9d8ab157f58045b8daf8136bee54f139" prot="public" static="no">
        <name>__HAL_RCC_CLEAR_IT</name>
        <param><defname>__INTERRUPT__</defname></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint8_t *) RCC_CIR_BYTE2_ADDRESS = (__INTERRUPT__))</initializer>
        <briefdescription>
<para>Clear the RCC&apos;s interrupt pending bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the interrupt pending bit to clear. This parameter can be any combination of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94" kindref="member">RCC_IT_LSIRDY</ref> LSI ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d" kindref="member">RCC_IT_LSERDY</ref> LSE ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f" kindref="member">RCC_IT_HSIRDY</ref> HSI ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866" kindref="member">RCC_IT_HSERDY</ref> HSE ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9" kindref="member">RCC_IT_PLLRDY</ref> Main PLL ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga9bb34a4912d2084dc1c0834eb53aa7a3" kindref="member">RCC_IT_CSS</ref> Clock Security System interrupt </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1080" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___flags___interrupts___management_1ga134af980b892f362c05ae21922cd828d" prot="public" static="no">
        <name>__HAL_RCC_GET_IT</name>
        <param><defname>__INTERRUPT__</defname></param>
        <initializer>((RCC-&gt;CIR &amp; (__INTERRUPT__)) == (__INTERRUPT__))</initializer>
        <briefdescription>
<para>Check the RCC&apos;s interrupt has occurred or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;INTERRUPT&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the RCC interrupt source to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga2b4ef277c1b71f96e0bef4b9a72fca94" kindref="member">RCC_IT_LSIRDY</ref> LSI ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad6b6e78a426850f595ef180d292a673d" kindref="member">RCC_IT_LSERDY</ref> LSE ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga69637e51b71f73f519c8c0a0613d042f" kindref="member">RCC_IT_HSIRDY</ref> HSI ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1gad13eaede352bca59611e6cae68665866" kindref="member">RCC_IT_HSERDY</ref> HSE ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga68d48e7811fb58f2649dce6cf0d823d9" kindref="member">RCC_IT_PLLRDY</ref> Main PLL ready interrupt. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___interrupt_1ga9bb34a4912d2084dc1c0834eb53aa7a3" kindref="member">RCC_IT_CSS</ref> Clock Security System interrupt </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of <bold>INTERRUPT</bold> (TRUE or FALSE). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1100" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___flags___interrupts___management_1gaf28c11b36035ef1e27883ff7ee2c46b0" prot="public" static="no">
        <name>__HAL_RCC_CLEAR_RESET_FLAGS</name>
        <param></param>
        <initializer>(*(<ref refid="core__sc300_8h_1aec43007d9998a0a0e01faede4133d6be" kindref="member">__IO</ref> uint32_t *)RCC_CSR_RMVF_BB = ENABLE)</initializer>
        <briefdescription>
<para>Set RMVF bit to clear the reset flags. The reset flags are RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1106" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___flags___interrupts___management_1gae2d7d461630562bf2a2ddb31b1f96449" prot="public" static="no">
        <name>__HAL_RCC_GET_FLAG</name>
        <param><defname>__FLAG__</defname></param>
        <initializer>                                      (((((__FLAG__) &gt;&gt; 5U) == CR_REG_INDEX)?   RCC-&gt;CR   : \
                                      ((((__FLAG__) &gt;&gt; 5U) == BDCR_REG_INDEX)? RCC-&gt;BDCR : \
                                                                              RCC-&gt;CSR)) &amp; (1U &lt;&lt; ((__FLAG__) &amp; RCC_FLAG_MASK)))</initializer>
        <briefdescription>
<para>Check RCC flag is set or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;FLAG&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flag to check. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___flag_1ga827d986723e7ce652fa733bb8184d216" kindref="member">RCC_FLAG_HSIRDY</ref> HSI oscillator clock ready. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1ga173edf47bec93cf269a0e8d0fec9997c" kindref="member">RCC_FLAG_HSERDY</ref> HSE oscillator clock ready. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1gaf82d8afb18d9df75db1d6c08b9c50046" kindref="member">RCC_FLAG_PLLRDY</ref> Main PLL clock ready. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1gac9fb963db446c16e46a18908f7fe1927" kindref="member">RCC_FLAG_LSERDY</ref> LSE oscillator clock ready. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1ga8c5e4992314d347597621bfe7ab10d72" kindref="member">RCC_FLAG_LSIRDY</ref> LSI oscillator clock ready. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1gabfc3ab5d4a8a94ec1c9f38794ce37ad6" kindref="member">RCC_FLAG_PINRST</ref> Pin reset. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1ga39ad309070f416720207eece5da7dc2c" kindref="member">RCC_FLAG_PORRST</ref> POR/PDR reset. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1gaf7852615e9b19f0b2dbc8d08c7594b52" kindref="member">RCC_FLAG_SFTRST</ref> Software reset. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1gaac46bac8a97cf16635ff7ffc1e6c657f" kindref="member">RCC_FLAG_IWDGRST</ref> Independent Watchdog reset. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1gaa80b60b2d497ccd7b7de1075009999a7" kindref="member">RCC_FLAG_WWDGRST</ref> Window Watchdog reset. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___flag_1ga67049531354aed7546971163d02c9920" kindref="member">RCC_FLAG_LPWRRST</ref> Low Power reset. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of <bold>FLAG</bold> (TRUE or FALSE). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" line="1131" column="9" bodyfile="Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h" bodystart="1131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>macros to manage the specified RCC Flags and interrupts. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
