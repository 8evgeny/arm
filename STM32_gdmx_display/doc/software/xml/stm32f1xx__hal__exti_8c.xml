<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stm32f1xx__hal__exti_8c" kind="file" language="C++">
    <compoundname>stm32f1xx_hal_exti.c</compoundname>
    <includes refid="stm32f1xx__hal_8h" local="yes">stm32f1xx_hal.h</includes>
    <incdepgraph>
      <node id="15">
        <label>stm32f1xx_hal_flash.h</label>
        <link refid="stm32f1xx__hal__flash_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stm32f1xx_hal_tim_ex.h</label>
        <link refid="stm32f1xx__hal__tim__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32f1xx_hal_pcd.h</label>
        <link refid="stm32f1xx__hal__pcd_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32f1xx_hal_cortex.h</label>
        <link refid="stm32f1xx__hal__cortex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32f1xx_ll_usb.h</label>
        <link refid="stm32f1xx__ll__usb_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stm32f1xx_hal.h</label>
        <link refid="stm32f1xx__hal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="17">
        <label>stm32f1xx_hal_pwr.h</label>
        <link refid="stm32f1xx__hal__pwr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32f1xx_hal_rcc.h</label>
        <link refid="stm32f1xx__hal__rcc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stm32f1xx_hal_dma_ex.h</label>
        <link refid="stm32f1xx__hal__dma__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32f1xx.h</label>
        <link refid="stm32f1xx_8h"/>
      </node>
      <node id="16">
        <label>stm32f1xx_hal_flash_ex.h</label>
        <link refid="stm32f1xx__hal__flash__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32f1xx_hal_dma.h</label>
        <link refid="stm32f1xx__hal__dma_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stm32f1xx_hal_tim.h</label>
        <link refid="stm32f1xx__hal__tim_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stm32f1xx_hal_rcc_ex.h</label>
        <link refid="stm32f1xx__hal__rcc__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stm32f1xx_hal_conf.h</label>
        <link refid="stm32f1xx__hal__conf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stm32f1xx_hal_gpio.h</label>
        <link refid="stm32f1xx__hal__gpio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_exti.c</label>
        <link refid="stm32f1xx__hal__exti_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stm32f1xx_hal_gpio_ex.h</label>
        <link refid="stm32f1xx__hal__gpio__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stm32f1xx_hal_def.h</label>
        <link refid="stm32f1xx__hal__def_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stm32f1xx_hal_exti.h</label>
        <link refid="stm32f1xx__hal__exti_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para>EXTI HAL module driver. This file provides firmware functions to manage the following functionalities of the Extended Interrupts and events controller (EXTI) peripheral: </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team<itemizedlist>
<listitem><para>Initialization and de-initialization functions</para>
</listitem><listitem><para>IO operation functions</para>
</listitem></itemizedlist>
</para>
</simplesect>
<verbatim>==============================================================================
                  ##### EXTI Peripheral features #####
==============================================================================
[..]
  (+) Each Exti line can be configured within this driver.

  (+) Exti line can be configured in 3 different modes
      (++) Interrupt
      (++) Event
      (++) Both of them

  (+) Configurable Exti lines can be configured with 3 different triggers
      (++) Rising
      (++) Falling
      (++) Both of them

  (+) When set in interrupt mode, configurable Exti lines have two different
      interrupts pending registers which allow to distinguish which transition
      occurs:
      (++) Rising edge pending interrupt
      (++) Falling

  (+) Exti lines 0 to 15 are linked to gpio pin number 0 to 15. Gpio port can
      be selected through multiplexer.

                   ##### How to use this driver #####
==============================================================================
[..]

  (#) Configure the EXTI line using HAL_EXTI_SetConfigLine().
      (++) Choose the interrupt line number by setting &quot;Line&quot; member from
           EXTI_ConfigTypeDef structure.
      (++) Configure the interrupt and/or event mode using &quot;Mode&quot; member from
           EXTI_ConfigTypeDef structure.
      (++) For configurable lines, configure rising and/or falling trigger
           &quot;Trigger&quot; member from EXTI_ConfigTypeDef structure.
      (++) For Exti lines linked to gpio, choose gpio port using &quot;GPIOSel&quot;
           member from GPIO_InitTypeDef structure.

  (#) Get current Exti configuration of a dedicated line using
      HAL_EXTI_GetConfigLine().
      (++) Provide exiting handle as parameter.
      (++) Provide pointer on EXTI_ConfigTypeDef structure as second parameter.

  (#) Clear Exti configuration of a dedicated line using HAL_EXTI_GetConfigLine().
      (++) Provide exiting handle as parameter.

  (#) Register callback to treat Exti interrupts using HAL_EXTI_RegisterCallback().
      (++) Provide exiting handle as first parameter.
      (++) Provide which callback will be registered using one value from
           EXTI_CallbackIDTypeDef.
      (++) Provide callback function pointer.

  (#) Get interrupt pending bit using HAL_EXTI_GetPending().

  (#) Clear interrupt pending bit using HAL_EXTI_GetPending().

  (#) Generate software interrupt using HAL_EXTI_GenerateSWI().</verbatim></para>
<para><simplesect kind="attention"><para></para>
</simplesect>
<heading level="2"><center><copy/> Copyright (c) 2019 STMicroelectronics. All rights reserved.</center></heading>
</para>
<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32f1xx__hal_8h" kindref="compound">stm32f1xx_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAL_EXTI_MODULE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>typedef<sp/>-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>defines<sp/>-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macros<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>---------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_EXTI_SetConfigLine(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti,<sp/><ref refid="struct_e_x_t_i___config_type_def" kindref="compound">EXTI_ConfigTypeDef</ref><sp/>*pExtiConfig)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>uint32_t<sp/>regval;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>uint32_t<sp/>linepos;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maskline;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>null<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hexti<sp/>==<sp/>NULL)<sp/>||<sp/>(pExtiConfig<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_LINE(pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_MODE(pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref>));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>line<sp/>number<sp/>to<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>=<sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>line<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>linepos<sp/>=<sp/>(pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/><ref refid="group___e_x_t_i___private___constants_1ga755405defae45017e19a17fd0279869c" kindref="member">EXTI_PIN_MASK</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>maskline<sp/>=<sp/>(1uL<sp/>&lt;&lt;<sp/>linepos);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>triggers<sp/>for<sp/>configurable<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/>EXTI_CONFIG)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_TRIGGER(pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a73dd50a4d440463bf9e1cb02b72ac706" kindref="member">Trigger</ref>));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>rising<sp/>trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mask<sp/>or<sp/>set<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a73dd50a4d440463bf9e1cb02b72ac706" kindref="member">Trigger</ref><sp/>&amp;<sp/>EXTI_TRIGGER_RISING)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXTI-&gt;RTSR<sp/>|=<sp/>maskline;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXTI-&gt;RTSR<sp/>&amp;=<sp/>~maskline;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>falling<sp/>trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mask<sp/>or<sp/>set<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a73dd50a4d440463bf9e1cb02b72ac706" kindref="member">Trigger</ref><sp/>&amp;<sp/>EXTI_TRIGGER_FALLING)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXTI-&gt;FTSR<sp/>|=<sp/>maskline;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXTI-&gt;FTSR<sp/>&amp;=<sp/>~maskline;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>gpio<sp/>port<sp/>selection<sp/>in<sp/>case<sp/>of<sp/>gpio<sp/>exti<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/>EXTI_GPIO)<sp/>==<sp/>EXTI_GPIO)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_GPIO_PORT(pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1ac9316e39886afa2fee1ff41a6e34c379" kindref="member">GPIOSel</ref>));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_GPIO_PIN(linepos));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regval<sp/>=<sp/>AFIO-&gt;EXTICR[linepos<sp/>&gt;&gt;<sp/>2u];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regval<sp/>&amp;=<sp/>~(<ref refid="group___peripheral___registers___bits___definition_1ga4a76d7ae8d4926338a6be22ef31b311d" kindref="member">AFIO_EXTICR1_EXTI0</ref><sp/>&lt;&lt;<sp/>(AFIO_EXTICR1_EXTI1_Pos<sp/>*<sp/>(linepos<sp/>&amp;<sp/>0x03u)));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regval<sp/>|=<sp/>(pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1ac9316e39886afa2fee1ff41a6e34c379" kindref="member">GPIOSel</ref><sp/>&lt;&lt;<sp/>(AFIO_EXTICR1_EXTI1_Pos<sp/>*<sp/>(linepos<sp/>&amp;<sp/>0x03u)));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AFIO-&gt;EXTICR[linepos<sp/>&gt;&gt;<sp/>2u]<sp/>=<sp/>regval;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>interrupt<sp/>mode<sp/>:<sp/>read<sp/>current<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mask<sp/>or<sp/>set<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref><sp/>&amp;<sp/>EXTI_MODE_INTERRUPT)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;IMR<sp/>|=<sp/>maskline;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;IMR<sp/>&amp;=<sp/>~maskline;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>event<sp/>mode<sp/>:<sp/>read<sp/>current<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mask<sp/>or<sp/>set<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref><sp/>&amp;<sp/>EXTI_MODE_EVENT)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;EMR<sp/>|=<sp/>maskline;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;EMR<sp/>&amp;=<sp/>~maskline;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_EXTI_GetConfigLine(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti,<sp/><ref refid="struct_e_x_t_i___config_type_def" kindref="compound">EXTI_ConfigTypeDef</ref><sp/>*pExtiConfig)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>uint32_t<sp/>regval;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>uint32_t<sp/>linepos;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maskline;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>null<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hexti<sp/>==<sp/>NULL)<sp/>||<sp/>(pExtiConfig<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>handle<sp/>line<sp/>number<sp/>to<sp/>configuration<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>=<sp/>hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>line<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>linepos<sp/>=<sp/>(pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/><ref refid="group___e_x_t_i___private___constants_1ga755405defae45017e19a17fd0279869c" kindref="member">EXTI_PIN_MASK</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>maskline<sp/>=<sp/>(1uL<sp/>&lt;&lt;<sp/>linepos);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1]<sp/>Get<sp/>core<sp/>mode<sp/>:<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>selected<sp/>line<sp/>is<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((EXTI-&gt;IMR<sp/>&amp;<sp/>maskline)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref><sp/>=<sp/>EXTI_MODE_INTERRUPT;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref><sp/>=<sp/>EXTI_MODE_NONE;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>event<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>selected<sp/>line<sp/>is<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((EXTI-&gt;EMR<sp/>&amp;<sp/>maskline)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref><sp/>|=<sp/>EXTI_MODE_EVENT;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>2]<sp/>Get<sp/>trigger<sp/>for<sp/>configurable<sp/>lines<sp/>:<sp/>rising<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/>EXTI_CONFIG)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>configuration<sp/>of<sp/>selected<sp/>line<sp/>is<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((EXTI-&gt;RTSR<sp/>&amp;<sp/>maskline)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a73dd50a4d440463bf9e1cb02b72ac706" kindref="member">Trigger</ref><sp/>=<sp/>EXTI_TRIGGER_RISING;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a73dd50a4d440463bf9e1cb02b72ac706" kindref="member">Trigger</ref><sp/>=<sp/>EXTI_TRIGGER_NONE;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>falling<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>configuration<sp/>of<sp/>selected<sp/>line<sp/>is<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((EXTI-&gt;FTSR<sp/>&amp;<sp/>maskline)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a73dd50a4d440463bf9e1cb02b72ac706" kindref="member">Trigger</ref><sp/>|=<sp/>EXTI_TRIGGER_FALLING;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Gpio<sp/>port<sp/>selection<sp/>for<sp/>gpio<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/>EXTI_GPIO)<sp/>==<sp/>EXTI_GPIO)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_GPIO_PIN(linepos));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regval<sp/>=<sp/>AFIO-&gt;EXTICR[linepos<sp/>&gt;&gt;<sp/>2u];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1ac9316e39886afa2fee1ff41a6e34c379" kindref="member">GPIOSel</ref><sp/>=<sp/>((regval<sp/>&lt;&lt;<sp/>(AFIO_EXTICR1_EXTI1_Pos<sp/>*<sp/>(3uL<sp/>-<sp/>(linepos<sp/>&amp;<sp/>0x03u))))<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1ac9316e39886afa2fee1ff41a6e34c379" kindref="member">GPIOSel</ref><sp/>=<sp/>0x00u;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>Trigger<sp/>selected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1a73dd50a4d440463bf9e1cb02b72ac706" kindref="member">Trigger</ref><sp/>=<sp/>EXTI_TRIGGER_NONE;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>pExtiConfig-&gt;<ref refid="struct_e_x_t_i___config_type_def_1ac9316e39886afa2fee1ff41a6e34c379" kindref="member">GPIOSel</ref><sp/>=<sp/>0x00u;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_EXTI_ClearConfigLine(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>uint32_t<sp/>regval;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>uint32_t<sp/>linepos;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maskline;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>null<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexti<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>line<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>linepos<sp/>=<sp/>(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/><ref refid="group___e_x_t_i___private___constants_1ga755405defae45017e19a17fd0279869c" kindref="member">EXTI_PIN_MASK</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>maskline<sp/>=<sp/>(1uL<sp/>&lt;&lt;<sp/>linepos);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1]<sp/>Clear<sp/>interrupt<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>EXTI-&gt;IMR<sp/>=<sp/>(EXTI-&gt;IMR<sp/>&amp;<sp/>~maskline);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>2]<sp/>Clear<sp/>event<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>EXTI-&gt;EMR<sp/>=<sp/>(EXTI-&gt;EMR<sp/>&amp;<sp/>~maskline);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>3]<sp/>Clear<sp/>triggers<sp/>in<sp/>case<sp/>of<sp/>configurable<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/>EXTI_CONFIG)<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;RTSR<sp/>=<sp/>(EXTI-&gt;RTSR<sp/>&amp;<sp/>~maskline);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;FTSR<sp/>=<sp/>(EXTI-&gt;FTSR<sp/>&amp;<sp/>~maskline);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>Gpio<sp/>port<sp/>selection<sp/>for<sp/>gpio<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/>EXTI_GPIO)<sp/>==<sp/>EXTI_GPIO)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_GPIO_PIN(linepos));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regval<sp/>=<sp/>AFIO-&gt;EXTICR[linepos<sp/>&gt;&gt;<sp/>2u];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regval<sp/>&amp;=<sp/>~(<ref refid="group___peripheral___registers___bits___definition_1ga4a76d7ae8d4926338a6be22ef31b311d" kindref="member">AFIO_EXTICR1_EXTI0</ref><sp/>&lt;&lt;<sp/>(AFIO_EXTICR1_EXTI1_Pos<sp/>*<sp/>(linepos<sp/>&amp;<sp/>0x03u)));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AFIO-&gt;EXTICR[linepos<sp/>&gt;&gt;<sp/>2u]<sp/>=<sp/>regval;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_EXTI_RegisterCallback(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti,<sp/><ref refid="group___e_x_t_i___exported___types_1ga0ff36e8796a6ad3f2fc211e534c54c0e" kindref="member">EXTI_CallbackIDTypeDef</ref><sp/>CallbackID,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*pPendingCbfn)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status<sp/>=<sp/>HAL_OK;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(CallbackID)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>HAL_EXTI_COMMON_CB_ID:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1aeae0a8364e2078d0c61240a6906fdfd3" kindref="member">PendingCallback</ref><sp/>=<sp/>pPendingCbfn;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><ref refid="stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_EXTI_GetHandle(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti,<sp/>uint32_t<sp/>ExtiLine)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_LINE(ExtiLine));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>null<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexti<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>line<sp/>number<sp/>as<sp/>handle<sp/>private<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>=<sp/>ExtiLine;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_OK;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_EXTI_IRQHandler(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>uint32_t<sp/>regval;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maskline;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>line<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>maskline<sp/>=<sp/>(1uL<sp/>&lt;&lt;<sp/>(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/><ref refid="group___e_x_t_i___private___constants_1ga755405defae45017e19a17fd0279869c" kindref="member">EXTI_PIN_MASK</ref>));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>pending<sp/>bit<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>regval<sp/>=<sp/>(EXTI-&gt;PR<sp/>&amp;<sp/>maskline);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regval<sp/>!=<sp/>0x00u)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>pending<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;PR<sp/>=<sp/>maskline;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1aeae0a8364e2078d0c61240a6906fdfd3" kindref="member">PendingCallback</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1aeae0a8364e2078d0c61240a6906fdfd3" kindref="member">PendingCallback</ref>();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">uint32_t<sp/>HAL_EXTI_GetPending(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti,<sp/>uint32_t<sp/>Edge)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>uint32_t<sp/>regval;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maskline;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>uint32_t<sp/>linepos;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_CONFIG_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_PENDING_EDGE(Edge));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>line<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>linepos<sp/>=<sp/>(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/><ref refid="group___e_x_t_i___private___constants_1ga755405defae45017e19a17fd0279869c" kindref="member">EXTI_PIN_MASK</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>maskline<sp/>=<sp/>(1uL<sp/>&lt;&lt;<sp/>linepos);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>1<sp/>if<sp/>bit<sp/>is<sp/>set<sp/>else<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>regval<sp/>=<sp/>((EXTI-&gt;PR<sp/>&amp;<sp/>maskline)<sp/>&gt;&gt;<sp/>linepos);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regval;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_EXTI_ClearPending(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti,<sp/>uint32_t<sp/>Edge)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maskline;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_CONFIG_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_PENDING_EDGE(Edge));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>line<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>maskline<sp/>=<sp/>(1uL<sp/>&lt;&lt;<sp/>(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/><ref refid="group___e_x_t_i___private___constants_1ga755405defae45017e19a17fd0279869c" kindref="member">EXTI_PIN_MASK</ref>));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>Pending<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>EXTI-&gt;PR<sp/>=<sp/><sp/>maskline;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HAL_EXTI_GenerateSWI(<ref refid="struct_e_x_t_i___handle_type_def" kindref="compound">EXTI_HandleTypeDef</ref><sp/>*hexti)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>uint32_t<sp/>maskline;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="stm32f1xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(IS_EXTI_CONFIG_LINE(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref>));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>line<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>maskline<sp/>=<sp/>(1uL<sp/>&lt;&lt;<sp/>(hexti-&gt;<ref refid="struct_e_x_t_i___handle_type_def_1a9c7a78e876a7dfb279a16029f915463f" kindref="member">Line</ref><sp/>&amp;<sp/><ref refid="group___e_x_t_i___private___constants_1ga755405defae45017e19a17fd0279869c" kindref="member">EXTI_PIN_MASK</ref>));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>Software<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>EXTI-&gt;SWIER<sp/>=<sp/>maskline;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAL_EXTI_MODULE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">/************************<sp/>(C)<sp/>COPYRIGHT<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_exti.c"/>
  </compounddef>
</doxygen>
