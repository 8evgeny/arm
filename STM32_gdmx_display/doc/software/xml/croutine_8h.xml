<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="croutine_8h" kind="file" language="C++">
    <compoundname>croutine.h</compoundname>
    <includes refid="list_8h" local="yes">list.h</includes>
    <includedby refid="croutine_8c" local="yes">Middlewares/Third_Party/FreeRTOS/Source/croutine.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h</label>
        <link refid="croutine_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>list.h</label>
        <link refid="list_8h_source"/>
      </node>
    </incdepgraph>
    <innerclass refid="structcor_co_routine_control_block" prot="public">corCoRoutineControlBlock</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="croutine_8h_1a19a57a201a325e8af1207ed68c4aedde" prot="public" static="no">
        <name>crSTART</name>
        <param><defname>pxCRCB</defname></param>
        <initializer>switch( ( ( <ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref> * )( pxCRCB ) )-&gt;uxState ) { case 0:</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="204" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1ae6038cc976689b50000475ebfc4e2f23" prot="public" static="no">
        <name>crEND</name>
        <param></param>
        <initializer>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="235" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1aa8ec8c0192674b896b04df1f82d679f7" prot="public" static="no">
        <name>crSET_STATE0</name>
        <param><defname>xHandle</defname></param>
        <initializer>( ( <ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref> * )( xHandle ) )-&gt;uxState = (__LINE__ * 2); return; case (__LINE__ * 2):</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="241" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1a345ffc731dc40152bfb1162453ecc1f7" prot="public" static="no">
        <name>crSET_STATE1</name>
        <param><defname>xHandle</defname></param>
        <initializer>( ( <ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref> * )( xHandle ) )-&gt;uxState = ((__LINE__ * 2)+1); return; case ((__LINE__ * 2)+1):</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="242" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1a05a06feb11028f2d1d440ea335f562ba" prot="public" static="no">
        <name>crDELAY</name>
        <param><defname>xHandle</defname></param>
        <param><defname>xTicksToDelay</defname></param>
        <initializer>	if( ( xTicksToDelay ) &gt; 0 )															\
	{																					\
		vCoRoutineAddToDelayedList( ( xTicksToDelay ), NULL );							\
	}																					\
	crSET_STATE0( ( xHandle ) );</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="290" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1a26af3d36f22a04168eebdf5b08465d6e" prot="public" static="no">
        <name>crQUEUE_SEND</name>
        <param><defname>xHandle</defname></param>
        <param><defname>pxQueue</defname></param>
        <param><defname>pvItemToQueue</defname></param>
        <param><defname>xTicksToWait</defname></param>
        <param><defname>pxResult</defname></param>
        <initializer>{																						\
	*( pxResult ) = xQueueCRSend( ( pxQueue) , ( pvItemToQueue) , ( xTicksToWait ) );	\
	if( *( pxResult ) == errQUEUE_BLOCKED )												\
	{																					\
		crSET_STATE0( ( xHandle ) );													\
		*pxResult = xQueueCRSend( ( pxQueue ), ( pvItemToQueue ), 0 );					\
	}																					\
	if( *pxResult == errQUEUE_YIELD )													\
	{																					\
		crSET_STATE1( ( xHandle ) );													\
		*pxResult = pdPASS;																\
	}																					\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="380" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1a586d57fd9a3e2aa5ae66484ed3be36c9" prot="public" static="no">
        <name>crQUEUE_RECEIVE</name>
        <param><defname>xHandle</defname></param>
        <param><defname>pxQueue</defname></param>
        <param><defname>pvBuffer</defname></param>
        <param><defname>xTicksToWait</defname></param>
        <param><defname>pxResult</defname></param>
        <initializer>{																						\
	*( pxResult ) = xQueueCRReceive( ( pxQueue) , ( pvBuffer ), ( xTicksToWait ) );		\
	if( *( pxResult ) == errQUEUE_BLOCKED ) 											\
	{																					\
		crSET_STATE0( ( xHandle ) );													\
		*( pxResult ) = xQueueCRReceive( ( pxQueue) , ( pvBuffer ), 0 );				\
	}																					\
	if( *( pxResult ) == errQUEUE_YIELD )												\
	{																					\
		crSET_STATE1( ( xHandle ) );													\
		*( pxResult ) = pdPASS;															\
	}																					\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="472" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1ac8eb0a81c5cf69de7e4edd73ce44a3be" prot="public" static="no">
        <name>crQUEUE_SEND_FROM_ISR</name>
        <param><defname>pxQueue</defname></param>
        <param><defname>pvItemToQueue</defname></param>
        <param><defname>xCoRoutinePreviouslyWoken</defname></param>
        <initializer>xQueueCRSendFromISR( ( pxQueue ), ( pvItemToQueue ), ( xCoRoutinePreviouslyWoken ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="581" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="croutine_8h_1a9c0fa977ca69adbddb4811affa2a71f7" prot="public" static="no">
        <name>crQUEUE_RECEIVE_FROM_ISR</name>
        <param><defname>pxQueue</defname></param>
        <param><defname>pvBuffer</defname></param>
        <param><defname>pxCoRoutineWoken</defname></param>
        <initializer>xQueueCRReceiveFromISR( ( pxQueue ), ( pvBuffer ), ( pxCoRoutineWoken ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="694" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="croutine_8h_1a33b9d058688c92258155b5756d9936dd" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* CoRoutineHandle_t</definition>
        <argsstring></argsstring>
        <name>CoRoutineHandle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="44" column="15" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="croutine_8h_1a397a7505718dd366d8411ce324c49758" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* crCOROUTINE_CODE) (CoRoutineHandle_t, UBaseType_t)</definition>
        <argsstring>)(CoRoutineHandle_t, UBaseType_t)</argsstring>
        <name>crCOROUTINE_CODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="47" column="9" bodyfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="croutine_8h_1a1c15f304ffe02d0777ae2509b3658e6f" prot="public" static="no">
        <type>struct <ref refid="structcor_co_routine_control_block" kindref="compound">corCoRoutineControlBlock</ref></type>
        <definition>typedef struct corCoRoutineControlBlock CRCB_t</definition>
        <argsstring></argsstring>
        <name>CRCB_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="57" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="croutine_8h_1ae0e03637a3d2c134e9b52006f353d8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t xCoRoutineCreate</definition>
        <argsstring>(crCOROUTINE_CODE pxCoRoutineCode, UBaseType_t uxPriority, UBaseType_t uxIndex)</argsstring>
        <name>xCoRoutineCreate</name>
        <param>
          <type>crCOROUTINE_CODE</type>
          <declname>pxCoRoutineCode</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxPriority</declname>
        </param>
        <param>
          <type>UBaseType_t</type>
          <declname>uxIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="131" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" declline="131" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="croutine_8h_1a5333c649a2c063006ca3cd7a3b5b9240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vCoRoutineSchedule</definition>
        <argsstring>(void)</argsstring>
        <name>vCoRoutineSchedule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="173" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="croutine_8h_1a6b5b1c5857d38b79c96636754208e32d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vCoRoutineAddToDelayedList</definition>
        <argsstring>(TickType_t xTicksToDelay, List_t *pxEventList)</argsstring>
        <name>vCoRoutineAddToDelayedList</name>
        <param>
          <type>TickType_t</type>
          <declname>xTicksToDelay</declname>
        </param>
        <param>
          <type><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref> *</type>
          <declname>pxEventList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="705" column="6" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" declline="705" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="croutine_8h_1af2a96db518b18f5a7e1cd2fdf3c82873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BaseType_t</type>
        <definition>BaseType_t xCoRoutineRemoveFromEventList</definition>
        <argsstring>(const List_t *pxEventList)</argsstring>
        <name>xCoRoutineRemoveFromEventList</name>
        <param>
          <type>const <ref refid="structx_l_i_s_t" kindref="compound">List_t</ref> *</type>
          <declname>pxEventList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" line="714" column="12" declfile="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h" declline="714" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.0.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CO_ROUTINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CO_ROUTINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INC_FREERTOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>&quot;include<sp/>FreeRTOS.h<sp/>must<sp/>appear<sp/>in<sp/>source<sp/>files<sp/>before<sp/>include<sp/>croutine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Used<sp/>to<sp/>hide<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>co-routine<sp/>control<sp/>block.<sp/><sp/>The</highlight></codeline>
<codeline lineno="42"><highlight class="comment">control<sp/>block<sp/>structure<sp/>however<sp/>has<sp/>to<sp/>be<sp/>included<sp/>in<sp/>the<sp/>header<sp/>due<sp/>to</highlight></codeline>
<codeline lineno="43"><highlight class="comment">the<sp/>macro<sp/>implementation<sp/>of<sp/>the<sp/>co-routine<sp/>functionality.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>CoRoutineHandle_t;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Defines<sp/>the<sp/>prototype<sp/>to<sp/>which<sp/>co-routine<sp/>functions<sp/>must<sp/>conform.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*crCOROUTINE_CODE)(<sp/>CoRoutineHandle_t,<sp/>UBaseType_t<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structcor_co_routine_control_block" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcor_co_routine_control_block" kindref="compound">corCoRoutineControlBlock</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>crCOROUTINE_CODE<sp/><sp/><sp/><sp/>pxCoRoutineFunction;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xGenericListItem;<sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>List<sp/>item<sp/>used<sp/>to<sp/>place<sp/>the<sp/>CRCB<sp/>in<sp/>ready<sp/>and<sp/>blocked<sp/>queues.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xEventListItem;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>List<sp/>item<sp/>used<sp/>to<sp/>place<sp/>the<sp/>CRCB<sp/>in<sp/>event<sp/>lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>UBaseType_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uxPriority;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>priority<sp/>of<sp/>the<sp/>co-routine<sp/>in<sp/>relation<sp/>to<sp/>other<sp/>co-routines.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>UBaseType_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uxIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Used<sp/>to<sp/>distinguish<sp/>between<sp/>co-routines<sp/>when<sp/>multiple<sp/>co-routines<sp/>use<sp/>the<sp/>same<sp/>co-routine<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uxState;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Used<sp/>internally<sp/>by<sp/>the<sp/>co-routine<sp/>implementation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Co-routine<sp/>control<sp/>block.<sp/><sp/>Note<sp/>must<sp/>be<sp/>identical<sp/>in<sp/>size<sp/>down<sp/>to<sp/>uxPriority<sp/>with<sp/>TCB_t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">BaseType_t<sp/>xCoRoutineCreate(<sp/>crCOROUTINE_CODE<sp/>pxCoRoutineCode,<sp/>UBaseType_t<sp/>uxPriority,<sp/>UBaseType_t<sp/>uxIndex<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vCoRoutineSchedule(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crSTART(<sp/>pxCRCB<sp/>)<sp/>switch(<sp/>(<sp/>(<sp/>CRCB_t<sp/>*<sp/>)(<sp/>pxCRCB<sp/>)<sp/>)-&gt;uxState<sp/>)<sp/>{<sp/>case<sp/>0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crEND()<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>These<sp/>macros<sp/>are<sp/>intended<sp/>for<sp/>internal<sp/>use<sp/>by<sp/>the<sp/>co-routine<sp/>implementation</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>only.<sp/><sp/>The<sp/>macros<sp/>should<sp/>not<sp/>be<sp/>used<sp/>directly<sp/>by<sp/>application<sp/>writers.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crSET_STATE0(<sp/>xHandle<sp/>)<sp/>(<sp/>(<sp/>CRCB_t<sp/>*<sp/>)(<sp/>xHandle<sp/>)<sp/>)-&gt;uxState<sp/>=<sp/>(__LINE__<sp/>*<sp/>2);<sp/>return;<sp/>case<sp/>(__LINE__<sp/>*<sp/>2):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crSET_STATE1(<sp/>xHandle<sp/>)<sp/>(<sp/>(<sp/>CRCB_t<sp/>*<sp/>)(<sp/>xHandle<sp/>)<sp/>)-&gt;uxState<sp/>=<sp/>((__LINE__<sp/>*<sp/>2)+1);<sp/>return;<sp/>case<sp/>((__LINE__<sp/>*<sp/>2)+1):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crDELAY(<sp/>xHandle,<sp/>xTicksToDelay<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(<sp/>(<sp/>xTicksToDelay<sp/>)<sp/>&gt;<sp/>0<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vCoRoutineAddToDelayedList(<sp/>(<sp/>xTicksToDelay<sp/>),<sp/>NULL<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>crSET_STATE0(<sp/>(<sp/>xHandle<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crQUEUE_SEND(<sp/>xHandle,<sp/>pxQueue,<sp/>pvItemToQueue,<sp/>xTicksToWait,<sp/>pxResult<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(<sp/>pxResult<sp/>)<sp/>=<sp/>xQueueCRSend(<sp/>(<sp/>pxQueue)<sp/>,<sp/>(<sp/>pvItemToQueue)<sp/>,<sp/>(<sp/>xTicksToWait<sp/>)<sp/>);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(<sp/>*(<sp/>pxResult<sp/>)<sp/>==<sp/>errQUEUE_BLOCKED<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crSET_STATE0(<sp/>(<sp/>xHandle<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pxResult<sp/>=<sp/>xQueueCRSend(<sp/>(<sp/>pxQueue<sp/>),<sp/>(<sp/>pvItemToQueue<sp/>),<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(<sp/>*pxResult<sp/>==<sp/>errQUEUE_YIELD<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crSET_STATE1(<sp/>(<sp/>xHandle<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pxResult<sp/>=<sp/>pdPASS;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crQUEUE_RECEIVE(<sp/>xHandle,<sp/>pxQueue,<sp/>pvBuffer,<sp/>xTicksToWait,<sp/>pxResult<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(<sp/>pxResult<sp/>)<sp/>=<sp/>xQueueCRReceive(<sp/>(<sp/>pxQueue)<sp/>,<sp/>(<sp/>pvBuffer<sp/>),<sp/>(<sp/>xTicksToWait<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(<sp/>*(<sp/>pxResult<sp/>)<sp/>==<sp/>errQUEUE_BLOCKED<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crSET_STATE0(<sp/>(<sp/>xHandle<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(<sp/>pxResult<sp/>)<sp/>=<sp/>xQueueCRReceive(<sp/>(<sp/>pxQueue)<sp/>,<sp/>(<sp/>pvBuffer<sp/>),<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(<sp/>*(<sp/>pxResult<sp/>)<sp/>==<sp/>errQUEUE_YIELD<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crSET_STATE1(<sp/>(<sp/>xHandle<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(<sp/>pxResult<sp/>)<sp/>=<sp/>pdPASS;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crQUEUE_SEND_FROM_ISR(<sp/>pxQueue,<sp/>pvItemToQueue,<sp/>xCoRoutinePreviouslyWoken<sp/>)<sp/>xQueueCRSendFromISR(<sp/>(<sp/>pxQueue<sp/>),<sp/>(<sp/>pvItemToQueue<sp/>),<sp/>(<sp/>xCoRoutinePreviouslyWoken<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>crQUEUE_RECEIVE_FROM_ISR(<sp/>pxQueue,<sp/>pvBuffer,<sp/>pxCoRoutineWoken<sp/>)<sp/>xQueueCRReceiveFromISR(<sp/>(<sp/>pxQueue<sp/>),<sp/>(<sp/>pvBuffer<sp/>),<sp/>(<sp/>pxCoRoutineWoken<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>is<sp/>intended<sp/>for<sp/>internal<sp/>use<sp/>by<sp/>the<sp/>co-routine<sp/>macros<sp/>only.</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*<sp/>The<sp/>macro<sp/>nature<sp/>of<sp/>the<sp/>co-routine<sp/>implementation<sp/>requires<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/>prototype<sp/>appears<sp/>here.<sp/><sp/>The<sp/>function<sp/>should<sp/>not<sp/>be<sp/>used<sp/>by<sp/>application</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*<sp/>writers.</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*<sp/>Removes<sp/>the<sp/>current<sp/>co-routine<sp/>from<sp/>its<sp/>ready<sp/>list<sp/>and<sp/>places<sp/>it<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/>*<sp/>appropriate<sp/>delayed<sp/>list.</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vCoRoutineAddToDelayedList(<sp/>TickType_t<sp/>xTicksToDelay,<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*pxEventList<sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>is<sp/>intended<sp/>for<sp/>internal<sp/>use<sp/>by<sp/>the<sp/>queue<sp/>implementation<sp/>only.</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/>The<sp/>function<sp/>should<sp/>not<sp/>be<sp/>used<sp/>by<sp/>application<sp/>writers.</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/>Removes<sp/>the<sp/>highest<sp/>priority<sp/>co-routine<sp/>from<sp/>the<sp/>event<sp/>list<sp/>and<sp/>places<sp/>it<sp/>in</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/>the<sp/>pending<sp/>ready<sp/>list.</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal">BaseType_t<sp/>xCoRoutineRemoveFromEventList(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*pxEventList<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CO_ROUTINE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h"/>
  </compounddef>
</doxygen>
