<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions" xml:lang="en-US">
<title>NVIC Functions</title>
<indexterm><primary>NVIC Functions</primary></indexterm>
<para>

<para>Functions that manage interrupts and exceptions via the NVIC. </para>
 
</para>
<simplesect>
    <title>Modules    </title>
        <itemizedlist>
            <listitem><para><link linkend="_group___c_m_s_i_s___core___fpu_functions">FPU Functions</link></para>

<para>Function that provides FPU type. </para>
</listitem>
        </itemizedlist>
</simplesect>
        <itemizedlist>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Enable Interrupt. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Get Interrupt Enable status. </para>
</listitem>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Disable Interrupt. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Get Pending Interrupt. </para>
</listitem>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Set Pending Interrupt. </para>
</listitem>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Clear Pending Interrupt. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Get Active Interrupt. </para>
</listitem>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn, uint32_t priority)</para>

<para>Set Interrupt Priority. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Get Interrupt Priority. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gadb94ac5d892b376e4f3555ae0418ebac">NVIC_EncodePriority</link> (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)</para>

<para>Encode Priority. </para>
</listitem>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga3387607fd8a1a32cccd77d2ac672dd96">NVIC_DecodePriority</link> (uint32_t Priority, uint32_t PriorityGroup, uint32_t *const pPreemptPriority, uint32_t *const pSubPriority)</para>

<para>Decode Priority. </para>
</listitem>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn, uint32_t vector)</para>

<para>Set Interrupt Vector. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link> (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</para>

<para>Get Interrupt Vector. </para>
</listitem>
            <listitem><para>__NO_RETURN __STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link> (void)</para>

<para>System Reset. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6bcad99ce80a0e7e4ddc6f2379081756">SCB_GetFPUType</link> (void)</para>

<para>get FPU type </para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabaa62910bf89acc186ae998c611e64ab"/>#define <emphasis role="strong">FNC_RETURN</emphasis>   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga99e0c1c19f050880a8bd827a7f420bec"/>#define <emphasis role="strong">EXC_RETURN_PREFIX</emphasis>   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga88711355d0196b1ffeb18c33e2c95360"/>#define <emphasis role="strong">EXC_RETURN_S</emphasis>   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non-secure 1=Secure          */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0a0f2c03b4aef2c02bdae044bda1324b"/>#define <emphasis role="strong">EXC_RETURN_DCRS</emphasis>   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga342b51c3eec59822bf206e24ef881a9e"/>#define <emphasis role="strong">EXC_RETURN_FTYPE</emphasis>   (0x00000010UL)     /* bit [4] allocate stack for floating-point context: 0=done 1=skipped  */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabb65f847769a7807395b2739cc9702d0"/>#define <emphasis role="strong">EXC_RETURN_MODE</emphasis>   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga686922b26c29eac540f53a6213627466"/>#define <emphasis role="strong">EXC_RETURN_SPSEL</emphasis>   (0x00000002UL)     /* bit [1] stack pointer used to restore context: 0=MSP 1=PSP           */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac939dbf69d3063c76a28516a4ae84db7"/>#define <emphasis role="strong">EXC_RETURN_ES</emphasis>   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non-secure 1=Secure */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga7d1b21b2d863ccd9e23a3295b3173155"/>#define <emphasis role="strong">EXC_INTEGRITY_SIGNATURE</emphasis>   (0xFEFA125BUL)     /* Value for processors without floating-point extension                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga53c75b28823441c6153269f0ecbed878"/>#define <emphasis role="strong">_BIT_SHIFT</emphasis>(IRQn)   (  ((((uint32_t)(int32_t)(IRQn))         )      &amp;  0x03UL) * 8UL)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaee4f7eb5d7e770ad51489dbceabb1755"/>#define <emphasis role="strong">_SHP_IDX</emphasis>(IRQn)   ( (((((uint32_t)(int32_t)(IRQn)) &amp; 0x0FUL)-8UL) &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga370ec4b1751a6a889d849747df3763a9"/>#define <emphasis role="strong">_IP_IDX</emphasis>(IRQn)   (   (((uint32_t)(int32_t)(IRQn))                &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6834dd8c9c59394f1b544b57665293a4"/>#define <emphasis role="strong">__NVIC_SetPriorityGrouping</emphasis>(X)   (void)(X)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae1de06155d072758b3453edb07d12459">__NVIC_GetPriorityGrouping</link>()   (0U)</para>

<para>Get Priority Grouping. </para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para>__STATIC_INLINE void <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link> (uint32_t PriorityGroup)</para>

<para>Set Priority Grouping. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link> (void)</para>

<para>Get Priority Grouping. </para>
</listitem>
            <listitem><para>__STATIC_INLINE uint32_t <link linkend="_group___c_m_s_i_s__core___debug_functions_1gac90a497bd64286b84552c2c553d3419e">ITM_SendChar</link> (uint32_t ch)</para>

<para>ITM Send Character. </para>
</listitem>
            <listitem><para>__STATIC_INLINE int32_t <link linkend="_group___c_m_s_i_s__core___debug_functions_1gac3ee2c30a1ac4ed34c8a866a17decd53">ITM_ReceiveChar</link> (void)</para>

<para>ITM Receive Character. </para>
</listitem>
            <listitem><para>__STATIC_INLINE int32_t <link linkend="_group___c_m_s_i_s__core___debug_functions_1gae61ce9ca5917735325cd93b0fb21dd29">ITM_CheckChar</link> (void)</para>

<para>ITM Check Character. </para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabaa62910bf89acc186ae998c611e64ab"/>#define <emphasis role="strong">FNC_RETURN</emphasis>   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga99e0c1c19f050880a8bd827a7f420bec"/>#define <emphasis role="strong">EXC_RETURN_PREFIX</emphasis>   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga88711355d0196b1ffeb18c33e2c95360"/>#define <emphasis role="strong">EXC_RETURN_S</emphasis>   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non-secure 1=Secure          */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0a0f2c03b4aef2c02bdae044bda1324b"/>#define <emphasis role="strong">EXC_RETURN_DCRS</emphasis>   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga342b51c3eec59822bf206e24ef881a9e"/>#define <emphasis role="strong">EXC_RETURN_FTYPE</emphasis>   (0x00000010UL)     /* bit [4] allocate stack for floating-point context: 0=done 1=skipped  */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabb65f847769a7807395b2739cc9702d0"/>#define <emphasis role="strong">EXC_RETURN_MODE</emphasis>   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga686922b26c29eac540f53a6213627466"/>#define <emphasis role="strong">EXC_RETURN_SPSEL</emphasis>   (0x00000002UL)     /* bit [1] stack pointer used to restore context: 0=MSP 1=PSP           */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac939dbf69d3063c76a28516a4ae84db7"/>#define <emphasis role="strong">EXC_RETURN_ES</emphasis>   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non-secure 1=Secure */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga7d1b21b2d863ccd9e23a3295b3173155"/>#define <emphasis role="strong">EXC_INTEGRITY_SIGNATURE</emphasis>   (0xFEFA125BUL)     /* Value for processors without floating-point extension                */</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga53c75b28823441c6153269f0ecbed878"/>#define <emphasis role="strong">_BIT_SHIFT</emphasis>(IRQn)   (  ((((uint32_t)(int32_t)(IRQn))         )      &amp;  0x03UL) * 8UL)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaee4f7eb5d7e770ad51489dbceabb1755"/>#define <emphasis role="strong">_SHP_IDX</emphasis>(IRQn)   ( (((((uint32_t)(int32_t)(IRQn)) &amp; 0x0FUL)-8UL) &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga370ec4b1751a6a889d849747df3763a9"/>#define <emphasis role="strong">_IP_IDX</emphasis>(IRQn)   (   (((uint32_t)(int32_t)(IRQn))                &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6834dd8c9c59394f1b544b57665293a4"/>#define <emphasis role="strong">__NVIC_SetPriorityGrouping</emphasis>(X)   (void)(X)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gab2072fe50f6d7cd208f6768919f59fae"/>#define <emphasis role="strong">__NVIC_GetPriorityGrouping</emphasis>()   (0U)</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga53c75b28823441c6153269f0ecbed878"/>#define <emphasis role="strong">_BIT_SHIFT</emphasis>(IRQn)   (  ((((uint32_t)(int32_t)(IRQn))         )      &amp;  0x03UL) * 8UL)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaee4f7eb5d7e770ad51489dbceabb1755"/>#define <emphasis role="strong">_SHP_IDX</emphasis>(IRQn)   ( (((((uint32_t)(int32_t)(IRQn)) &amp; 0x0FUL)-8UL) &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga370ec4b1751a6a889d849747df3763a9"/>#define <emphasis role="strong">_IP_IDX</emphasis>(IRQn)   (   (((uint32_t)(int32_t)(IRQn))                &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6834dd8c9c59394f1b544b57665293a4"/>#define <emphasis role="strong">__NVIC_SetPriorityGrouping</emphasis>(X)   (void)(X)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gab2072fe50f6d7cd208f6768919f59fae"/>#define <emphasis role="strong">__NVIC_GetPriorityGrouping</emphasis>()   (0U)</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga53c75b28823441c6153269f0ecbed878"/>#define <emphasis role="strong">_BIT_SHIFT</emphasis>(IRQn)   (  ((((uint32_t)(int32_t)(IRQn))         )      &amp;  0x03UL) * 8UL)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaee4f7eb5d7e770ad51489dbceabb1755"/>#define <emphasis role="strong">_SHP_IDX</emphasis>(IRQn)   ( (((((uint32_t)(int32_t)(IRQn)) &amp; 0x0FUL)-8UL) &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga370ec4b1751a6a889d849747df3763a9"/>#define <emphasis role="strong">_IP_IDX</emphasis>(IRQn)   (   (((uint32_t)(int32_t)(IRQn))                &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6834dd8c9c59394f1b544b57665293a4"/>#define <emphasis role="strong">__NVIC_SetPriorityGrouping</emphasis>(X)   (void)(X)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gab2072fe50f6d7cd208f6768919f59fae"/>#define <emphasis role="strong">__NVIC_GetPriorityGrouping</emphasis>()   (0U)</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabaa62910bf89acc186ae998c611e64ab"/>#define <emphasis role="strong">FNC_RETURN</emphasis>   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga99e0c1c19f050880a8bd827a7f420bec"/>#define <emphasis role="strong">EXC_RETURN_PREFIX</emphasis>   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga88711355d0196b1ffeb18c33e2c95360"/>#define <emphasis role="strong">EXC_RETURN_S</emphasis>   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non-secure 1=Secure          */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0a0f2c03b4aef2c02bdae044bda1324b"/>#define <emphasis role="strong">EXC_RETURN_DCRS</emphasis>   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga342b51c3eec59822bf206e24ef881a9e"/>#define <emphasis role="strong">EXC_RETURN_FTYPE</emphasis>   (0x00000010UL)     /* bit [4] allocate stack for floating-point context: 0=done 1=skipped  */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabb65f847769a7807395b2739cc9702d0"/>#define <emphasis role="strong">EXC_RETURN_MODE</emphasis>   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga686922b26c29eac540f53a6213627466"/>#define <emphasis role="strong">EXC_RETURN_SPSEL</emphasis>   (0x00000002UL)     /* bit [1] stack pointer used to restore context: 0=MSP 1=PSP           */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac939dbf69d3063c76a28516a4ae84db7"/>#define <emphasis role="strong">EXC_RETURN_ES</emphasis>   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non-secure 1=Secure */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga7d1b21b2d863ccd9e23a3295b3173155"/>#define <emphasis role="strong">EXC_INTEGRITY_SIGNATURE</emphasis>   (0xFEFA125BUL)     /* Value for processors without floating-point extension                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga53c75b28823441c6153269f0ecbed878"/>#define <emphasis role="strong">_BIT_SHIFT</emphasis>(IRQn)   (  ((((uint32_t)(int32_t)(IRQn))         )      &amp;  0x03UL) * 8UL)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaee4f7eb5d7e770ad51489dbceabb1755"/>#define <emphasis role="strong">_SHP_IDX</emphasis>(IRQn)   ( (((((uint32_t)(int32_t)(IRQn)) &amp; 0x0FUL)-8UL) &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga370ec4b1751a6a889d849747df3763a9"/>#define <emphasis role="strong">_IP_IDX</emphasis>(IRQn)   (   (((uint32_t)(int32_t)(IRQn))                &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6834dd8c9c59394f1b544b57665293a4"/>#define <emphasis role="strong">__NVIC_SetPriorityGrouping</emphasis>(X)   (void)(X)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gab2072fe50f6d7cd208f6768919f59fae"/>#define <emphasis role="strong">__NVIC_GetPriorityGrouping</emphasis>()   (0U)</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabaa62910bf89acc186ae998c611e64ab"/>#define <emphasis role="strong">FNC_RETURN</emphasis>   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga99e0c1c19f050880a8bd827a7f420bec"/>#define <emphasis role="strong">EXC_RETURN_PREFIX</emphasis>   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga88711355d0196b1ffeb18c33e2c95360"/>#define <emphasis role="strong">EXC_RETURN_S</emphasis>   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non-secure 1=Secure          */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0a0f2c03b4aef2c02bdae044bda1324b"/>#define <emphasis role="strong">EXC_RETURN_DCRS</emphasis>   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga342b51c3eec59822bf206e24ef881a9e"/>#define <emphasis role="strong">EXC_RETURN_FTYPE</emphasis>   (0x00000010UL)     /* bit [4] allocate stack for floating-point context: 0=done 1=skipped  */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gabb65f847769a7807395b2739cc9702d0"/>#define <emphasis role="strong">EXC_RETURN_MODE</emphasis>   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga686922b26c29eac540f53a6213627466"/>#define <emphasis role="strong">EXC_RETURN_SPSEL</emphasis>   (0x00000002UL)     /* bit [1] stack pointer used to restore context: 0=MSP 1=PSP           */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac939dbf69d3063c76a28516a4ae84db7"/>#define <emphasis role="strong">EXC_RETURN_ES</emphasis>   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non-secure 1=Secure */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga7d1b21b2d863ccd9e23a3295b3173155"/>#define <emphasis role="strong">EXC_INTEGRITY_SIGNATURE</emphasis>   (0xFEFA125BUL)     /* Value for processors without floating-point extension                */</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga3aa6648e1c3c09fbab1f543b9dcffc3a"/>#define <emphasis role="strong">EXC_RETURN_HANDLER_FPU</emphasis>   (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after return, restore floating-point state */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaad4cb3b34fd4264ccfae1fbbc75a3431"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP_FPU</emphasis>   (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after return, restore floating-point state  */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gadd2299e1d3a79c90b610c6b6f4cadb95"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP_FPU</emphasis>   (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after return, restore floating-point state  */</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga3aa6648e1c3c09fbab1f543b9dcffc3a"/>#define <emphasis role="strong">EXC_RETURN_HANDLER_FPU</emphasis>   (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after return, restore floating-point state */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaad4cb3b34fd4264ccfae1fbbc75a3431"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP_FPU</emphasis>   (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after return, restore floating-point state  */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gadd2299e1d3a79c90b610c6b6f4cadb95"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP_FPU</emphasis>   (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after return, restore floating-point state  */</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga53c75b28823441c6153269f0ecbed878"/>#define <emphasis role="strong">_BIT_SHIFT</emphasis>(IRQn)   (  ((((uint32_t)(int32_t)(IRQn))         )      &amp;  0x03UL) * 8UL)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaee4f7eb5d7e770ad51489dbceabb1755"/>#define <emphasis role="strong">_SHP_IDX</emphasis>(IRQn)   ( (((((uint32_t)(int32_t)(IRQn)) &amp; 0x0FUL)-8UL) &gt;&gt;    2UL)      )</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga370ec4b1751a6a889d849747df3763a9"/>#define <emphasis role="strong">_IP_IDX</emphasis>(IRQn)   (   (((uint32_t)(int32_t)(IRQn))                &gt;&gt;    2UL)      )</para>
</listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0e798d5aec68cdd8263db86a76df788f"/>#define <emphasis role="strong">NVIC_SetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d">__NVIC_SetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga4eeb9214f2264fc23c34ad5de2d3fa11"/>#define <emphasis role="strong">NVIC_GetPriorityGrouping</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05">__NVIC_GetPriorityGrouping</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef"/>#define <emphasis role="strong">NVIC_EnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea">__NVIC_EnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga857de13232ec65dd15087eaa15bc4a69"/>#define <emphasis role="strong">NVIC_GetEnableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083">__NVIC_GetEnableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57"/>#define <emphasis role="strong">NVIC_DisableIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f">__NVIC_DisableIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gac608957a239466e9e0cbc30aa64feb3b"/>#define <emphasis role="strong">NVIC_GetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694">__NVIC_GetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga2b47e2e52cf5c48a5c3348636434b3ac"/>#define <emphasis role="strong">NVIC_SetPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad">__NVIC_SetPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga590cf113000a079b1f0ea3dcd5b5316c"/>#define <emphasis role="strong">NVIC_ClearPendingIRQ</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191">__NVIC_ClearPendingIRQ</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga58ad3f352f832235ab3b192ff4745320"/>#define <emphasis role="strong">NVIC_GetActive</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593">__NVIC_GetActive</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae0e9d0e2f7b6133828c71b57d4941c35"/>#define <emphasis role="strong">NVIC_SetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd">__NVIC_SetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaf59b9d0a791d2157abb319753953eceb"/>#define <emphasis role="strong">NVIC_GetPriority</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73">__NVIC_GetPriority</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6aa0367d3642575610476bf0366f0c48"/>#define <emphasis role="strong">NVIC_SystemReset</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c">__NVIC_SystemReset</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga804af63bb4c4c317387897431814775d"/>#define <emphasis role="strong">NVIC_SetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208">__NVIC_SetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga955eb1c33a3dcc62af11a8385e8c0fc8"/>#define <emphasis role="strong">NVIC_GetVector</emphasis>   <link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5">__NVIC_GetVector</link></para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga8045d905a5ca57437d8e6f71ffcb6df5"/>#define <emphasis role="strong">NVIC_USER_IRQ_OFFSET</emphasis>   16</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa6fa2b10f756385433e08522d9e4632f"/>#define <emphasis role="strong">EXC_RETURN_HANDLER</emphasis>   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaea4703101b5e679f695e231f7ee72331"/>#define <emphasis role="strong">EXC_RETURN_THREAD_MSP</emphasis>   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9998daf0fbdf31dbc8f81cd604b58175"/>#define <emphasis role="strong">EXC_RETURN_THREAD_PSP</emphasis>   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>Functions that manage interrupts and exceptions via the NVIC. </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae1de06155d072758b3453edb07d12459"/>    <section>
    <title>__NVIC_GetPriorityGrouping</title>
<indexterm><primary>__NVIC_GetPriorityGrouping</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_GetPriorityGrouping</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping( void)   (0U)</computeroutput></para><para>

<para>Get Priority Grouping. </para>
</para>

<para>Reads the priority grouping field from the NVIC Interrupt Controller. <formalpara><title>Returns</title>

<para>Priority grouping field (SCB-&gt;AIRCR [10:8] PRIGROUP field). </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga562a86dbdf14827d0fee8fdafb04d191"/>    <section>
    <title>__NVIC_ClearPendingIRQ()</title>
<indexterm><primary>__NVIC_ClearPendingIRQ</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_ClearPendingIRQ</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void __NVIC_ClearPendingIRQ (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Clear Pending Interrupt. </para>
</para>

<para>Clears the pending bit of a device specific interrupt in the NVIC pending register. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Device specific interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>IRQn must not be negative. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae016e4c1986312044ee768806537d52f"/>    <section>
    <title>__NVIC_DisableIRQ()</title>
<indexterm><primary>__NVIC_DisableIRQ</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_DisableIRQ</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void __NVIC_DisableIRQ (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Disable Interrupt. </para>
</para>

<para>Disables a device specific interrupt in the NVIC interrupt controller. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Device specific interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>IRQn must not be negative. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga71227e1376cde11eda03fcb62f1b33ea"/>    <section>
    <title>__NVIC_EnableIRQ()</title>
<indexterm><primary>__NVIC_EnableIRQ</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_EnableIRQ</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void __NVIC_EnableIRQ (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Enable Interrupt. </para>
</para>

<para>Enables a device specific interrupt in the NVIC interrupt controller. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Device specific interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>IRQn must not be negative. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaa2837003c28c45abf193fe5e8d27f593"/>    <section>
    <title>__NVIC_GetActive()</title>
<indexterm><primary>__NVIC_GetActive</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_GetActive</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t __NVIC_GetActive (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Get Active Interrupt. </para>
</para>

<para>Reads the active register in the NVIC and returns the active bit for the device specific interrupt. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Device specific interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 Interrupt status is not active. </para>

<para>1 Interrupt status is active. </para>
</formalpara>
<note><title>Note</title>

<para>IRQn must not be negative. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaaeb5e7cc0eaad4e2817272e7bf742083"/>    <section>
    <title>__NVIC_GetEnableIRQ()</title>
<indexterm><primary>__NVIC_GetEnableIRQ</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_GetEnableIRQ</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t __NVIC_GetEnableIRQ (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Get Interrupt Enable status. </para>
</para>

<para>Returns a device specific interrupt enable status from the NVIC interrupt controller. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Device specific interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 Interrupt is not enabled. </para>

<para>1 Interrupt is enabled. </para>
</formalpara>
<note><title>Note</title>

<para>IRQn must not be negative. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga5a92ca5fa801ad7adb92be7257ab9694"/>    <section>
    <title>__NVIC_GetPendingIRQ()</title>
<indexterm><primary>__NVIC_GetPendingIRQ</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_GetPendingIRQ</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t __NVIC_GetPendingIRQ (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Get Pending Interrupt. </para>
</para>

<para>Reads the NVIC pending register and returns the pending bit for the specified device specific interrupt. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Device specific interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 Interrupt status is not pending. </para>

<para>1 Interrupt status is pending. </para>
</formalpara>
<note><title>Note</title>

<para>IRQn must not be negative. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaeb9dc99c8e7700668813144261b0bc73"/>    <section>
    <title>__NVIC_GetPriority()</title>
<indexterm><primary>__NVIC_GetPriority</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_GetPriority</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t __NVIC_GetPriority (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Get Interrupt Priority. </para>
</para>

<para>Reads the priority of a device specific interrupt or a processor exception. The interrupt number can be positive to specify a device specific interrupt, or negative to specify a processor exception. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Interrupt Priority. Value is aligned automatically to the implemented priority bits of the microcontroller. </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga9b894af672df4373eb637f8288845c05"/>    <section>
    <title>__NVIC_GetPriorityGrouping()</title>
<indexterm><primary>__NVIC_GetPriorityGrouping</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_GetPriorityGrouping</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping (void )</computeroutput></para><para>

<para>Get Priority Grouping. </para>
</para>

<para>Reads the priority grouping field from the NVIC Interrupt Controller. <formalpara><title>Returns</title>

<para>Priority grouping field (SCB-&gt;AIRCR [10:8] PRIGROUP field). </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga44b665d2afb708121d9b10c76ff00ee5"/>    <section>
    <title>__NVIC_GetVector()</title>
<indexterm><primary>__NVIC_GetVector</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_GetVector</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t __NVIC_GetVector (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Get Interrupt Vector. </para>
</para>

<para>Reads an interrupt vector from interrupt vector table. The interrupt number can be positive to specify a device specific interrupt, or negative to specify a processor exception. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Address of interrupt handler function </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gaabefdd4b790b9a7308929938c0c1e1ad"/>    <section>
    <title>__NVIC_SetPendingIRQ()</title>
<indexterm><primary>__NVIC_SetPendingIRQ</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_SetPendingIRQ</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void __NVIC_SetPendingIRQ (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn)</computeroutput></para><para>

<para>Set Pending Interrupt. </para>
</para>

<para>Sets the pending bit of a device specific interrupt in the NVIC pending register. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Device specific interrupt number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>IRQn must not be negative. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga505338e23563a9c074910fb14e7d45fd"/>    <section>
    <title>__NVIC_SetPriority()</title>
<indexterm><primary>__NVIC_SetPriority</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_SetPriority</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void __NVIC_SetPriority (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn, uint32_t priority)</computeroutput></para><para>

<para>Set Interrupt Priority. </para>
</para>

<para>Sets the priority of a device specific interrupt or a processor exception. The interrupt number can be positive to specify a device specific interrupt, or negative to specify a processor exception. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Interrupt number. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>priority</entry>
                                <entry>
<para>Priority to set. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>The priority cannot be set for every processor exception. </para>
</note>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gafc94dcbaee03e4746ade1f5bb9aaa56d"/>    <section>
    <title>__NVIC_SetPriorityGrouping()</title>
<indexterm><primary>__NVIC_SetPriorityGrouping</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_SetPriorityGrouping</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void __NVIC_SetPriorityGrouping (uint32_t PriorityGroup)</computeroutput></para><para>

<para>Set Priority Grouping. </para>
</para>

<para>Sets the priority grouping field using the required unlock sequence. The parameter PriorityGroup is assigned to the field SCB-&gt;AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used. In case of a conflict between priority grouping and available priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>PriorityGroup</entry>
                                <entry>
<para>Priority grouping field. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0df355460bc1783d58f9d72ee4884208"/>    <section>
    <title>__NVIC_SetVector()</title>
<indexterm><primary>__NVIC_SetVector</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_SetVector</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void __NVIC_SetVector (<link linkend="_group___peripheral__interrupt__number__definition_1ga7e1129cd8a196f4284d41db3e82ad5c8">IRQn_Type</link> IRQn, uint32_t vector)</computeroutput></para><para>

<para>Set Interrupt Vector. </para>
</para>

<para>Sets an interrupt vector in SRAM based interrupt vector table. The interrupt number can be positive to specify a device specific interrupt, or negative to specify a processor exception. VTOR must been relocated to SRAM before. If VTOR is not present address 0 must be mapped to SRAM. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Interrupt number </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>vector</entry>
                                <entry>
<para>Address of interrupt handler function</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Sets an interrupt vector in SRAM based interrupt vector table. The interrupt number can be positive to specify a device specific interrupt, or negative to specify a processor exception. VTOR must been relocated to SRAM before. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Interrupt number </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>vector</entry>
                                <entry>
<para>Address of interrupt handler function</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Sets an interrupt vector in SRAM based interrupt vector table. The interrupt number can be positive to specify a device specific interrupt, or negative to specify a processor exception. Address 0 must be mapped to SRAM. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>IRQn</entry>
                                <entry>
<para>Interrupt number </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>vector</entry>
                                <entry>
<para>Address of interrupt handler function </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga0d9aa2d30fa54b41eb780c16e35b676c"/>    <section>
    <title>__NVIC_SystemReset()</title>
<indexterm><primary>__NVIC_SystemReset</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>__NVIC_SystemReset</secondary></indexterm>
<para><computeroutput>__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset (void )</computeroutput></para><para>

<para>System Reset. </para>
</para>

<para>Initiates a system reset request to reset the MCU. </para>
    </section><anchor xml:id="_group___c_m_s_i_s__core___debug_functions_1gae61ce9ca5917735325cd93b0fb21dd29"/>    <section>
    <title>ITM_CheckChar()</title>
<indexterm><primary>ITM_CheckChar</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>ITM_CheckChar</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE int32_t ITM_CheckChar (void )</computeroutput></para><para>

<para>ITM Check Character. </para>
</para>

<para>Checks whether a character is pending for reading in the variable <link linkend="_group___c_m_s_i_s__core___debug_functions_1ga12e68e55a7badc271b948d6c7230b2a8">ITM_RxBuffer</link>. <formalpara><title>Returns</title>

<para>0 No character available. </para>

<para>1 Character available. </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s__core___debug_functions_1gac3ee2c30a1ac4ed34c8a866a17decd53"/>    <section>
    <title>ITM_ReceiveChar()</title>
<indexterm><primary>ITM_ReceiveChar</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>ITM_ReceiveChar</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE int32_t ITM_ReceiveChar (void )</computeroutput></para><para>

<para>ITM Receive Character. </para>
</para>

<para>Inputs a character via the external variable <link linkend="_group___c_m_s_i_s__core___debug_functions_1ga12e68e55a7badc271b948d6c7230b2a8">ITM_RxBuffer</link>. <formalpara><title>Returns</title>

<para>Received character. </para>

<para>-1 No character pending. </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s__core___debug_functions_1gac90a497bd64286b84552c2c553d3419e"/>    <section>
    <title>ITM_SendChar()</title>
<indexterm><primary>ITM_SendChar</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>ITM_SendChar</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)</computeroutput></para><para>

<para>ITM Send Character. </para>
</para>

<para>Transmits a character via the ITM channel 0, and <itemizedlist>
<listitem>
<para>Just returns when no debugger is connected that has booked the output. </para>
</listitem>
<listitem>
<para>Is blocking when a debugger is connected, but the previous character sent has not been transmitted. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ch</entry>
                                <entry>
<para>Character to transmit. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Character to transmit. </para>
</formalpara>
</para>
</listitem>
</itemizedlist>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga3387607fd8a1a32cccd77d2ac672dd96"/>    <section>
    <title>NVIC_DecodePriority()</title>
<indexterm><primary>NVIC_DecodePriority</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>NVIC_DecodePriority</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t *const pPreemptPriority, uint32_t *const pSubPriority)</computeroutput></para><para>

<para>Decode Priority. </para>
</para>

<para>Decodes an interrupt priority value with a given priority group to preemptive priority value and subpriority value. In case of a conflict between priority grouping and available priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>Priority</entry>
                                <entry>
<para>Priority value, which can be retrieved with the function NVIC_GetPriority(). </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>PriorityGroup</entry>
                                <entry>
<para>Used priority group. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>pPreemptPriority</entry>
                                <entry>
<para>Preemptive priority value (starting from 0). </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>pSubPriority</entry>
                                <entry>
<para>Subpriority value (starting from 0). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1gadb94ac5d892b376e4f3555ae0418ebac"/>    <section>
    <title>NVIC_EncodePriority()</title>
<indexterm><primary>NVIC_EncodePriority</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>NVIC_EncodePriority</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)</computeroutput></para><para>

<para>Encode Priority. </para>
</para>

<para>Encodes the priority for an interrupt with the given priority group, preemptive priority value, and subpriority value. In case of a conflict between priority grouping and available priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>PriorityGroup</entry>
                                <entry>
<para>Used priority group. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>PreemptPriority</entry>
                                <entry>
<para>Preemptive priority value (starting from 0). </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>SubPriority</entry>
                                <entry>
<para>Subpriority value (starting from 0). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Encoded priority. Value can be used in the function NVIC_SetPriority(). </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_m_s_i_s___core___n_v_i_c_functions_1ga6bcad99ce80a0e7e4ddc6f2379081756"/>    <section>
    <title>SCB_GetFPUType()</title>
<indexterm><primary>SCB_GetFPUType</primary><secondary>NVIC Functions</secondary></indexterm>
<indexterm><primary>NVIC Functions</primary><secondary>SCB_GetFPUType</secondary></indexterm>
<para><computeroutput>__STATIC_INLINE uint32_t SCB_GetFPUType (void )</computeroutput></para><para>

<para>get FPU type </para>
</para>

<para>returns the FPU type <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para><emphasis role="bold">0</emphasis>: No FPU</para>
</listitem><listitem>
<para><emphasis role="bold">1</emphasis>: Single precision FPU</para>
</listitem><listitem>
<para><emphasis role="bold">2</emphasis>: Double + Single precision FPU </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
</section>
</section>
