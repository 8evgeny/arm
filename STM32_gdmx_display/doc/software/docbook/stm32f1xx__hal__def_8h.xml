<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f1xx__hal__def_8h" xml:lang="en-US">
<title>Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h File Reference</title>
<indexterm><primary>Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h</primary></indexterm>
<para>

<para>This file contains HAL common defines, enumeration, macros and structures definitions. </para>
 
</para>
<programlisting>#include &quot;stm32f1xx.h&quot;
#include &lt;stddef.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_stm32f1xx__hal__def_8h_1aad28bc64749c50dcedd6bf819fdc6974"/>#define <emphasis role="strong">HAL_MAX_DELAY</emphasis>   0xFFFFFFFFU</para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f1xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3"/>#define <emphasis role="strong">HAL_IS_BIT_SET</emphasis>(REG,  BIT)   (((REG) &amp; (BIT)) != 0U)</para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f1xx__hal__def_8h_1a82637a84fbdca0e2a25496089b549924"/>#define <emphasis role="strong">HAL_IS_BIT_CLR</emphasis>(REG,  BIT)   (((REG) &amp; (BIT)) == 0U)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">__HAL_LINKDMA</emphasis>(__HANDLE__,  __PPP_DMA_FIELD__,  __DMA_HANDLE__)</para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f1xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47"/>#define <emphasis role="strong">UNUSED</emphasis>(X)   (void)X      /* To avoid gcc/g++ warnings */</para>
</listitem>
            <listitem><para>#define <link linkend="_stm32f1xx__hal__def_8h_1a5850085e1bb7a96a417756f235b16aea">__HAL_RESET_HANDLE_STATE</link>(__HANDLE__)   ((__HANDLE__)-&gt;State = 0U)</para>

<para>Reset the Handle&apos;s State field. </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">__HAL_LOCK</emphasis>(__HANDLE__)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">__HAL_UNLOCK</emphasis>(__HANDLE__)</para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f1xx__hal__def_8h_1aaa12b03c58e2eb296bd7aa915ee540f3"/>#define <emphasis role="strong">__ALIGN_END</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f"/>enum <link linkend="_stm32f1xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f">HAL_StatusTypeDef</link> { <emphasis role="strong">HAL_OK</emphasis> = 0x00U
, <emphasis role="strong">HAL_ERROR</emphasis> = 0x01U
, <emphasis role="strong">HAL_BUSY</emphasis> = 0x02U
, <emphasis role="strong">HAL_TIMEOUT</emphasis> = 0x03U
 }</para>

<para>HAL Status structures definition. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f1xx__hal__def_8h_1ab367482e943333a1299294eadaad284b"/>enum <link linkend="_stm32f1xx__hal__def_8h_1ab367482e943333a1299294eadaad284b">HAL_LockTypeDef</link> { <emphasis role="strong">HAL_UNLOCKED</emphasis> = 0x00U
, <emphasis role="strong">HAL_LOCKED</emphasis> = 0x01U
 }</para>

<para>HAL Lock structures definition. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file contains HAL common defines, enumeration, macros and structures definitions. </para>

<para><formalpara><title>Author</title>

<para>MCD Application Team</para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
<formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; Copyright (c) 2017 STMicroelectronics. All rights reserved.</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>

<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_stm32f1xx__hal__def_8h_1af5b3b3d0eff8c4cb59d4d3909c247311"/>    <section>
    <title>__HAL_LINKDMA</title>
<indexterm><primary>__HAL_LINKDMA</primary><secondary>stm32f1xx_hal_def.h</secondary></indexterm>
<indexterm><primary>stm32f1xx_hal_def.h</primary><secondary>__HAL_LINKDMA</secondary></indexterm>
<para><computeroutput>#define __HAL_LINKDMA( __HANDLE__,  __PPP_DMA_FIELD__,  __DMA_HANDLE__)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__HANDLE__)-&gt;__PPP_DMA_FIELD__&#32;=&#32;&amp;(__DMA_HANDLE__);&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__DMA_HANDLE__).Parent&#32;=&#32;(__HANDLE__);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0U)
</programlisting>    </section><anchor xml:id="_stm32f1xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c"/>    <section>
    <title>__HAL_LOCK</title>
<indexterm><primary>__HAL_LOCK</primary><secondary>stm32f1xx_hal_def.h</secondary></indexterm>
<indexterm><primary>stm32f1xx_hal_def.h</primary><secondary>__HAL_LOCK</secondary></indexterm>
<para><computeroutput>#define __HAL_LOCK( __HANDLE__)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if((__HANDLE__)-&gt;Lock&#32;==&#32;HAL_LOCKED)&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;HAL_BUSY;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__HANDLE__)-&gt;Lock&#32;=&#32;HAL_LOCKED;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">while</emphasis>&#32;(0U)
</programlisting>    </section><anchor xml:id="_stm32f1xx__hal__def_8h_1a5850085e1bb7a96a417756f235b16aea"/>    <section>
    <title>__HAL_RESET_HANDLE_STATE</title>
<indexterm><primary>__HAL_RESET_HANDLE_STATE</primary><secondary>stm32f1xx_hal_def.h</secondary></indexterm>
<indexterm><primary>stm32f1xx_hal_def.h</primary><secondary>__HAL_RESET_HANDLE_STATE</secondary></indexterm>
<para><computeroutput>#define __HAL_RESET_HANDLE_STATE( __HANDLE__)   ((__HANDLE__)-&gt;State = 0U)</computeroutput></para><para>

<para>Reset the Handle&apos;s State field. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>&lt;strong&gt;HANDLE&lt;/strong&gt;</entry>
                                <entry>
<para>specifies the Peripheral Handle. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>This macro can be used for the following purpose:<itemizedlist>
<listitem>
<para>When the Handle is declared as local variable; before passing it as parameter to HAL_PPP_Init() for the first time, it is mandatory to use this macro to set to 0 the Handle&apos;s &quot;State&quot; field. Otherwise, &quot;State&quot; field may have any random value and the first time the function HAL_PPP_Init() is called, the low level hardware initialization will be missed (i.e. HAL_PPP_MspInit() will not be executed).</para>
</listitem><listitem>
<para>When there is a need to reconfigure the low level hardware: instead of calling HAL_PPP_DeInit() then HAL_PPP_Init(), user can make a call to this macro then HAL_PPP_Init(). In this later function, when the Handle&apos;s &quot;State&quot; field is set to 0, it will execute the function HAL_PPP_MspInit() which will reconfigure the low level hardware. </para>
</listitem></itemizedlist>
</para>
</note>

                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_stm32f1xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004"/>    <section>
    <title>__HAL_UNLOCK</title>
<indexterm><primary>__HAL_UNLOCK</primary><secondary>stm32f1xx_hal_def.h</secondary></indexterm>
<indexterm><primary>stm32f1xx_hal_def.h</primary><secondary>__HAL_UNLOCK</secondary></indexterm>
<para><computeroutput>#define __HAL_UNLOCK( __HANDLE__)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__HANDLE__)-&gt;Lock&#32;=&#32;HAL_UNLOCKED;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">while</emphasis>&#32;(0U)
</programlisting></section>
</section>
</section>
