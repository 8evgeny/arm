<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Data Structures</title>
Here are the data structures with brief descriptions:<link linkend="_struct_____d_m_a___handle_type_def">__DMA_HandleTypeDef</link>
<para>DMA handle Structure definition </para>
<link linkend="_struct____iar__u32">__iar_u32</link><link linkend="_struct___device__cb">_Device_cb</link><link linkend="_struct___u_s_b_d___c_d_c___itf">_USBD_CDC_Itf</link><link linkend="_struct___u_s_b_d___handle_type_def">_USBD_HandleTypeDef</link><link linkend="_struct_a_d_c___common___type_def">ADC_Common_TypeDef</link><link linkend="_struct_a_d_c___type_def">ADC_TypeDef</link>
<para>Analog to Digital Converter 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<link linkend="_struct_a_f_i_o___type_def">AFIO_TypeDef</link>
<para>Alternate Function I/O </para>
<link linkend="_union_a_p_s_r___type">APSR_Type</link>
<para>Union type to access the Application Program Status Register (APSR) </para>
<link linkend="_struct_a_r_m___m_p_u___region__t">ARM_MPU_Region_t</link><link linkend="_struct_b_k_p___type_def">BKP_TypeDef</link>
<para>Backup Registers 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<link linkend="_struct_c_a_n___f_i_f_o_mail_box___type_def">CAN_FIFOMailBox_TypeDef</link>
<para>Controller Area Network FIFOMailBox </para>
<link linkend="_struct_c_a_n___filter_register___type_def">CAN_FilterRegister_TypeDef</link>
<para>Controller Area Network FilterRegister </para>
<link linkend="_struct_c_a_n___tx_mail_box___type_def">CAN_TxMailBox_TypeDef</link>
<para>Controller Area Network TxMailBox </para>
<link linkend="_struct_c_a_n___type_def">CAN_TypeDef</link>
<para>Controller Area Network </para>
<link linkend="_union_c_o_n_t_r_o_l___type">CONTROL_Type</link>
<para>Union type to access the Control Registers (CONTROL) </para>
<link linkend="_structcor_co_routine_control_block">corCoRoutineControlBlock</link><link linkend="_struct_core_debug___type">CoreDebug_Type</link>
<para>Structure type to access the Core Debug Register (CoreDebug) </para>
<link linkend="_struct_c_r_c___type_def">CRC_TypeDef</link>
<para>CRC calculation unit </para>
<link linkend="_struct_d_b_g_m_c_u___type_def">DBGMCU_TypeDef</link>
<para>Debug MCU </para>
<link linkend="_struct_d_m_a___channel___type_def">DMA_Channel_TypeDef</link>
<para>DMA Controller </para>
<link linkend="_struct_d_m_a___init_type_def">DMA_InitTypeDef</link>
<para>DMA Configuration Structure definition </para>
<link linkend="_struct_d_m_a___type_def">DMA_TypeDef</link><link linkend="_struct_d_w_t___type">DWT_Type</link>
<para>Structure type to access the Data Watchpoint and Trace Register (DWT) </para>
<link linkend="_struct_e_x_t_i___config_type_def">EXTI_ConfigTypeDef</link>
<para>EXTI Configuration structure definition </para>
<link linkend="_struct_e_x_t_i___handle_type_def">EXTI_HandleTypeDef</link>
<para>EXTI Handle structure definition </para>
<link linkend="_struct_e_x_t_i___type_def">EXTI_TypeDef</link>
<para>External Interrupt/Event Controller </para>
<link linkend="_struct_f_l_a_s_h___erase_init_type_def">FLASH_EraseInitTypeDef</link>
<para>FLASH Erase structure definition </para>
<link linkend="_struct_f_l_a_s_h___o_b_program_init_type_def">FLASH_OBProgramInitTypeDef</link>
<para>FLASH Options bytes program structure definition </para>
<link linkend="_struct_f_l_a_s_h___process_type_def">FLASH_ProcessTypeDef</link>
<para>FLASH handle Structure definition 
<literallayout>&#160;&#xa;</literallayout>
 </para>
<link linkend="_struct_f_l_a_s_h___type_def">FLASH_TypeDef</link>
<para>FLASH Registers </para>
<link linkend="_struct_f_p_u___type">FPU_Type</link>
<para>Structure type to access the Floating Point Unit (FPU) </para>
<link linkend="_struct_g_p_i_o___init_type_def">GPIO_InitTypeDef</link>
<para>GPIO Init structure definition </para>
<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>
<para>General Purpose I/O </para>
<link linkend="_struct_heap_region">HeapRegion</link><link linkend="_struct_i2_c___type_def">I2C_TypeDef</link>
<para>Inter Integrated Circuit Interface </para>
<link linkend="_union_i_p_s_r___type">IPSR_Type</link>
<para>Union type to access the Interrupt Program Status Register (IPSR) </para>
<link linkend="_struct_i_t_m___type">ITM_Type</link>
<para>Structure type to access the Instrumentation Trace Macrocell Register (ITM) </para>
<link linkend="_struct_i_w_d_g___type_def">IWDG_TypeDef</link>
<para>Independent WATCHDOG </para>
<link linkend="_struct_n_v_i_c___type">NVIC_Type</link>
<para>Structure type to access the Nested Vectored Interrupt Controller (NVIC) </para>
<link linkend="_struct_o_b___type_def">OB_TypeDef</link>
<para>Option Bytes Registers </para>
<link linkend="_structos__mail_q__cb">os_mailQ_cb</link><link linkend="_structos__mail_q__def">os_mailQ_def</link><link linkend="_structos__message_q__def">os_messageQ_def</link><link linkend="_structos__mutex__def">os_mutex_def</link><link linkend="_structos__pool__cb">os_pool_cb</link><link linkend="_structos__pool__def">os_pool_def</link><link linkend="_structos__semaphore__def">os_semaphore_def</link><link linkend="_structos__thread__def">os_thread_def</link><link linkend="_structos__timer__def">os_timer_def</link><link linkend="_structos_event">osEvent</link><link linkend="_struct_p_w_r___p_v_d_type_def">PWR_PVDTypeDef</link>
<para>PWR PVD configuration structure definition </para>
<link linkend="_struct_p_w_r___type_def">PWR_TypeDef</link>
<para>Power Control </para>
<link linkend="_struct_queue_definition">QueueDefinition</link><link linkend="_struct_r_c_c___clk_init_type_def">RCC_ClkInitTypeDef</link>
<para>RCC System, AHB and APB busses clock configuration structure definition </para>
<link linkend="_struct_r_c_c___osc_init_type_def">RCC_OscInitTypeDef</link>
<para>RCC Internal/External Oscillator (HSE, HSI, LSE and LSI) configuration structure definition </para>
<link linkend="_struct_r_c_c___periph_c_l_k_init_type_def">RCC_PeriphCLKInitTypeDef</link>
<para>RCC extended clocks structure definition </para>
<link linkend="_struct_r_c_c___p_l_l_init_type_def">RCC_PLLInitTypeDef</link>
<para>RCC PLL configuration structure definition </para>
<link linkend="_struct_r_c_c___type_def">RCC_TypeDef</link>
<para>Reset and Clock Control </para>
<link linkend="_struct_r_t_c___type_def">RTC_TypeDef</link>
<para>Real-Time Clock </para>
<link linkend="_struct_s_c_b___type">SCB_Type</link>
<para>Structure type to access the System Control Block (SCB) </para>
<link linkend="_struct_s_cn_s_c_b___type">SCnSCB_Type</link>
<para>Structure type to access the System Control and ID Register not in the SCB </para>
<link linkend="_struct_s_p_i___type_def">SPI_TypeDef</link>
<para>Serial Peripheral Interface </para>
<link linkend="_struct_sys_tick___type">SysTick_Type</link>
<para>Structure type to access the System Timer (SysTick) </para>
<link linkend="_structt___rcv_buffer">t_RcvBuffer</link><link linkend="_struct_t_i_m___base___init_type_def">TIM_Base_InitTypeDef</link>
<para>TIM Time base Configuration Structure definition </para>
<link linkend="_struct_t_i_m___break_dead_time_config_type_def">TIM_BreakDeadTimeConfigTypeDef</link>
<para>TIM Break input(s) and Dead time configuration Structure definition </para>
<link linkend="_struct_t_i_m___clear_input_config_type_def">TIM_ClearInputConfigTypeDef</link>
<para>TIM Clear Input Configuration Handle Structure definition </para>
<link linkend="_struct_t_i_m___clock_config_type_def">TIM_ClockConfigTypeDef</link>
<para>Clock Configuration Handle Structure definition </para>
<link linkend="_struct_t_i_m___encoder___init_type_def">TIM_Encoder_InitTypeDef</link>
<para>TIM Encoder Configuration Structure definition </para>
<link linkend="_struct_t_i_m___hall_sensor___init_type_def">TIM_HallSensor_InitTypeDef</link>
<para>TIM Hall sensor Configuration Structure definition </para>
<link linkend="_struct_t_i_m___handle_type_def">TIM_HandleTypeDef</link>
<para>TIM Time Base Handle Structure definition </para>
<link linkend="_struct_t_i_m___i_c___init_type_def">TIM_IC_InitTypeDef</link>
<para>TIM Input Capture Configuration Structure definition </para>
<link linkend="_struct_t_i_m___master_config_type_def">TIM_MasterConfigTypeDef</link>
<para>TIM Master configuration Structure definition </para>
<link linkend="_struct_t_i_m___o_c___init_type_def">TIM_OC_InitTypeDef</link>
<para>TIM Output Compare Configuration Structure definition </para>
<link linkend="_struct_t_i_m___one_pulse___init_type_def">TIM_OnePulse_InitTypeDef</link>
<para>TIM One Pulse Mode Configuration Structure definition </para>
<link linkend="_struct_t_i_m___slave_config_type_def">TIM_SlaveConfigTypeDef</link>
<para>TIM Slave configuration Structure definition </para>
<link linkend="_struct_t_i_m___type_def">TIM_TypeDef</link>
<para>TIM Timers </para>
<link linkend="_struct_t_p_i___type">TPI_Type</link>
<para>Structure type to access the Trace Port Interface Register (TPI) </para>
<link linkend="_structtsk_task_control_block">tskTaskControlBlock</link><link linkend="_struct_u_s_a_r_t___type_def">USART_TypeDef</link>
<para>Universal Synchronous Asynchronous Receiver Transmitter </para>
<link linkend="_structusb__setup__req">usb_setup_req</link><link linkend="_struct_u_s_b___type_def">USB_TypeDef</link>
<para>Universal Serial Bus Full Speed Device </para>
<link linkend="_struct_u_s_b_d___c_d_c___handle_type_def">USBD_CDC_HandleTypeDef</link><link linkend="_struct_u_s_b_d___c_d_c___line_coding_type_def">USBD_CDC_LineCodingTypeDef</link><link linkend="_struct_u_s_b_d___descriptors_type_def">USBD_DescriptorsTypeDef</link><link linkend="_struct_u_s_b_d___endpoint_type_def">USBD_EndpointTypeDef</link><link linkend="_struct_w_w_d_g___type_def">WWDG_TypeDef</link>
<para>Window WATCHDOG </para>
<link linkend="_structx_event_group_definition">xEventGroupDefinition</link><link linkend="_structx_l_i_s_t">xLIST</link><link linkend="_structx_l_i_s_t___i_t_e_m">xLIST_ITEM</link><link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">xMEMORY_REGION</link><link linkend="_structx_m_i_n_i___l_i_s_t___i_t_e_m">xMINI_LIST_ITEM</link><link linkend="_unionx_p_s_r___type">xPSR_Type</link>
<para>Union type to access the Special-Purpose Program Status Registers (xPSR) </para>
<link linkend="_structx_s_t_a_t_i_c___e_v_e_n_t___g_r_o_u_p">xSTATIC_EVENT_GROUP</link><link linkend="_structx_s_t_a_t_i_c___l_i_s_t">xSTATIC_LIST</link><link linkend="_structx_s_t_a_t_i_c___l_i_s_t___i_t_e_m">xSTATIC_LIST_ITEM</link><link linkend="_structx_s_t_a_t_i_c___m_i_n_i___l_i_s_t___i_t_e_m">xSTATIC_MINI_LIST_ITEM</link><link linkend="_structx_s_t_a_t_i_c___q_u_e_u_e">xSTATIC_QUEUE</link><link linkend="_structx_s_t_a_t_i_c___s_t_r_e_a_m___b_u_f_f_e_r">xSTATIC_STREAM_BUFFER</link><link linkend="_structx_s_t_a_t_i_c___t_c_b">xSTATIC_TCB</link><link linkend="_structx_s_t_a_t_i_c___t_i_m_e_r">xSTATIC_TIMER</link><link linkend="_structx_s_t_r_e_a_m___b_u_f_f_e_r">xSTREAM_BUFFER</link><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s">xTASK_PARAMETERS</link><link linkend="_structx_t_a_s_k___s_t_a_t_u_s">xTASK_STATUS</link><link linkend="_structx_t_i_m_e___o_u_t">xTIME_OUT</link></section>
