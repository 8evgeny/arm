<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f1xx__hal__pwr_8h" xml:lang="en-US">
<title>Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h File Reference</title>
<indexterm><primary>Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pwr.h</primary></indexterm>
<para>

<para>Header file of PWR HAL module. </para>
 
</para>
<programlisting>#include &quot;stm32f1xx_hal_def.h&quot;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_p_w_r___p_v_d_type_def">PWR_PVDTypeDef</link></para>

<para>PWR PVD configuration structure definition. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>   ((uint32_t)0x00010000)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_0</emphasis>   PWR_CR_PLS_2V2</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_1</emphasis>   PWR_CR_PLS_2V3</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_2</emphasis>   PWR_CR_PLS_2V4</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_3</emphasis>   PWR_CR_PLS_2V5</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_4</emphasis>   PWR_CR_PLS_2V6</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_5</emphasis>   PWR_CR_PLS_2V7</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_6</emphasis>   PWR_CR_PLS_2V8</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_PVDLEVEL_7</emphasis>   PWR_CR_PLS_2V9</para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___p_v_d___mode_1ga3a4bf701a36a14a4edf4dc5a28153277">PWR_PVD_MODE_NORMAL</link>   0x00000000U</para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___p_v_d___mode_1ga102d7b8354419990a2a780f61cd020a6">PWR_PVD_MODE_IT_RISING</link>   0x00010001U</para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___p_v_d___mode_1gab600a54f3a588de836cfe4b727ab8a53">PWR_PVD_MODE_IT_FALLING</link>   0x00010002U</para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___p_v_d___mode_1gac531fbf14457e6595505354fad521b67">PWR_PVD_MODE_IT_RISING_FALLING</link>   0x00010003U</para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___p_v_d___mode_1ga1a946b01887aa886de329a92c3ab0dd4">PWR_PVD_MODE_EVENT_RISING</link>   0x00020001U</para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___p_v_d___mode_1gaaedbe45f1a1ea6c30af6ac51abae0cae">PWR_PVD_MODE_EVENT_FALLING</link>   0x00020002U</para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___p_v_d___mode_1ga7455387c8e9049f9f66b46423d4f4091">PWR_PVD_MODE_EVENT_RISING_FALLING</link>   0x00020003U</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_WAKEUP_PIN1</emphasis>   <link linkend="_group___peripheral___registers___bits___definition_1ga7ac8c15a08bbee754ea720b0d4a4f580">PWR_CSR_EWUP</link></para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_MAINREGULATOR_ON</emphasis>   0x00000000U</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_LOWPOWERREGULATOR_ON</emphasis>   <link linkend="_group___peripheral___registers___bits___definition_1ga3aeb8d6f2539b0a3a4b851aeba0eea66">PWR_CR_LPDS</link></para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_SLEEPENTRY_WFI</emphasis>   ((uint8_t)0x01)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_SLEEPENTRY_WFE</emphasis>   ((uint8_t)0x02)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_STOPENTRY_WFI</emphasis>   ((uint8_t)0x01)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_STOPENTRY_WFE</emphasis>   ((uint8_t)0x02)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_FLAG_WU</emphasis>   <link linkend="_group___peripheral___registers___bits___definition_1ga9465bb7ad9ca936688344e2a077539e6">PWR_CSR_WUF</link></para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_FLAG_SB</emphasis>   <link linkend="_group___peripheral___registers___bits___definition_1gab4fd42f153660593cad6f4fe22ff76bb">PWR_CSR_SBF</link></para>
</listitem>
            <listitem><para>#define <emphasis role="strong">PWR_FLAG_PVDO</emphasis>   <link linkend="_group___peripheral___registers___bits___definition_1ga3535ce181895cc00afeb28dcac68d04c">PWR_CSR_PVDO</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga2977135bbea35b786805eea640d1c884">__HAL_PWR_GET_FLAG</link>(__FLAG__)   ((PWR-&gt;CSR &amp; (__FLAG__)) == (__FLAG__))</para>

<para>Check PWR flag is set or not. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga96f24bf4b16c9f944cd829100bf746e5">__HAL_PWR_CLEAR_FLAG</link>(__FLAG__)   SET_BIT(PWR-&gt;CR, ((__FLAG__) &lt;&lt; 2))</para>

<para>Clear the PWR&apos;s pending flags. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga3180f039cf14ef78a64089f387f8f9c2">__HAL_PWR_PVD_EXTI_ENABLE_IT</link>()   SET_BIT(EXTI-&gt;IMR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>Enable interrupt on PVD Exti Line 16. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1gad240d7bf8f15191b068497b9aead1f1f">__HAL_PWR_PVD_EXTI_DISABLE_IT</link>()   CLEAR_BIT(EXTI-&gt;IMR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>Disable interrupt on PVD Exti Line 16. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1gae5ba5672fe8cb7c1686c7f2cc211b128">__HAL_PWR_PVD_EXTI_ENABLE_EVENT</link>()   SET_BIT(EXTI-&gt;EMR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>Enable event on PVD Exti Line 16. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga8bd379e960497722450c7cea474a7e7a">__HAL_PWR_PVD_EXTI_DISABLE_EVENT</link>()   CLEAR_BIT(EXTI-&gt;EMR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>Disable event on PVD Exti Line 16. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga5b971478563a00e1ee1a9d8ca8054e08">__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE</link>()   SET_BIT(EXTI-&gt;FTSR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>PVD EXTI line configuration: set falling edge trigger. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga1ca57168205f8cd8d1014e6eb9465f2d">__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE</link>()   CLEAR_BIT(EXTI-&gt;FTSR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>Disable the PVD Extended Interrupt Falling Trigger. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga7bef3f30c9fe267c99d5240fbf3f878c">__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE</link>()   SET_BIT(EXTI-&gt;RTSR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>PVD EXTI line configuration: set rising edge trigger. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga1ca8fd7f3286a176f6be540c75a004c6">__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE</link>()   CLEAR_BIT(EXTI-&gt;RTSR, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>Disable the PVD Extended Interrupt Rising Trigger. This parameter can be: </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga638033d236eb78c1e5ecb9b49c4e7f36">__HAL_PWR_PVD_EXTI_ENABLE_RISING_FALLING_EDGE</link>()   <link linkend="_group___p_w_r___exported___macros_1ga7bef3f30c9fe267c99d5240fbf3f878c">__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE</link>();<link linkend="_group___p_w_r___exported___macros_1ga5b971478563a00e1ee1a9d8ca8054e08">__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE</link>();</para>

<para>PVD EXTI line configuration: set rising &amp; falling edge trigger. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga3f66c9c0c214cd08c24674904dcdc4e0">__HAL_PWR_PVD_EXTI_DISABLE_RISING_FALLING_EDGE</link>()   <link linkend="_group___p_w_r___exported___macros_1ga1ca8fd7f3286a176f6be540c75a004c6">__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE</link>();<link linkend="_group___p_w_r___exported___macros_1ga1ca57168205f8cd8d1014e6eb9465f2d">__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE</link>();</para>

<para>Disable the PVD Extended Interrupt Rising &amp; Falling Trigger. This parameter can be: </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1ga5e66fa75359b51066e0731ac1e5ae438">__HAL_PWR_PVD_EXTI_GET_FLAG</link>()   (EXTI-&gt;PR &amp; (<link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>))</para>

<para>Check whether the specified PVD EXTI interrupt flag is set or not. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1gac0fb2218bc050f5d8fdb1a3f28590352">__HAL_PWR_PVD_EXTI_CLEAR_FLAG</link>()   (EXTI-&gt;PR = (<link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>))</para>

<para>Clear the PVD EXTI flag. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___p_w_r___exported___macros_1gaba4a7968f5c4c4ca6a7047b147ba18d4">__HAL_PWR_PVD_EXTI_GENERATE_SWIT</link>()   SET_BIT(EXTI-&gt;SWIER, <link linkend="_group___p_w_r___private___constants_1ga43a49255649e03d2d2b6b12c5c379d2b">PWR_EXTI_LINE_PVD</link>)</para>

<para>Generate a Software interrupt on selected EXTI line. </para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_PWR_PVD_LEVEL</emphasis>(LEVEL)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_PWR_PVD_MODE</emphasis>(MODE)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_PWR_WAKEUP_PIN</emphasis>(PIN)   (((PIN) == PWR_WAKEUP_PIN1))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_PWR_REGULATOR</emphasis>(REGULATOR)</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_PWR_SLEEP_ENTRY</emphasis>(ENTRY)   (((ENTRY) == PWR_SLEEPENTRY_WFI) || ((ENTRY) == PWR_SLEEPENTRY_WFE))</para>
</listitem>
            <listitem><para>#define <emphasis role="strong">IS_PWR_STOP_ENTRY</emphasis>(ENTRY)   (((ENTRY) == PWR_STOPENTRY_WFI) || ((ENTRY) == PWR_STOPENTRY_WFE))</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <emphasis role="strong">HAL_PWR_DeInit</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnableBkUpAccess</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_DisableBkUpAccess</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_ConfigPVD</emphasis> (<link linkend="_struct_p_w_r___p_v_d_type_def">PWR_PVDTypeDef</link> *sConfigPVD)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnablePVD</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_DisablePVD</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnableWakeUpPin</emphasis> (uint32_t WakeUpPinx)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_DisableWakeUpPin</emphasis> (uint32_t WakeUpPinx)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnterSTOPMode</emphasis> (uint32_t Regulator, uint8_t STOPEntry)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnterSLEEPMode</emphasis> (uint32_t Regulator, uint8_t SLEEPEntry)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnterSTANDBYMode</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnableSleepOnExit</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_DisableSleepOnExit</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_EnableSEVOnPend</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_DisableSEVOnPend</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_PVD_IRQHandler</emphasis> (void)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">HAL_PWR_PVDCallback</emphasis> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Header file of PWR HAL module. </para>

<para><formalpara><title>Author</title>

<para>MCD Application Team</para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
<formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; Copyright (c) 2016 STMicroelectronics. All rights reserved.</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>

<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
</section>
</section>
