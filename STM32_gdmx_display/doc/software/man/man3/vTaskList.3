.TH "vTaskList" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vTaskList \- vTaskList
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
task\&. h 
.PP
.nf
void vTaskList( char *pcWriteBuffer );
.fi
.PP
.PP
configUSE_TRACE_FACILITY and configUSE_STATS_FORMATTING_FUNCTIONS must both be defined as 1 for this function to be available\&. See the configuration section of the FreeRTOS\&.org website for more information\&.
.PP
NOTE 1: This function will disable interrupts for its duration\&. It is not intended for normal application runtime use but as a debug aid\&.
.PP
Lists all the current tasks, along with their current state and stack usage high water mark\&.
.PP
Tasks are reported as blocked ('B'), ready ('R'), deleted ('D') or suspended ('S')\&.
.PP
PLEASE NOTE:
.PP
This function is provided for convenience only, and is used by many of the demo applications\&. Do not consider it to be part of the scheduler\&.
.PP
vTaskList() calls uxTaskGetSystemState(), then formats part of the uxTaskGetSystemState() output into a human readable table that displays task names, states and stack usage\&.
.PP
vTaskList() has a dependency on the sprintf() C library function that might bloat the code size, use a lot of stack, and provide different results on different platforms\&. An alternative, tiny, third party, and limited functionality implementation of sprintf() is provided in many of the FreeRTOS/Demo sub-directories in a file called printf-stdarg\&.c (note printf-stdarg\&.c does not provide a full snprintf() implementation!)\&.
.PP
It is recommended that production systems call uxTaskGetSystemState() directly to get access to raw stats data, rather than indirectly through a call to vTaskList()\&.
.PP
\fBParameters\fP
.RS 4
\fIpcWriteBuffer\fP A buffer into which the above mentioned details will be written, in ASCII form\&. This buffer is assumed to be large enough to contain the generated report\&. Approximately 40 bytes per task should be sufficient\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
