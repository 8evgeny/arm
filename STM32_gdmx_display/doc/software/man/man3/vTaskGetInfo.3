.TH "vTaskGetInfo" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vTaskGetInfo \- vTaskGetInfo
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
task\&. h 
.PP
.nf
void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState );
.fi
.PP
.PP
configUSE_TRACE_FACILITY must be defined as 1 for this function to be available\&. See the configuration section for more information\&.
.PP
Populates a TaskStatus_t structure with information about a task\&.
.PP
\fBParameters\fP
.RS 4
\fIxTask\fP Handle of the task being queried\&. If xTask is NULL then information will be returned about the calling task\&.
.br
\fIpxTaskStatus\fP A pointer to the TaskStatus_t structure that will be filled with information about the task referenced by the handle passed using the xTask parameter\&.
.RE
.PP
@xGetFreeStackSpace The TaskStatus_t structure contains a member to report the stack high water mark of the task being queried\&. Calculating the stack high water mark takes a relatively long time, and can make the system temporarily unresponsive - so the xGetFreeStackSpace parameter is provided to allow the high water mark checking to be skipped\&. The high watermark value will only be written to the TaskStatus_t structure if xGetFreeStackSpace is not set to pdFALSE;
.PP
\fBParameters\fP
.RS 4
\fIeState\fP The TaskStatus_t structure contains a member to report the state of the task being queried\&. Obtaining the task state is not as fast as a simple assignment - so the eState parameter is provided to allow the state information to be omitted from the TaskStatus_t structure\&. To obtain state information then set eState to eInvalid - otherwise the value passed in eState will be reported as the task state in the TaskStatus_t structure\&.
.RE
.PP
Example usage: 
.PP
.nf

void vAFunction( void )
{
TaskHandle_t xHandle;
TaskStatus_t xTaskDetails;

   // Obtain the handle of a task from its name\&.
   xHandle = xTaskGetHandle( 'Task_Name' );

   // Check the handle is not NULL\&.
   configASSERT( xHandle );

   // Use the handle to obtain further information about the task\&.
   vTaskGetInfo( xHandle,
                 &xTaskDetails,
                 pdTRUE, // Include the high water mark in xTaskDetails\&.
                 eInvalid ); // Include the task state in xTaskDetails\&.
}
  
.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
