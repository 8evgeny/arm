.TH "vCoRoutineSchedule" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vCoRoutineSchedule \- vCoRoutineSchedule
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
croutine\&. h 
.PP
.nf

void vCoRoutineSchedule( void );
.fi
.PP
.PP
Run a co-routine\&.
.PP
vCoRoutineSchedule() executes the highest priority co-routine that is able to run\&. The co-routine will execute until it either blocks, yields or is preempted by a task\&. Co-routines execute cooperatively so one co-routine cannot be preempted by another, but can be preempted by a task\&.
.PP
If an application comprises of both tasks and co-routines then vCoRoutineSchedule should be called from the idle task (in an idle task hook)\&.
.PP
Example usage: 
.PP
.nf

// This idle task hook will schedule a co-routine each time it is called\&.
// The rest of the idle task will execute between co-routine calls\&.
void vApplicationIdleHook( void )
{
   vCoRoutineSchedule();
}

// Alternatively, if you do not require any other part of the idle task to
// execute, the idle task hook can call vCoRoutineScheduler() within an
// infinite loop\&.
void vApplicationIdleHook( void )
{
   for( ;; )
   {
       vCoRoutineSchedule();
   }
}
.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
