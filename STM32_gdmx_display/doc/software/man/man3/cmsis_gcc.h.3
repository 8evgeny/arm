.TH "Drivers/CMSIS/Include/cmsis_gcc.h" 3 "Mon May 24 2021" "gdmx-display" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/CMSIS/Include/cmsis_gcc.h \- CMSIS compiler GCC header file\&.  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__has_builtin\fP(x)   (0)"
.br
.ti -1c
.RI "#define \fB__ASM\fP   __asm"
.br
.ti -1c
.RI "#define \fB__INLINE\fP   inline"
.br
.ti -1c
.RI "#define \fB__STATIC_INLINE\fP   static inline"
.br
.ti -1c
.RI "#define \fB__STATIC_FORCEINLINE\fP   \fB__attribute__\fP((always_inline)) static inline"
.br
.ti -1c
.RI "#define \fB__NO_RETURN\fP   \fB__attribute__\fP((__noreturn__))"
.br
.ti -1c
.RI "#define \fB__USED\fP   \fB__attribute__\fP((used))"
.br
.ti -1c
.RI "#define \fB__WEAK\fP   \fB__attribute__\fP((weak))"
.br
.ti -1c
.RI "#define \fB__PACKED\fP   \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__PACKED_STRUCT\fP   struct \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__PACKED_UNION\fP   union \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32\fP(x)   (((struct T_UINT32 *)(x))\->v)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_WRITE\fP(addr,  val)   (void)((((struct T_UINT16_WRITE *)(void *)(addr))\->v) = (val))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_READ\fP(addr)   (((const struct T_UINT16_READ *)(const void *)(addr))\->v)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_WRITE\fP(addr,  val)   (void)((((struct T_UINT32_WRITE *)(void *)(addr))\->v) = (val))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_READ\fP(addr)   (((const struct T_UINT32_READ *)(const void *)(addr))\->v)"
.br
.ti -1c
.RI "#define \fB__ALIGNED\fP(x)   \fB__attribute__\fP((aligned(x)))"
.br
.ti -1c
.RI "#define \fB__RESTRICT\fP   __restrict"
.br
.ti -1c
.RI "#define \fB__CMSIS_GCC_OUT_REG\fP(r)   '=r' (r)"
.br
.ti -1c
.RI "#define \fB__CMSIS_GCC_RW_REG\fP(r)   '+r' (r)"
.br
.ti -1c
.RI "#define \fB__CMSIS_GCC_USE_REG\fP(r)   'r' (r)"
.br
.ti -1c
.RI "#define \fB__NOP\fP()   __ASM volatile ('nop')"
.br
.RI "No Operation\&. "
.ti -1c
.RI "#define \fB__WFI\fP()   __ASM volatile ('wfi')"
.br
.RI "Wait For Interrupt\&. "
.ti -1c
.RI "#define \fB__WFE\fP()   __ASM volatile ('wfe')"
.br
.RI "Wait For Event\&. "
.ti -1c
.RI "#define \fB__SEV\fP()   __ASM volatile ('sev')"
.br
.RI "Send Event\&. "
.ti -1c
.RI "#define \fB__BKPT\fP(value)   __ASM volatile ('bkpt '#value)"
.br
.RI "Breakpoint\&. "
.ti -1c
.RI "#define \fB__CLZ\fP   (uint8_t)__builtin_clz"
.br
.RI "Count leading zeros\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fB__attribute__\fP ((packed)) T_UINT32"
.br
.ti -1c
.RI "__STATIC_FORCEINLINE void \fB__enable_irq\fP (void)"
.br
.RI "Enable IRQ Interrupts\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE void \fB__disable_irq\fP (void)"
.br
.RI "Disable IRQ Interrupts\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_CONTROL\fP (void)"
.br
.RI "Enable IRQ Interrupts\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_CONTROL\fP (uint32_t control)"
.br
.RI "Set Control Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_IPSR\fP (void)"
.br
.RI "Get IPSR Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_APSR\fP (void)"
.br
.RI "Get APSR Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_xPSR\fP (void)"
.br
.RI "Get xPSR Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_PSP\fP (void)"
.br
.RI "Get Process Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_PSP\fP (uint32_t topOfProcStack)"
.br
.RI "Set Process Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_MSP\fP (void)"
.br
.RI "Get Main Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_MSP\fP (uint32_t topOfMainStack)"
.br
.RI "Set Main Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_PRIMASK\fP (void)"
.br
.RI "Get Priority Mask\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_PRIMASK\fP (uint32_t priMask)"
.br
.RI "Set Priority Mask\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_FPSCR\fP (void)"
.br
.RI "Get FPSCR\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_FPSCR\fP (uint32_t fpscr)"
.br
.RI "Set FPSCR\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE void \fB__ISB\fP (void)"
.br
.RI "Instruction Synchronization Barrier\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE void \fB__DSB\fP (void)"
.br
.RI "Data Synchronization Barrier\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE void \fB__DMB\fP (void)"
.br
.RI "Data Memory Barrier\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE uint32_t \fB__REV\fP (uint32_t value)"
.br
.RI "Reverse byte order (32 bit) "
.ti -1c
.RI "__STATIC_FORCEINLINE uint32_t \fB__REV16\fP (uint32_t value)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "__STATIC_FORCEINLINE int16_t \fB__REVSH\fP (int16_t value)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "__STATIC_FORCEINLINE uint32_t \fB__ROR\fP (uint32_t op1, uint32_t op2)"
.br
.RI "Rotate Right in unsigned value (32 bit) "
.ti -1c
.RI "__STATIC_FORCEINLINE uint32_t \fB__RBIT\fP (uint32_t value)"
.br
.RI "Reverse bit order of value\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE int32_t \fB__SSAT\fP (int32_t val, uint32_t sat)"
.br
.RI "Signed Saturate\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE uint32_t \fB__USAT\fP (int32_t val, uint32_t sat)"
.br
.RI "Unsigned Saturate\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT16_WRITE\fP { uint16_t v"
.br
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT16_READ\fP { uint16_t v"
.br
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT32_WRITE\fP { uint32_t v"
.br
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT32_READ\fP { uint32_t v"
.br
.in -1c
.SH "Detailed Description"
.PP 
CMSIS compiler GCC header file\&. 


.PP
\fBVersion\fP
.RS 4
V5\&.0\&.4 
.RE
.PP
\fBDate\fP
.RS 4
09\&. April 2018 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for gdmx-display from the source code\&.
