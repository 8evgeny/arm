// ***********************************************************************************
// Проект:      Lab3_5 
// Программа:   Работа с АЦП. Измерение напряжения на потенциометре 
//              и температуры кристалла МК.
//              Режим режим многократного преобразования c автоматическим переключением 
//              нескольких каналов и использованием прямого доступа к памяти
// Микроконтроллер: 1986ВЕ92У
// Устройство: Отладочная плата К1986ВЕ92QI
// Файл: adc.h 
// Назначение: Управление АЦП      
// Компилятор:  Armcc 5.03.0.76 из комплекта Keil uVision 4.72.1.0 
// ***********************************************************************************
#ifndef __U_ADC
 #define __U_ADC

#include "common.h"
#include "stdio.h"
#include "mlt_lcd.h"

// Использовать потенциометр, имеющийся на отладочной плате и подключеный к каналу ADC7
//#define U_ADC_USE_ONBOARD_POTENTIOMETER


// Если используем потенциометр, имеющийся на отладочной плате
#ifdef U_ADC_USE_ONBOARD_POTENTIOMETER

 // Канал для измерения напряжения
 #define U_ADC_U_CH_MSK  ADC_CH_ADC7_MSK
 #define U_ADC_U_CH      ADC_CH_ADC7
 #define U_ADC_U_PIN     PORT_Pin_7

// Если используем внешний потенциометр
#else

 // Канал для измерения напряжения
 #define U_ADC_U_CH_MSK  ADC_CH_ADC6_MSK
 #define U_ADC_U_CH      ADC_CH_ADC6
 #define U_ADC_U_PIN     PORT_Pin_6

#endif


// Калибровка вольтметра путем указания полученного значения АЦП U_ADC_D
// для известного напряжения U_ADC_U на входе АЦП 
#define U_ADC_U  3.190F        
#define U_ADC_D  0xF90

// Калибровочные данные датчика температуры
#define ADC_TS_T1 25.0F     // Температура в 1-й точке
#define ADC_TS_D1 0x6A0     // Значение АЦП в 1-й точке   
#define ADC_TS_T2 60.0F     // Температура во 2-й точке
#define ADC_TS_D2 0x7A0     // Значение АЦП во 2-й точке 

// Буфер для хранения результатов работы АЦП и его размер
// Размер увеличен вдвое, поскольку одновременно измеряются и напряжение, и температура.
#define U_ADC_BUFFER_SIZE 2*32

// Структура для инициализации DMA
extern DMA_CtrlDataInitTypeDef DMA_InitStructure;
// Структура для инициализации канала DMA
extern DMA_ChannelInitTypeDef DMA_Channel_InitStructure;
  
// Событие (Event) о завершении серии аналого-цифровых преобразований
#define EVENT_ADC_EOC 0x0001

// Инициализировать АЦП
void U_ADC_Init (void);

// Задача по измерению напряжения на входе АЦП и температуры микроконтроллера
__task void U_ADC_Task_U_T_DMA_Function (void);

// Переменная для хранения идентификатора задачи
extern OS_TID U_ADC_Task_ID;


#endif 

